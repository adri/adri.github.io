{"version":3,"sources":["webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/blog-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/blog.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx"],"names":["Blog","posts","useMinimalBlogConfig","tagsPath","basePath","title","sx","alignItems","justifyContent","flexFlow","variant","as","Link","to","replaceSlashes","mt","BlogComponent","allPost","data","nodes","query","ItemTags","tags","Fragment","map","tag","i","key","slug","name","BlogListItem","post","showTags","mb","date","fontSize","fontWeight","color","a","excerpt","Listing","className"],"mappings":"iQA0CeA,EAjBF,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,MAAwB,EACPC,cAAvBC,EAD8B,EAC9BA,SAAUC,EADoB,EACpBA,SAElB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKC,MAAM,SACX,YAAC,IAAD,CAAMC,GAAI,CAAEC,WAAY,SAAUC,eAAgB,gBAAiBC,SAAU,SAC3E,YAAC,IAAD,CAASC,QAAQ,aAAjB,QACA,YAAC,IAAD,CAAOC,GAAIC,OAAMN,GAAI,CAAEI,QAAS,mBAAqBG,GAAIC,YAAe,IAAIV,EAAL,IAAiBD,IAAxF,kBAIF,YAAC,IAAD,CAASF,MAAOA,EAAOK,GAAI,CAAES,GAAI,CAAC,EAAG,QClC5BC,UCOA,YAA8C,IACnDC,EADmD,EAAfC,KACpCD,QAER,OAAO,kBAAC,EAAD,CAAMhB,MAAOgB,EAAQE,SDVfH,IAEFI,EAAQ,c,uHEyBNC,EAjBE,SAAC,GAAwB,IAAtBC,EAAsB,EAAtBA,KAAsB,EACTpB,cAAvBC,EADgC,EAChCA,SAAUC,EADsB,EACtBA,SAElB,OACE,kBAAC,IAAMmB,SAAP,KACGD,EAAKE,KAAI,SAACC,EAAKC,GAAN,OACR,kBAAC,IAAMH,SAAP,CAAgBI,IAAKF,EAAIG,QACpBF,GAAF,KACD,kBAAC,IAAD,CAAOf,GAAIC,OAAMC,GAAIC,YAAe,IAAIV,EAAL,IAAiBD,EAAjB,IAA6BsB,EAAIG,OACjEH,EAAII,YCiCFC,EAhCM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,IAASC,gBAAT,gBACnB,YAAC,IAAD,CAAKC,GAAI,GACP,iBAAG3B,GAAI,CAAE2B,GAAI,IACX,wBAAOF,EAAKG,OAEd,YAAC,IAAD,CACEvB,GAAIC,OACJC,GAAIkB,EAAKH,KACTtB,GAAI,CAAE6B,SAAU,CAAC,EAAG,EAAG,GAAIC,WAAY,OAAQC,MAAO,SAErDN,EAAK1B,OAER,iBACEC,GAAI,CACF+B,MAAO,YACPtB,GAAI,EACJkB,GAAI,EACJK,EAAG,CAAED,MAAO,aACZF,SAAU,CAAC,EAAG,EAAG,KAGlBJ,EAAKQ,QACLR,EAAKT,MAAQU,GACZ,YAAC,IAAMT,SAAP,WAEE,YAAC,EAAD,CAAUD,KAAMS,EAAKT,WCnBhBkB,IARC,SAAC,GAAD,IAAGvC,EAAH,EAAGA,MAAH,IAAUwC,iBAAV,eAA0BT,gBAA1B,gBACd,uBAAS1B,GAAI,CAAE2B,GAAI,CAAC,EAAG,EAAG,IAAMQ,UAAWA,GACxCxC,EAAMuB,KAAI,SAACO,GAAD,OACT,YAAC,EAAD,CAAcJ,IAAKI,EAAKH,KAAMG,KAAMA,EAAMC,SAAUA","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-blog-query-tsx-7263fee20cc103b11fe9.js","sourcesContent":["/** @jsx jsx */\nimport { jsx, Heading, Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport { Flex } from \"@theme-ui/components\"\nimport Layout from \"./layout\"\nimport Listing from \"./listing\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport SEO from \"./seo\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n}\n\nconst Blog = ({ posts }: PostsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\n        <Heading variant=\"styles.h2\">Blog</Heading>\n        <TLink as={Link} sx={{ variant: `links.secondary` }} to={replaceSlashes(`/${basePath}/${tagsPath}`)}>\n          View all tags\n        </TLink>\n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  )\n}\n\nexport default Blog\n","import { graphql } from \"gatsby\"\nimport BlogComponent from \"../components/blog\"\n\nexport default BlogComponent\n\nexport const query = graphql`\n  query($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Blog from \"../../../components/blog\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n}\n\nexport default function MinimalBlogCoreBlog({ data }: Props) {\n  const { allPost } = data\n\n  return <Blog posts={allPost.nodes} />\n}\n","import React from \"react\"\nimport { Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </TLink>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport React from \"react\";\nimport { jsx, Link as TLink } from \"theme-ui\";\nimport { Box } from \"@theme-ui/components\";\nimport { Link } from \"gatsby\";\nimport ItemTags from \"@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags\";\n\ntype BlogListItemProps = {\n  post: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  };\n  showTags?: boolean;\n};\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <p sx={{ mb: 1 }}>\n      <time>{post.date}</time>\n    </p>\n    <TLink\n      as={Link}\n      to={post.slug}\n      sx={{ fontSize: [2, 2, 3], fontWeight: \"bold\", color: `text` }}\n    >\n      {post.title}\n    </TLink>\n    <p\n      sx={{\n        color: `secondary`,\n        mt: 1,\n        mb: 5,\n        a: { color: `secondary` },\n        fontSize: [1, 1, 2],\n      }}\n    >\n      {post.excerpt}\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n);\n\nexport default BlogListItem;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport BlogListItem from \"@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item\";\n\ntype ListingProps = {\n  posts: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  }[];\n  className?: string;\n  showTags?: boolean;\n};\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [3, 4, 5] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n);\n\nexport default Listing;\n"],"sourceRoot":""}