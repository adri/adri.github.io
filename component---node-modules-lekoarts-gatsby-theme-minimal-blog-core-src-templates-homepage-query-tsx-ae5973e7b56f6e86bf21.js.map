{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/blog-list-item.tsx","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/listing.tsx"],"names":["name","List","children","sx","mb","ul","margin","padding","li","listStyle","a","variant","Text","props","console","warn","layoutProps","_frontmatter","MDXContent","components","mdxType","fontSize","fontWeight","color","isMDXComponent","makeShortcode","Title","Link","text","to","href","Homepage","posts","useMinimalBlogConfig","basePath","blogPath","p","mt","replaceSlashes","showTags","HomepageComponent","allPost","data","nodes","query","ItemTags","tags","tagsPath","Fragment","map","tag","i","key","slug","as","BlogListItem","post","date","title","excerpt","Listing","className"],"mappings":"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","file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-ae5973e7b56f6e86bf21.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Text = makeShortcode(\"Text\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Text sx={{\n      fontSize: [4, 5, 6],\n      fontWeight: `bold`,\n      color: `heading`\n    }} mdxType=\"Text\">\n  Hi 👋\n    </Text>\n    <p>{`I'm Adrian - I’m a software developer and site reliability engineer. My drive is to make technology easy to use and simple to develop.`}</p>\n    <p>{`I want to live in a world filled with innovative technology, programmable weather for endless sunshine and MacBooks bundled with a fountain of third-wave coffee.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3 },\n      a: { variant: `links.listItem` },\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Title = makeShortcode(\"Title\");\nconst Link = makeShortcode(\"Link\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <Title text=\"Digital Garden 🏡\" mdxType=\"Title\">\n  <Link to={`./notes`} mdxType=\"Link\">Overview</Link>\n    </Title>\n    <p>{`These notes are unpolished collections of thoughts, unfinished ideas, and things I want to remember later. In the spirit of learning in public, I'm sharing them here.`}</p>\n    <p>{`Have fun exploring, if you want!`}</p>\n    <a href=\"./notes\">Overview</a>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport { Link } from \"gatsby\";\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\";\nimport Title from \"@lekoarts/gatsby-theme-minimal-blog/src/components/title\";\nimport Listing from \"./listing\";\nimport List from \"@lekoarts/gatsby-theme-minimal-blog/src/components/list\";\nimport useMinimalBlogConfig from \"@lekoarts/gatsby-theme-minimal-blog/src/hooks/use-minimal-blog-config\";\nimport replaceSlashes from \"@lekoarts/gatsby-theme-minimal-blog/src/utils/replaceSlashes\";\n// @ts-ignore\nimport Hero from \"../texts/hero\";\n// @ts-ignore\nimport Bottom from \"../texts/bottom\";\n\ntype PostsProps = {\n  posts: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  }[];\n};\n\nconst Homepage = ({ posts }: PostsProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig();\n\n  return (\n    <Layout>\n      <section sx={{ mb: [4, 5, 6], p: { fontSize: [1, 2, 3], mt: 3 } }}>\n        <Hero />\n      </section>\n      <List>\n        <Bottom />\n      </List>\n      <Title text=\"Blog Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>\n          Read all posts\n        </Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n    </Layout>\n  );\n};\n\nexport default Homepage;\n","import { graphql } from \"gatsby\"\nimport HomepageComponent from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport const query = graphql`\n  query($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Homepage from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n}\n\nexport default function MinimalBlogCoreHomepage({ data }: Props) {\n  const { allPost } = data\n\n  return <Homepage posts={allPost.nodes} />\n}\n","import React from \"react\"\nimport { Link as TLink } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <TLink as={Link} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </TLink>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport React from \"react\";\nimport { jsx, Link as TLink } from \"theme-ui\";\nimport { Box } from \"@theme-ui/components\";\nimport { Link } from \"gatsby\";\nimport ItemTags from \"@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags\";\n\ntype BlogListItemProps = {\n  post: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  };\n  showTags?: boolean;\n};\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <p sx={{ mb: 1 }}>\n      <time>{post.date}</time>\n    </p>\n    <TLink\n      as={Link}\n      to={post.slug}\n      sx={{ fontSize: [2, 2, 3], fontWeight: \"bold\", color: `text` }}\n    >\n      {post.title}\n    </TLink>\n    <p\n      sx={{\n        color: `secondary`,\n        mt: 1,\n        mb: [3, 5],\n        a: { color: `secondary` },\n        fontSize: [1, 1, 2],\n      }}\n    >\n      {post.excerpt}\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n);\n\nexport default BlogListItem;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport BlogListItem from \"@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item\";\n\ntype ListingProps = {\n  posts: {\n    slug: string;\n    title: string;\n    date: string;\n    excerpt: string;\n    description: string;\n    timeToRead?: number;\n    tags?: {\n      name: string;\n      slug: string;\n    }[];\n  }[];\n  className?: string;\n  showTags?: boolean;\n};\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [3, 4, 5] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n);\n\nexport default Listing;\n"],"sourceRoot":""}