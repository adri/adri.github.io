{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack:///./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js","webpack:///./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","webpack:///./plugins/gatsby-theme-brain/src/components/BrainNote.js","webpack:///./plugins/gatsby-theme-brain/src/templates/brain.js","webpack:///./node_modules/@babel/runtime/helpers/construct.js"],"names":["module","exports","TypeError","iter","Symbol","iterator","Object","Array","from","arrayLikeToArray","arr","isArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_setPrototypeOf","o","p","setPrototypeOf","__proto__","len","length","i","arr2","React","require","useMDXComponents","mdx","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","values","key","fn","minLen","n","prototype","toString","call","slice","constructor","name","test","Reflect","construct","sham","Proxy","Date","e","shadow","map","v","BrainNote","referenceBlock","note","references","inboundReferenceNotes","concat","ref","mb","title","as","Link","to","slug","mt","description","childMdx","excerpt","variant","id","sx","my","boxShadow","join","a","borderBottomWidth","borderBottomStyle","borderBottomColor","textDecoration","body","fontSize","fontStyle","query","data","brainNote","linkedNotes","isNativeReflectConstruct","_construct","Parent","args","Class","push","apply","instance","Function","bind","arguments"],"mappings":"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","file":"component---plugins-gatsby-theme-brain-src-templates-brain-js-7cc221aa5f26fd1e367a.js","sourcesContent":["function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;","/** @jsx jsx */\nimport React from \"react\";\nimport MDXRenderer from \"gatsby-plugin-mdx/mdx-renderer\";\nimport Layout from \"@lekoarts/gatsby-theme-minimal-blog/src/components/layout\";\nimport { Container, Heading, Text, Link as TLink, jsx, Box } from \"theme-ui\";\nimport { Link } from \"gatsby\";\nimport SEO from \"@lekoarts/gatsby-theme-minimal-blog/src/components/seo\";\n\nconst px = [`32px`, `16px`, `8px`, `4px`];\nconst shadow = px.map((v) => `rgba(0, 0, 0, 0.15) 0px ${v} ${v} 0px`);\n\nconst BrainNote = ({ note }) => {\n  let references = [];\n  let referenceBlock;\n\n  if (note.inboundReferenceNotes != null) {\n    references = references.concat(\n      note.inboundReferenceNotes.map((ref) => (\n        <Text mb=\"3\" key={ref.title}>\n          <TLink as={Link} to={`/notes/${ref.slug}`}>\n            {ref.title}\n          </TLink>\n        </Text>\n      ))\n    );\n  }\n\n  if (references.length > 0) {\n    referenceBlock = (\n      <Box mt={5}>\n        <Heading mb={3}>Links to this note</Heading>\n        <Box>{references}</Box>\n      </Box>\n    );\n  }\n\n  return (\n    <Layout>\n      <SEO title={`${note.title}`} description={`${note.childMdx.excerpt}`} />\n      <Container variant=\"narrow\">\n        <div id=\"brainNote\">\n          <Heading variant=\"styles.h2\">{note.title}</Heading>\n          <div\n            sx={{\n              my: 4,\n              \".gatsby-resp-image-wrapper\": {\n                my: [3, 3, 4],\n                boxShadow: shadow.join(`, `),\n              },\n              a: {\n                borderBottomWidth: \"1px\",\n                borderBottomStyle: \"solid\",\n                borderBottomColor: `primary`,\n                \"&:hover\": {\n                  textDecoration: \"none\",\n                },\n              },\n            }}\n          >\n            <MDXRenderer>{note.childMdx.body}</MDXRenderer>\n          </div>\n          {referenceBlock}\n          <Text sx={{ fontSize: 1, fontStyle: \"italic\", my: 4 }}>\n            These notes are unpolished collections of thoughts, unfinished\n            ideas, and things I want to remember later. In the spirit of\n            learning in public, I'm sharing them here. Have fun exploring, if\n            you want!\n          </Text>\n        </div>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default BrainNote;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport BrainNote from \"../components/BrainNote\";\n\nexport default (props) => {\n  return <BrainNote note={props.data.brainNote} linkedNotes={[]} />;\n};\n\nexport const query = graphql`\n  query AdrianBrainNoteBySlug($slug: String!) {\n    brainNote(slug: { eq: $slug }) {\n      slug\n      title\n      inboundReferenceNotes {\n        title\n        slug\n      }\n      inboundReferences\n      childMdx {\n        body\n        excerpt\n      }\n    }\n  }\n`;\n/*\n, $references: [String]\nallBrainNote(filter: { slug: { in: $references } }) {\n  nodes {\n    slug\n    title\n    childMdx {\n      excerpt\n    }\n  }\n}\n*/\n","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;"],"sourceRoot":""}