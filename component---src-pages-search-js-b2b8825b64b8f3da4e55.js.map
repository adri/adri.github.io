{"version":3,"sources":["webpack:///./node_modules/algoliasearch-helper/src/requestBuilder.js","webpack:///./node_modules/algoliasearch-helper/src/version.js","webpack:///./node_modules/algoliasearch-helper/src/algoliasearch.helper.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectSpread.js","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime/helpers/esm/typeof.js","webpack:///./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/utils.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/context.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/createConnector.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/highlight.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectHighlight.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/core/utils.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/components/Highlighter.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/components/Highlight.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/widgets/Highlight.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/components/Snippet.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/widgets/Snippet.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/indexUtils.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectHits.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectSearchBox.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/createWidgetsManager.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/createInstantSearchManager.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/version.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/createStore.js","webpack:///./node_modules/react-instantsearch-core/dist/es/widgets/InstantSearch.js","webpack:///./node_modules/react-instantsearch-core/dist/es/connectors/connectPoweredBy.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/components/PoweredBy.js","webpack:///./node_modules/react-instantsearch-core/dist/es/core/translatable.js","webpack:///./node_modules/react-instantsearch-dom/dist/es/widgets/PoweredBy.js","webpack:///./src/@lekoarts/gatsby-theme-minimal-blog/components/search.tsx","webpack:///./src/pages/search.js","webpack:///./node_modules/algoliasearch-helper/src/functions/formatSort.js","webpack:///./node_modules/algoliasearch/dist/algoliasearch-lite.umd.js","webpack:///./node_modules/algoliasearch-helper/src/functions/merge.js","webpack:///./node_modules/algoliasearch-helper/src/functions/find.js","webpack:///./node_modules/algoliasearch-helper/src/SearchParameters/RefinementList.js","webpack:///./node_modules/algoliasearch-helper/src/DerivedHelper/index.js","webpack:///./node_modules/algoliasearch-helper/index.js","webpack:///./node_modules/algoliasearch-helper/src/functions/inherits.js","webpack:///./node_modules/classnames/index.js","webpack:///./node_modules/algoliasearch-helper/src/SearchParameters/index.js","webpack:///./node_modules/algoliasearch-helper/src/functions/intersection.js","webpack:///./node_modules/algoliasearch-helper/src/functions/compact.js","webpack:///./node_modules/node-libs-browser/node_modules/events/events.js","webpack:///./node_modules/algoliasearch-helper/src/functions/objectHasKeys.js","webpack:///./node_modules/algoliasearch-helper/src/functions/defaultsPure.js","webpack:///./node_modules/algoliasearch-helper/src/SearchResults/generate-hierarchical-tree.js","webpack:///./node_modules/algoliasearch-helper/src/functions/valToNumber.js","webpack:///./node_modules/algoliasearch-helper/src/functions/findIndex.js","webpack:///./node_modules/algoliasearch-helper/src/functions/omit.js","webpack:///./node_modules/algoliasearch-helper/src/SearchResults/index.js","webpack:///./node_modules/algoliasearch-helper/src/functions/orderBy.js"],"names":["merge","requestBuilder","_getQueries","index","state","queries","push","indexName","params","_getHitsSearchParams","getRefinedDisjunctiveFacets","forEach","refinedFacet","_getDisjunctiveFacetSearchParams","getRefinedHierarchicalFacets","hierarchicalFacet","getHierarchicalFacetByName","currentRefinement","getHierarchicalRefinement","separator","_getHierarchicalFacetSeparator","length","split","facets","concat","disjunctiveFacets","_getHitsHierarchicalFacetsAttributes","facetFilters","_getFacetFilters","numericFilters","_getNumericFilters","additionalParams","tagFilters","_getTagFilters","getQueryParams","facet","hierarchicalRootLevel","hitsPerPage","page","attributesToRetrieve","attributesToHighlight","attributesToSnippet","analytics","clickAnalytics","_getDisjunctiveHierarchicalFacetAttribute","facetName","Object","keys","numericRefinements","attribute","operators","operator","values","value","Array","isArray","vs","map","v","tagRefinements","join","facetsRefinements","facetValue","facetsExcludes","disjunctiveFacetsRefinements","facetValues","orFilters","hierarchicalFacetsRefinements","undefined","attributeToRefine","attributesIndex","rootPath","_getHierarchicalRootPath","indexOf","slice","lastIndexOf","attributes","hierarchicalFacets","reduce","allAttributes","hierarchicalRefinement","name","level","newAttributes","rootLevel","attributeIndex","parentLevel","getSearchForFacetQuery","query","maxFacetHits","stateForSearchForFacetValues","isDisjunctiveFacet","clearRefinements","searchForFacetSearchParameters","facetQuery","module","exports","SearchParameters","SearchResults","DerivedHelper","events","inherits","objectHasKeys","version","AlgoliaSearchHelper","client","options","addAlgoliaAgent","this","setClient","opts","make","lastResults","_queryId","_lastQueryIdReceived","derivedHelpers","_currentNbQueries","setCurrentPage","Error","_change","setPage","isPageReset","getCurrentPage","EventEmitter","prototype","search","_search","onlyWithDerivedHelpers","searchOnlyWithDerivedHelpers","getQuery","searchOnce","cb","tempState","setQueryParameters","self","emit","then","content","results","_originalResponse","e","catch","err","searchForFacetValues","userState","clientHasSFFV","initIndex","isDisjunctive","algoliaQuery","facetHits","f","isRefined","isDisjunctiveFacetRefined","isFacetRefined","setQuery","q","resetPage","clearTags","addDisjunctiveFacetRefinement","addDisjunctiveRefine","apply","arguments","addHierarchicalFacetRefinement","addNumericRefinement","addFacetRefinement","addRefine","addFacetExclusion","addExcludeRefinement","addExclude","addTag","tag","addTagRefinement","removeNumericRefinement","removeDisjunctiveFacetRefinement","removeDisjunctiveRefine","removeHierarchicalFacetRefinement","removeFacetRefinement","removeRefine","removeFacetExclusion","removeExcludeRefinement","removeExclude","removeTag","removeTagRefinement","toggleFacetExclusion","toggleExcludeFacetRefinement","toggleExclude","toggleRefinement","toggleFacetRefinement","toggleRefine","toggleTag","toggleTagRefinement","nextPage","previousPage","setIndex","setQueryParameter","parameter","setState","newState","overrideStateWithoutTriggeringChangeEvent","hasRefinements","getNumericRefinements","isConjunctiveFacet","isHierarchicalFacet","isHierarchicalFacetRefined","isExcluded","isExcludeRefined","isDisjunctiveRefined","hasTag","isTagRefined","hasTagRefinements","getIndex","getPage","getTags","getRefinements","refinements","getConjunctiveRefinements","r","type","getExcludeRefinements","getDisjunctiveRefinements","getNumericRefinement","getHierarchicalFacetBreadcrumb","states","mainQueries","queriesCount","helper","derivedQueries","derivedHelper","derivedState","getModifiedState","derivedStateQueries","queryId","_dispatchAlgoliaResponse","bind","_dispatchAlgoliaError","error","s","specificResults","splice","formattedResponse","containsRefinement","_hasDisjunctiveRefinements","disjunctiveRefinements","event","clearCache","newClient","getClient","derive","fn","detachDerivedHelper","pos","hasPendingRequests","_objectWithoutProperties","source","excluded","key","i","target","objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","call","_objectSpread","ownKeys","filter","sym","getOwnPropertyDescriptor","enumerable","defineProperty","_classCallCheck","instance","Constructor","TypeError","_defineProperties","props","descriptor","configurable","writable","_createClass","protoProps","staticProps","_typeof","obj","Symbol","iterator","constructor","_possibleConstructorReturn","assertThisInitialized","_inherits","subClass","superClass","create","setPrototypeOf","shallowEqual","objA","objB","keysA","keysB","hasOwn","hasOwnProperty","resolved","Promise","resolve","removeEmptyKey","object","omit","sourceKeys","_key","_createContext","onInternalStateUpdate","createHrefForState","onSearchForFacetValues","onSearchStateChange","onSearchParameters","store","widgetsManager","mainTargetedIndex","InstantSearchConsumer","Consumer","InstantSearchProvider","Provider","_createContext2","IndexConsumer","createConnector","connectorDesc","Composed","Connector","displayName","isWidget","getSearchParameters","getMetadata","transitionState","Component","_Component","_this","providedProps","getProvidedProps","_ref","_len","args","contextValue","refine","getState","widgets","_ref2","_len2","_key2","_ref3","_len3","_key3","ais","multiIndexContext","indexContextValue","_this2","unsubscribe","subscribe","isUnmounting","unregisterWidget","registerWidget","nextProps","nextState","shouldComponentUpdate","propsEqual","prevProps","update","cleanUp","_this$props$contextVa","resultsFacetValues","searching","searchingForFacetValues","isSearchStalled","metadata","searchResults","searchParameters","nextWidgetsState","prevWidgetsState","_this$props","refineProps","createURL","searchForFacetValuesProps","searchForItems","createElement","propTypes","defaultProps","createConnectorWithoutContext","HIGHLIGHT_TAGS","highlightPreTag","highlightPostTag","parseHighlightedAttribute","preTag","postTag","_ref$highlightedValue","highlightedValue","splitByPreTag","firstValue","shift","elements","isHighlighted","splitByPostTag","parseAlgoliaHit","_ref2$preTag","_ref2$postTag","highlightProperty","hit","path","highlightObject","replace","current","item","_ref$preTag","_ref$postTag","highlight","block","prefix","suitElements","element","baseClassName","cx","highlightedTagName","nonHighlightedTagName","TagName","className","tagName","parsedHighlightedValue","isLast","connectHighlight","getIndexId","context","hasMultipleIndices","targetedIndex","refineValue","searchState","nextRefinement","namespace","indexId","_objectSpread4","indices","refineMultiIndexWithNamespace","refineMultiIndex","refineSingleIndexWithNamespace","refineSingleIndex","getNamespaceAndAttributeName","id","parts","match","attributeName","getCurrentRefinementValue","defaultValue","_getNamespaceAndAttri","multiIndex","defaultRefinement","cleanUpValue","_getNamespaceAndAttri2","Boolean","_ref4","indexSearchState","cleanUpValueWithMultiIndex","cleanUpValueWithSingleIndex","hits","getResults","queryID","__queryID","addQueryID","__position","getCurrentRefinement","_refine","string","_cleanUp","items","label","createWidgetsManager","onWidgetsUpdate","scheduled","scheduleUpdate","widget","getWidgets","addAlgoliaAgents","searchClient","isTargetedIndexEqualIndex","isIndexWidget","isIndexWidgetEqualIndex","sortIndexWidgetsFirst","firstWidget","secondWidget","isFirstWidgetIndex","isSecondWidgetIndex","serializeQueryParameters","parameters","format","encodeURIComponent","encode","toString","JSON","stringify","createInstantSearchManager","_ref$initialState","initialState","resultsState","stalledSearchDelay","on","stalledSearchTimer","setTimeout","_store$getState","partialState","handleSearchSuccess","handleSearchError","skip","initialSearchParameters","transporter","_cacheHydrated","_useCache","baseMethod","requests","methodArgs","requestsWithSerializedParams","request","responsesCache","get","method","set","acc","result","rawResults","cache","hydrateSearchClientWithMultiIndexRequest","hydrateSearchClientWithSingleIndexRequest","hydrateSearchClient","listeners","listener","createStore","_internalIndexId","a","hydrateResultsState","sharedParameters","res","mainParameters","targetedIndexEqualMainIndex","subIndexEqualMainIndex","sort","derivedIndices","targetedIndexNotEqualMainIndex","subIndexNotEqualMainIndex","derivedParameters","_getSearchParameters","detach","isDerivedHelpersEmpty","getFacetByName","currentState","nextIsSearchStalled","clearTimeout","getWidgetsIds","meta","_ref5","_ref5$maxFacetHits","maxFacetHitsWithinRange","Math","max","min","_objectSpread7","onExternalStateUpdate","nextSearchState","updateClient","updateIndex","newIndex","skipSearch","isControlled","InstantSearch","instantSearchManager","onWidgetsInternalStateUpdate","prevState","nextIsControlled","previousSearchState","prevIsControlled","refresh","getKnownKeys","_searchState","count","children","isRequired","shape","func","bool","oneOfType","array","node","number","hostname","window","location","url","xmlns","baseProfile","viewBox","width","height","x1","x2","y1","y2","gradientUnits","gradientTransform","offset","stopColor","d","fill","PoweredBy","translate","href","rel","defaultTranslations","connectPoweredBy","searchBy","Translatable","_getPrototypeOf2","translations","translation","algoliasearch","process","Hit","as","Link","to","slug","sx","fontSize","fontWeight","color","mt","mb","CustomHits","connectHits","objectID","SearchBox","connectSearchBox","rest","outline","borderRadius","backgroundColor","p","border","placeholder","aria-label","onChange","Search","autoFocus","SearchPage","title","hideSearch","find","sortBy","defaults","defaultInstructions","out","sortInstruction","matchingDefault","defaultInstruction","t","n","o","getOwnPropertyDescriptors","defineProperties","u","next","done","return","from","localStorage","parse","getItem","miss","all","setItem","delete","clear","removeItem","caches","serializable","c","floor","random","l","h","data","entries","timeout","headers","queryParameters","cacheable","m","Read","Write","Any","y","status","lastUpdate","Date","now","b","protocol","accept","P","j","toLowerCase","userAgent","pop","message","transporterStackTrace","A","w","connectTimeout","timeouts","connect","responseTimeout","response","host","triesLeft","onSucess","onRetry","isTimedOut","logger","info","x","hostsCache","onFail","requester","send","getTimeout","statelessHosts","reverse","S","add","segment","T","charAt","substr","C","appId","authMode","apiKey","requestsCache","hosts","read","mappedRequestOptions","reject","write","methods","N","k","J","I","E","W","XMLHttpRequest","open","setRequestHeader","abort","onreadystatechange","readyState","OPENED","onerror","responseText","onload","debug","console","multipleQueries","multipleSearchForFacetValues","isObjectOrArrayOrFunction","_merge","sourceVal","targetVal","comparator","defaultsPure","lib","addRefinement","refinementList","valueAsString","facetRefinement","mod","removeRefinement","clearRefinement","refinementType","hasChanged","newRefinementList","memo","facetList","refinementValue","containsRefinements","refinementValueAsString","mainHelper","main","removeAllListeners","algoliasearchHelper","ctor","superCtor","classNames","classes","arg","argType","inner","default","intersection","valToNumber","RefinementList","isEqualNumericRefinement","every","el","newParameters","_parseNumbers","paramName","isKeyKnown","PARAMETERS","isValueDefined","numbers","parsedValue","parseFloat","isNaN","insideBoundingBox","geoRect","parsedValues","vPrime","toggleHierarchicalFacetRefinement","validate","patch","_clearNumericRefinements","newQuery","newPage","setFacets","setDisjunctiveFacets","setHitsPerPage","setTypoTolerance","typoTolerance","isNumericRefined","paramValue","op","val","newNumericRefinements","operatorList","outValues","addFacet","addDisjunctiveFacet","addHierarchicalFacet","modification","removeFacet","removeDisjunctiveFacet","removeHierarchicalFacet","toggleConjunctiveFacetRefinement","toggleDisjunctiveFacetRefinement","isOperatorDefined","searchedValue","isAttributeValueDefined","currentValue","disjunctiveNumericRefinedFacets","getUnrefinedDisjunctiveFacets","refinedFacets","managedParameters","queryParams","nextWithNumbers","previousPlainObject","nextPlainObject","previous","isPreviousValueDefined","isNextValueDefined","_getHierarchicalFacetSortBy","_getHierarchicalShowParentLevel","showParentLevel","hierarchicalFacetName","refinement","part","trim","arr1","arr2","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","Function","getOwnPropertyNames","NumberIsNaN","Number","init","once","emitter","eventListener","errorListener","removeListener","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","_getMaxListeners","that","_addListener","prepend","existing","warning","newListener","unshift","warned","String","warn","onceWrapper","fired","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","copy","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","handler","len","addListener","prependListener","prependOnceListener","list","position","originalListener","spliceOne","off","rawListeners","eventNames","sources","reduceRight","hierarchicalFacetResult","hierarchicalFacetIndex","hierarchicalFacetRefinement","hierarchicalSeparator","hierarchicalRootPath","hierarchicalShowParentLevel","prepareHierarchicalFacetSortBy","rootExhaustive","facetResult","exhaustive","generateTreeFn","hierarchicalTree","currentHierarchicalLevel","parent","subtree","picked","tuple","parentPath","onlyMatchingTree","orderBy","facetCount","generateHierarchicalTree","compact","findIndex","formatSort","getIndices","idx","assignFacetStats","dest","facetStats","stats","mainSubResponse","_rawResults","processingTimeMS","sum","facetsIndices","disjunctiveFacetsIndices","nextDisjunctiveResult","mainFacets","facetKey","hierarchicalAttributeName","facetValueObject","facetIndex","idxAttributeName","exhaustiveFacetsCount","isFacetDisjunctive","isFacetConjunctive","facets_stats","disjunctiveFacet","dfacet","facetResults","dataFromMainRequest","defaultData","root","excludes","_state","recSort","sortFn","childNode","sortedChildren","getFacetStatsIfAvailable","getRefinement","resultsFacets","predicate","DEFAULT_SORT","getFacetValues","extractNormalizedFacetValues","order","hierarchicalFacetValues","vanillaSortFn","getFacetStats","facetDeclaration","rootFacet","intermediateFacet","newFacet","numericValue","compareAscending","other","valIsDefined","valIsNull","othIsDefined","othIsNull","collection","iteratees","orders","criteria","iteratee"],"mappings":"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","file":"component---src-pages-search-js-b2b8825b64b8f3da4e55.js","sourcesContent":["'use strict';\n\nvar merge = require('./functions/merge');\n\nvar requestBuilder = {\n  /**\n   * Get all the queries to send to the client, those queries can used directly\n   * with the Algolia client.\n   * @private\n   * @return {object[]} The queries\n   */\n  _getQueries: function getQueries(index, state) {\n    var queries = []; // One query for the hits\n\n    queries.push({\n      indexName: index,\n      params: requestBuilder._getHitsSearchParams(state)\n    }); // One for each disjunctive facets\n\n    state.getRefinedDisjunctiveFacets().forEach(function (refinedFacet) {\n      queries.push({\n        indexName: index,\n        params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet)\n      });\n    }); // maybe more to get the root level of hierarchical facets when activated\n\n    state.getRefinedHierarchicalFacets().forEach(function (refinedFacet) {\n      var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n      var currentRefinement = state.getHierarchicalRefinement(refinedFacet); // if we are deeper than level 0 (starting from `beer > IPA`)\n      // we want to get the root values\n\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      if (currentRefinement.length > 0 && currentRefinement[0].split(separator).length > 1) {\n        queries.push({\n          indexName: index,\n          params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet, true)\n        });\n      }\n    });\n    return queries;\n  },\n\n  /**\n   * Build search parameters used to fetch hits\n   * @private\n   * @return {object.<string, any>}\n   */\n  _getHitsSearchParams: function _getHitsSearchParams(state) {\n    var facets = state.facets.concat(state.disjunctiveFacets).concat(requestBuilder._getHitsHierarchicalFacetsAttributes(state));\n\n    var facetFilters = requestBuilder._getFacetFilters(state);\n\n    var numericFilters = requestBuilder._getNumericFilters(state);\n\n    var tagFilters = requestBuilder._getTagFilters(state);\n\n    var additionalParams = {\n      facets: facets,\n      tagFilters: tagFilters\n    };\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    return merge({}, state.getQueryParams(), additionalParams);\n  },\n\n  /**\n   * Build search parameters used to fetch a disjunctive facet\n   * @private\n   * @param  {string} facet the associated facet name\n   * @param  {boolean} hierarchicalRootLevel ?? FIXME\n   * @return {object}\n   */\n  _getDisjunctiveFacetSearchParams: function _getDisjunctiveFacetSearchParams(state, facet, hierarchicalRootLevel) {\n    var facetFilters = requestBuilder._getFacetFilters(state, facet, hierarchicalRootLevel);\n\n    var numericFilters = requestBuilder._getNumericFilters(state, facet);\n\n    var tagFilters = requestBuilder._getTagFilters(state);\n\n    var additionalParams = {\n      hitsPerPage: 1,\n      page: 0,\n      attributesToRetrieve: [],\n      attributesToHighlight: [],\n      attributesToSnippet: [],\n      tagFilters: tagFilters,\n      analytics: false,\n      clickAnalytics: false\n    };\n    var hierarchicalFacet = state.getHierarchicalFacetByName(facet);\n\n    if (hierarchicalFacet) {\n      additionalParams.facets = requestBuilder._getDisjunctiveHierarchicalFacetAttribute(state, hierarchicalFacet, hierarchicalRootLevel);\n    } else {\n      additionalParams.facets = facet;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    return merge({}, state.getQueryParams(), additionalParams);\n  },\n\n  /**\n   * Return the numeric filters in an algolia request fashion\n   * @private\n   * @param {string} [facetName] the name of the attribute for which the filters should be excluded\n   * @return {string[]} the numeric filters in the algolia format\n   */\n  _getNumericFilters: function _getNumericFilters(state, facetName) {\n    if (state.numericFilters) {\n      return state.numericFilters;\n    }\n\n    var numericFilters = [];\n    Object.keys(state.numericRefinements).forEach(function (attribute) {\n      var operators = state.numericRefinements[attribute] || {};\n      Object.keys(operators).forEach(function (operator) {\n        var values = operators[operator] || [];\n\n        if (facetName !== attribute) {\n          values.forEach(function (value) {\n            if (Array.isArray(value)) {\n              var vs = value.map(function (v) {\n                return attribute + operator + v;\n              });\n              numericFilters.push(vs);\n            } else {\n              numericFilters.push(attribute + operator + value);\n            }\n          });\n        }\n      });\n    });\n    return numericFilters;\n  },\n\n  /**\n   * Return the tags filters depending\n   * @private\n   * @return {string}\n   */\n  _getTagFilters: function _getTagFilters(state) {\n    if (state.tagFilters) {\n      return state.tagFilters;\n    }\n\n    return state.tagRefinements.join(',');\n  },\n\n  /**\n   * Build facetFilters parameter based on current refinements. The array returned\n   * contains strings representing the facet filters in the algolia format.\n   * @private\n   * @param  {string} [facet] if set, the current disjunctive facet\n   * @return {array.<string>}\n   */\n  _getFacetFilters: function _getFacetFilters(state, facet, hierarchicalRootLevel) {\n    var facetFilters = [];\n    var facetsRefinements = state.facetsRefinements || {};\n    Object.keys(facetsRefinements).forEach(function (facetName) {\n      var facetValues = facetsRefinements[facetName] || [];\n      facetValues.forEach(function (facetValue) {\n        facetFilters.push(facetName + ':' + facetValue);\n      });\n    });\n    var facetsExcludes = state.facetsExcludes || {};\n    Object.keys(facetsExcludes).forEach(function (facetName) {\n      var facetValues = facetsExcludes[facetName] || [];\n      facetValues.forEach(function (facetValue) {\n        facetFilters.push(facetName + ':-' + facetValue);\n      });\n    });\n    var disjunctiveFacetsRefinements = state.disjunctiveFacetsRefinements || {};\n    Object.keys(disjunctiveFacetsRefinements).forEach(function (facetName) {\n      var facetValues = disjunctiveFacetsRefinements[facetName] || [];\n\n      if (facetName === facet || !facetValues || facetValues.length === 0) {\n        return;\n      }\n\n      var orFilters = [];\n      facetValues.forEach(function (facetValue) {\n        orFilters.push(facetName + ':' + facetValue);\n      });\n      facetFilters.push(orFilters);\n    });\n    var hierarchicalFacetsRefinements = state.hierarchicalFacetsRefinements || {};\n    Object.keys(hierarchicalFacetsRefinements).forEach(function (facetName) {\n      var facetValues = hierarchicalFacetsRefinements[facetName] || [];\n      var facetValue = facetValues[0];\n\n      if (facetValue === undefined) {\n        return;\n      }\n\n      var hierarchicalFacet = state.getHierarchicalFacetByName(facetName);\n\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n\n      var attributeToRefine;\n      var attributesIndex; // we ask for parent facet values only when the `facet` is the current hierarchical facet\n\n      if (facet === facetName) {\n        // if we are at the root level already, no need to ask for facet values, we get them from\n        // the hits query\n        if (facetValue.indexOf(separator) === -1 || !rootPath && hierarchicalRootLevel === true || rootPath && rootPath.split(separator).length === facetValue.split(separator).length) {\n          return;\n        }\n\n        if (!rootPath) {\n          attributesIndex = facetValue.split(separator).length - 2;\n          facetValue = facetValue.slice(0, facetValue.lastIndexOf(separator));\n        } else {\n          attributesIndex = rootPath.split(separator).length - 1;\n          facetValue = rootPath;\n        }\n\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      } else {\n        attributesIndex = facetValue.split(separator).length - 1;\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      }\n\n      if (attributeToRefine) {\n        facetFilters.push([attributeToRefine + ':' + facetValue]);\n      }\n    });\n    return facetFilters;\n  },\n  _getHitsHierarchicalFacetsAttributes: function _getHitsHierarchicalFacetsAttributes(state) {\n    var out = [];\n    return state.hierarchicalFacets.reduce( // ask for as much levels as there's hierarchical refinements\n    function getHitsAttributesForHierarchicalFacet(allAttributes, hierarchicalFacet) {\n      var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0]; // if no refinement, ask for root level\n\n      if (!hierarchicalRefinement) {\n        allAttributes.push(hierarchicalFacet.attributes[0]);\n        return allAttributes;\n      }\n\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      var level = hierarchicalRefinement.split(separator).length;\n      var newAttributes = hierarchicalFacet.attributes.slice(0, level + 1);\n      return allAttributes.concat(newAttributes);\n    }, out);\n  },\n  _getDisjunctiveHierarchicalFacetAttribute: function _getDisjunctiveHierarchicalFacetAttribute(state, hierarchicalFacet, rootLevel) {\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    if (rootLevel === true) {\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n\n      var attributeIndex = 0;\n\n      if (rootPath) {\n        attributeIndex = rootPath.split(separator).length;\n      }\n\n      return [hierarchicalFacet.attributes[attributeIndex]];\n    }\n\n    var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0] || ''; // if refinement is 'beers > IPA > Flying dog',\n    // then we want `facets: ['beers > IPA']` as disjunctive facet (parent level values)\n\n    var parentLevel = hierarchicalRefinement.split(separator).length - 1;\n    return hierarchicalFacet.attributes.slice(0, parentLevel + 1);\n  },\n  getSearchForFacetQuery: function getSearchForFacetQuery(facetName, query, maxFacetHits, state) {\n    var stateForSearchForFacetValues = state.isDisjunctiveFacet(facetName) ? state.clearRefinements(facetName) : state;\n    var searchForFacetSearchParameters = {\n      facetQuery: query,\n      facetName: facetName\n    };\n\n    if (typeof maxFacetHits === 'number') {\n      searchForFacetSearchParameters.maxFacetHits = maxFacetHits;\n    }\n\n    return merge({}, requestBuilder._getHitsSearchParams(stateForSearchForFacetValues), searchForFacetSearchParameters);\n  }\n};\nmodule.exports = requestBuilder;","'use strict';\n\nmodule.exports = '3.2.2';","'use strict';\n\nvar SearchParameters = require('./SearchParameters');\n\nvar SearchResults = require('./SearchResults');\n\nvar DerivedHelper = require('./DerivedHelper');\n\nvar requestBuilder = require('./requestBuilder');\n\nvar events = require('events');\n\nvar inherits = require('./functions/inherits');\n\nvar objectHasKeys = require('./functions/objectHasKeys');\n\nvar version = require('./version');\n/**\n * Event triggered when a parameter is set or updated\n * @event AlgoliaSearchHelper#event:change\n * @property {object} event\n * @property {SearchParameters} event.state the current parameters with the latest changes applied\n * @property {SearchResults} event.results the previous results received from Algolia. `null` before the first request\n * @example\n * helper.on('change', function(event) {\n *   console.log('The parameters have changed');\n * });\n */\n\n/**\n * Event triggered when a main search is sent to Algolia\n * @event AlgoliaSearchHelper#event:search\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search\n * @property {SearchResults} event.results the results from the previous search. `null` if it is the first search.\n * @example\n * helper.on('search', function(event) {\n *   console.log('Search sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchForFacetValues` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchForFacetValues\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @property {string} event.facet the facet searched into\n * @property {string} event.query the query used to search in the facets\n * @example\n * helper.on('searchForFacetValues', function(event) {\n *   console.log('searchForFacetValues sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchOnce` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchOnce\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @example\n * helper.on('searchOnce', function(event) {\n *   console.log('searchOnce sent');\n * });\n */\n\n/**\n * Event triggered when the results are retrieved from Algolia\n * @event AlgoliaSearchHelper#event:result\n * @property {object} event\n * @property {SearchResults} event.results the results received from Algolia\n * @property {SearchParameters} event.state the parameters used to query Algolia. Those might be different from the one in the helper instance (for example if the network is unreliable).\n * @example\n * helper.on('result', function(event) {\n *   console.log('Search results received');\n * });\n */\n\n/**\n * Event triggered when Algolia sends back an error. For example, if an unknown parameter is\n * used, the error can be caught using this event.\n * @event AlgoliaSearchHelper#event:error\n * @property {object} event\n * @property {Error} event.error the error returned by the Algolia.\n * @example\n * helper.on('error', function(event) {\n *   console.log('Houston we got a problem.');\n * });\n */\n\n/**\n * Event triggered when the queue of queries have been depleted (with any result or outdated queries)\n * @event AlgoliaSearchHelper#event:searchQueueEmpty\n * @example\n * helper.on('searchQueueEmpty', function() {\n *   console.log('No more search pending');\n *   // This is received before the result event if we're not expecting new results\n * });\n *\n * helper.search();\n */\n\n/**\n * Initialize a new AlgoliaSearchHelper\n * @class\n * @classdesc The AlgoliaSearchHelper is a class that ease the management of the\n * search. It provides an event based interface for search callbacks:\n *  - change: when the internal search state is changed.\n *    This event contains a {@link SearchParameters} object and the\n *    {@link SearchResults} of the last result if any.\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n *  - error: when the response is an error. This event contains the error returned by the server.\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the index name to query\n * @param  {SearchParameters | object} options an object defining the initial\n * config of the search. It doesn't have to be a {SearchParameters},\n * just an object containing the properties you need from it.\n */\n\n\nfunction AlgoliaSearchHelper(client, index, options) {\n  if (typeof client.addAlgoliaAgent === 'function') {\n    client.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n\n  this.setClient(client);\n  var opts = options || {};\n  opts.index = index;\n  this.state = SearchParameters.make(opts);\n  this.lastResults = null;\n  this._queryId = 0;\n  this._lastQueryIdReceived = -1;\n  this.derivedHelpers = [];\n  this._currentNbQueries = 0;\n}\n\ninherits(AlgoliaSearchHelper, events.EventEmitter);\n/**\n * Start the search with the parameters set in the state. When the\n * method is called, it triggers a `search` event. The results will\n * be available through the `result` event. If an error occurs, an\n * `error` will be fired instead.\n * @return {AlgoliaSearchHelper}\n * @fires search\n * @fires result\n * @fires error\n * @chainable\n */\n\nAlgoliaSearchHelper.prototype.search = function () {\n  this._search({\n    onlyWithDerivedHelpers: false\n  });\n\n  return this;\n};\n\nAlgoliaSearchHelper.prototype.searchOnlyWithDerivedHelpers = function () {\n  this._search({\n    onlyWithDerivedHelpers: true\n  });\n\n  return this;\n};\n/**\n * Gets the search query parameters that would be sent to the Algolia Client\n * for the hits\n * @return {object} Query Parameters\n */\n\n\nAlgoliaSearchHelper.prototype.getQuery = function () {\n  var state = this.state;\n  return requestBuilder._getHitsSearchParams(state);\n};\n/**\n * Start a search using a modified version of the current state. This method does\n * not trigger the helper lifecycle and does not modify the state kept internally\n * by the helper. This second aspect means that the next search call will be the\n * same as a search call before calling searchOnce.\n * @param {object} options can contain all the parameters that can be set to SearchParameters\n * plus the index\n * @param {function} [callback] optional callback executed when the response from the\n * server is back.\n * @return {promise|undefined} if a callback is passed the method returns undefined\n * otherwise it returns a promise containing an object with two keys :\n *  - content with a SearchResults\n *  - state with the state used for the query as a SearchParameters\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the callback API\n * var state = helper.searchOnce({hitsPerPage: 1},\n *   function(error, content, state) {\n *     // if an error occurred it will be passed in error, otherwise its value is null\n *     // content contains the results formatted as a SearchResults\n *     // state is the instance of SearchParameters used for this search\n *   });\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the promise API\n * var state1 = helper.searchOnce({hitsPerPage: 1})\n *                 .then(promiseHandler);\n *\n * function promiseHandler(res) {\n *   // res contains\n *   // {\n *   //   content : SearchResults\n *   //   state   : SearchParameters (the one used for this specific search)\n *   // }\n * }\n */\n\n\nAlgoliaSearchHelper.prototype.searchOnce = function (options, cb) {\n  var tempState = !options ? this.state : this.state.setQueryParameters(options);\n\n  var queries = requestBuilder._getQueries(tempState.index, tempState);\n\n  var self = this;\n  this._currentNbQueries++;\n  this.emit('searchOnce', {\n    state: tempState\n  });\n\n  if (cb) {\n    this.client.search(queries).then(function (content) {\n      self._currentNbQueries--;\n\n      if (self._currentNbQueries === 0) {\n        self.emit('searchQueueEmpty');\n      }\n\n      cb(null, new SearchResults(tempState, content.results), tempState);\n    }).catch(function (err) {\n      self._currentNbQueries--;\n\n      if (self._currentNbQueries === 0) {\n        self.emit('searchQueueEmpty');\n      }\n\n      cb(err, null, tempState);\n    });\n    return undefined;\n  }\n\n  return this.client.search(queries).then(function (content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    return {\n      content: new SearchResults(tempState, content.results),\n      state: tempState,\n      _originalResponse: content\n    };\n  }, function (e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n/**\n * Structure of each result when using\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * @typedef FacetSearchHit\n * @type {object}\n * @property {string} value the facet value\n * @property {string} highlighted the facet value highlighted with the query string\n * @property {number} count number of occurrence of this facet value\n * @property {boolean} isRefined true if the value is already refined\n */\n\n/**\n * Structure of the data resolved by the\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * promise.\n * @typedef FacetSearchResult\n * @type {object}\n * @property {FacetSearchHit} facetHits the results for this search for facet values\n * @property {number} processingTimeMS time taken by the query inside the engine\n */\n\n/**\n * Search for facet values based on an query and the name of a faceted attribute. This\n * triggers a search and will return a promise. On top of using the query, it also sends\n * the parameters from the state so that the search is narrowed down to only the possible values.\n *\n * See the description of [FacetSearchResult](reference.html#FacetSearchResult)\n * @param {string} facet the name of the faceted attribute\n * @param {string} query the string query for the search\n * @param {number} [maxFacetHits] the maximum number values returned. Should be > 0 and <= 100\n * @param {object} [userState] the set of custom parameters to use on top of the current state. Setting a property to `undefined` removes\n * it in the generated query.\n * @return {promise.<FacetSearchResult>} the results of the search\n */\n\n\nAlgoliaSearchHelper.prototype.searchForFacetValues = function (facet, query, maxFacetHits, userState) {\n  var clientHasSFFV = typeof this.client.searchForFacetValues === 'function';\n\n  if (!clientHasSFFV && typeof this.client.initIndex !== 'function') {\n    throw new Error('search for facet values (searchable) was called, but this client does not have a function client.searchForFacetValues or client.initIndex(index).searchForFacetValues');\n  }\n\n  var state = this.state.setQueryParameters(userState || {});\n  var isDisjunctive = state.isDisjunctiveFacet(facet);\n  var algoliaQuery = requestBuilder.getSearchForFacetQuery(facet, query, maxFacetHits, state);\n  this._currentNbQueries++;\n  var self = this;\n  this.emit('searchForFacetValues', {\n    state: state,\n    facet: facet,\n    query: query\n  });\n  var searchForFacetValuesPromise = clientHasSFFV ? this.client.searchForFacetValues([{\n    indexName: state.index,\n    params: algoliaQuery\n  }]) : this.client.initIndex(state.index).searchForFacetValues(algoliaQuery);\n  return searchForFacetValuesPromise.then(function addIsRefined(content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    content = Array.isArray(content) ? content[0] : content;\n    content.facetHits.forEach(function (f) {\n      f.isRefined = isDisjunctive ? state.isDisjunctiveFacetRefined(facet, f.value) : state.isFacetRefined(facet, f.value);\n    });\n    return content;\n  }, function (e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n/**\n * Sets the text query used for the search.\n *\n * This method resets the current page to 0.\n * @param  {string} q the user query\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.setQuery = function (q) {\n  this._change({\n    state: this.state.resetPage().setQuery(q),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Remove all the types of refinements except tags. A string can be provided to remove\n * only the refinements of a specific attribute. For more advanced use case, you can\n * provide a function instead. This function should follow the\n * [clearCallback definition](#SearchParameters.clearCallback).\n *\n * This method resets the current page to 0.\n * @param {string} [name] optional name of the facet / attribute on which we want to remove all refinements\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * // Removing all the refinements\n * helper.clearRefinements().search();\n * @example\n * // Removing all the filters on a the category attribute.\n * helper.clearRefinements('category').search();\n * @example\n * // Removing only the exclude filters on the category facet.\n * helper.clearRefinements(function(value, attribute, type) {\n *   return type === 'exclude' && attribute === 'category';\n * }).search();\n */\n\n\nAlgoliaSearchHelper.prototype.clearRefinements = function (name) {\n  this._change({\n    state: this.state.resetPage().clearRefinements(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Remove all the tag filters.\n *\n * This method resets the current page to 0.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.clearTags = function () {\n  this._change({\n    state: this.state.resetPage().clearTags(),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Adds a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addDisjunctiveFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addDisjunctiveFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.addDisjunctiveRefine = function () {\n  return this.addDisjunctiveFacetRefinement.apply(this, arguments);\n};\n/**\n * Adds a refinement on a hierarchical facet. It will throw\n * an exception if the facet is not defined or if the facet\n * is already refined.\n *\n * This method resets the current page to 0.\n * @param {string} facet the facet name\n * @param {string} path the hierarchical facet path\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is refined\n * @chainable\n * @fires change\n */\n\n\nAlgoliaSearchHelper.prototype.addHierarchicalFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addHierarchicalFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Adds a an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} operator the operator of the filter\n * @param  {number} value the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addNumericRefinement = function (attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().addNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Adds a filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.addRefine = function () {\n  return this.addFacetRefinement.apply(this, arguments);\n};\n/**\n * Adds a an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().addExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetExclusion}\n */\n\n\nAlgoliaSearchHelper.prototype.addExclude = function () {\n  return this.addFacetExclusion.apply(this, arguments);\n};\n/**\n * Adds a tag filter with the `tag` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag the tag to add to the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.addTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().addTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Removes an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * Some parameters are optional, triggering different behavior:\n *  - if the value is not provided, then all the numeric value will be removed for the\n *  specified attribute/operator couple.\n *  - if the operator is not provided either, then all the numeric filter on this attribute\n *  will be removed.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} [operator] the operator of the filter\n * @param  {number} [value] the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeNumericRefinement = function (attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().removeNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Removes a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeDisjunctiveFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeDisjunctiveFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.removeDisjunctiveRefine = function () {\n  return this.removeDisjunctiveFacetRefinement.apply(this, arguments);\n};\n/**\n * Removes the refinement set on a hierarchical facet.\n * @param {string} facet the facet name\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is not refined\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeHierarchicalFacetRefinement = function (facet) {\n  this._change({\n    state: this.state.resetPage().removeHierarchicalFacetRefinement(facet),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Removes a filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.removeRefine = function () {\n  return this.removeFacetRefinement.apply(this, arguments);\n};\n/**\n * Removes an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().removeExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetExclusion}\n */\n\n\nAlgoliaSearchHelper.prototype.removeExclude = function () {\n  return this.removeFacetExclusion.apply(this, arguments);\n};\n/**\n * Removes a tag filter with the `tag` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove from the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.removeTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().removeTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Adds or removes an exclusion filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.toggleFacetExclusion = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleExcludeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetExclusion}\n */\n\n\nAlgoliaSearchHelper.prototype.toggleExclude = function () {\n  return this.toggleFacetExclusion.apply(this, arguments);\n};\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n * @deprecated since version 2.19.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.toggleRefinement = function (facet, value) {\n  return this.toggleFacetRefinement(facet, value);\n};\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.toggleFacetRefinement = function (facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\n\n\nAlgoliaSearchHelper.prototype.toggleRefine = function () {\n  return this.toggleFacetRefinement.apply(this, arguments);\n};\n/**\n * Adds or removes a tag filter with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove or add\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.toggleTag = function (tag) {\n  this._change({\n    state: this.state.resetPage().toggleTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Increments the page number by one.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setPage(0).nextPage().getPage();\n * // returns 1\n */\n\n\nAlgoliaSearchHelper.prototype.nextPage = function () {\n  var page = this.state.page || 0;\n  return this.setPage(page + 1);\n};\n/**\n * Decrements the page number by one.\n * @fires change\n * @return {AlgoliaSearchHelper}\n * @chainable\n * @example\n * helper.setPage(1).previousPage().getPage();\n * // returns 0\n */\n\n\nAlgoliaSearchHelper.prototype.previousPage = function () {\n  var page = this.state.page || 0;\n  return this.setPage(page - 1);\n};\n/**\n * @private\n */\n\n\nfunction setCurrentPage(page) {\n  if (page < 0) throw new Error('Page requested below 0.');\n\n  this._change({\n    state: this.state.setPage(page),\n    isPageReset: false\n  });\n\n  return this;\n}\n/**\n * Change the current page\n * @deprecated\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.setCurrentPage = setCurrentPage;\n/**\n * Updates the current page.\n * @function\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\nAlgoliaSearchHelper.prototype.setPage = setCurrentPage;\n/**\n * Updates the name of the index that will be targeted by the query.\n *\n * This method resets the current page to 0.\n * @param {string} name the index name\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\nAlgoliaSearchHelper.prototype.setIndex = function (name) {\n  this._change({\n    state: this.state.resetPage().setIndex(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Update a parameter of the search. This method reset the page\n *\n * The complete list of parameters is available on the\n * [Algolia website](https://www.algolia.com/doc/rest#query-an-index).\n * The most commonly used parameters have their own [shortcuts](#query-parameters-shortcuts)\n * or benefit from higher-level APIs (all the kind of filters and facets have their own API)\n *\n * This method resets the current page to 0.\n * @param {string} parameter name of the parameter to update\n * @param {any} value new value of the parameter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setQueryParameter('hitsPerPage', 20).search();\n */\n\n\nAlgoliaSearchHelper.prototype.setQueryParameter = function (parameter, value) {\n  this._change({\n    state: this.state.resetPage().setQueryParameter(parameter, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n/**\n * Set the whole state (warning: will erase previous state)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.setState = function (newState) {\n  this._change({\n    state: SearchParameters.make(newState),\n    isPageReset: false\n  });\n\n  return this;\n};\n/**\n * Override the current state without triggering a change event.\n * Do not use this method unless you know what you are doing. (see the example\n * for a legit use case)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @example\n *  helper.on('change', function(state){\n *    // In this function you might want to find a way to store the state in the url/history\n *    updateYourURL(state)\n *  })\n *  window.onpopstate = function(event){\n *    // This is naive though as you should check if the state is really defined etc.\n *    helper.overrideStateWithoutTriggeringChangeEvent(event.state).search()\n *  }\n * @chainable\n */\n\n\nAlgoliaSearchHelper.prototype.overrideStateWithoutTriggeringChangeEvent = function (newState) {\n  this.state = new SearchParameters(newState);\n  return this;\n};\n/**\n * Check if an attribute has any numeric, conjunctive, disjunctive or hierarchical filters.\n * @param {string} attribute the name of the attribute\n * @return {boolean} true if the attribute is filtered by at least one value\n * @example\n * // hasRefinements works with numeric, conjunctive, disjunctive and hierarchical filters\n * helper.hasRefinements('price'); // false\n * helper.addNumericRefinement('price', '>', 100);\n * helper.hasRefinements('price'); // true\n *\n * helper.hasRefinements('color'); // false\n * helper.addFacetRefinement('color', 'blue');\n * helper.hasRefinements('color'); // true\n *\n * helper.hasRefinements('material'); // false\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * helper.hasRefinements('material'); // true\n *\n * helper.hasRefinements('categories'); // false\n * helper.toggleFacetRefinement('categories', 'kitchen > knife');\n * helper.hasRefinements('categories'); // true\n *\n */\n\n\nAlgoliaSearchHelper.prototype.hasRefinements = function (attribute) {\n  if (objectHasKeys(this.state.getNumericRefinements(attribute))) {\n    return true;\n  } else if (this.state.isConjunctiveFacet(attribute)) {\n    return this.state.isFacetRefined(attribute);\n  } else if (this.state.isDisjunctiveFacet(attribute)) {\n    return this.state.isDisjunctiveFacetRefined(attribute);\n  } else if (this.state.isHierarchicalFacet(attribute)) {\n    return this.state.isHierarchicalFacetRefined(attribute);\n  } // there's currently no way to know that the user did call `addNumericRefinement` at some point\n  // thus we cannot distinguish if there once was a numeric refinement that was cleared\n  // so we will return false in every other situations to be consistent\n  // while what we should do here is throw because we did not find the attribute in any type\n  // of refinement\n\n\n  return false;\n};\n/**\n * Check if a value is excluded for a specific faceted attribute. If the value\n * is omitted then the function checks if there is any excluding refinements.\n *\n * @param  {string}  facet name of the attribute for used for faceting\n * @param  {string}  [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n * @return {boolean} true if refined\n * @example\n * helper.isExcludeRefined('color'); // false\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // false\n *\n * helper.addFacetExclusion('color', 'red');\n *\n * helper.isExcludeRefined('color'); // true\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // true\n */\n\n\nAlgoliaSearchHelper.prototype.isExcluded = function (facet, value) {\n  return this.state.isExcludeRefined(facet, value);\n};\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasRefinements}\n */\n\n\nAlgoliaSearchHelper.prototype.isDisjunctiveRefined = function (facet, value) {\n  return this.state.isDisjunctiveFacetRefined(facet, value);\n};\n/**\n * Check if the string is a currently filtering tag.\n * @param {string} tag tag to check\n * @return {boolean}\n */\n\n\nAlgoliaSearchHelper.prototype.hasTag = function (tag) {\n  return this.state.isTagRefined(tag);\n};\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasTag}\n */\n\n\nAlgoliaSearchHelper.prototype.isTagRefined = function () {\n  return this.hasTagRefinements.apply(this, arguments);\n};\n/**\n * Get the name of the currently used index.\n * @return {string}\n * @example\n * helper.setIndex('highestPrice_products').getIndex();\n * // returns 'highestPrice_products'\n */\n\n\nAlgoliaSearchHelper.prototype.getIndex = function () {\n  return this.state.index;\n};\n\nfunction getCurrentPage() {\n  return this.state.page;\n}\n/**\n * Get the currently selected page\n * @deprecated\n * @return {number} the current page\n */\n\n\nAlgoliaSearchHelper.prototype.getCurrentPage = getCurrentPage;\n/**\n * Get the currently selected page\n * @function\n * @return {number} the current page\n */\n\nAlgoliaSearchHelper.prototype.getPage = getCurrentPage;\n/**\n * Get all the tags currently set to filters the results.\n *\n * @return {string[]} The list of tags currently set.\n */\n\nAlgoliaSearchHelper.prototype.getTags = function () {\n  return this.state.tagRefinements;\n};\n/**\n * Get the list of refinements for a given attribute. This method works with\n * conjunctive, disjunctive, excluding and numerical filters.\n *\n * See also SearchResults#getRefinements\n *\n * @param {string} facetName attribute name used for faceting\n * @return {Array.<FacetRefinement|NumericRefinement>} All Refinement are objects that contain a value, and\n * a type. Numeric also contains an operator.\n * @example\n * helper.addNumericRefinement('price', '>', 100);\n * helper.getRefinements('price');\n * // [\n * //   {\n * //     \"value\": [\n * //       100\n * //     ],\n * //     \"operator\": \">\",\n * //     \"type\": \"numeric\"\n * //   }\n * // ]\n * @example\n * helper.addFacetRefinement('color', 'blue');\n * helper.addFacetExclusion('color', 'red');\n * helper.getRefinements('color');\n * // [\n * //   {\n * //     \"value\": \"blue\",\n * //     \"type\": \"conjunctive\"\n * //   },\n * //   {\n * //     \"value\": \"red\",\n * //     \"type\": \"exclude\"\n * //   }\n * // ]\n * @example\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * // [\n * //   {\n * //     \"value\": \"plastic\",\n * //     \"type\": \"disjunctive\"\n * //   }\n * // ]\n */\n\n\nAlgoliaSearchHelper.prototype.getRefinements = function (facetName) {\n  var refinements = [];\n\n  if (this.state.isConjunctiveFacet(facetName)) {\n    var conjRefinements = this.state.getConjunctiveRefinements(facetName);\n    conjRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'conjunctive'\n      });\n    });\n    var excludeRefinements = this.state.getExcludeRefinements(facetName);\n    excludeRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'exclude'\n      });\n    });\n  } else if (this.state.isDisjunctiveFacet(facetName)) {\n    var disjRefinements = this.state.getDisjunctiveRefinements(facetName);\n    disjRefinements.forEach(function (r) {\n      refinements.push({\n        value: r,\n        type: 'disjunctive'\n      });\n    });\n  }\n\n  var numericRefinements = this.state.getNumericRefinements(facetName);\n  Object.keys(numericRefinements).forEach(function (operator) {\n    var value = numericRefinements[operator];\n    refinements.push({\n      value: value,\n      operator: operator,\n      type: 'numeric'\n    });\n  });\n  return refinements;\n};\n/**\n * Return the current refinement for the (attribute, operator)\n * @param {string} attribute attribute in the record\n * @param {string} operator operator applied on the refined values\n * @return {Array.<number|number[]>} refined values\n */\n\n\nAlgoliaSearchHelper.prototype.getNumericRefinement = function (attribute, operator) {\n  return this.state.getNumericRefinement(attribute, operator);\n};\n/**\n * Get the current breadcrumb for a hierarchical facet, as an array\n * @param  {string} facetName Hierarchical facet name\n * @return {array.<string>} the path as an array of string\n */\n\n\nAlgoliaSearchHelper.prototype.getHierarchicalFacetBreadcrumb = function (facetName) {\n  return this.state.getHierarchicalFacetBreadcrumb(facetName);\n}; // /////////// PRIVATE\n\n/**\n * Perform the underlying queries\n * @private\n * @return {undefined}\n * @fires search\n * @fires result\n * @fires error\n */\n\n\nAlgoliaSearchHelper.prototype._search = function (options) {\n  var state = this.state;\n  var states = [];\n  var mainQueries = [];\n\n  if (!options.onlyWithDerivedHelpers) {\n    mainQueries = requestBuilder._getQueries(state.index, state);\n    states.push({\n      state: state,\n      queriesCount: mainQueries.length,\n      helper: this\n    });\n    this.emit('search', {\n      state: state,\n      results: this.lastResults\n    });\n  }\n\n  var derivedQueries = this.derivedHelpers.map(function (derivedHelper) {\n    var derivedState = derivedHelper.getModifiedState(state);\n\n    var derivedStateQueries = requestBuilder._getQueries(derivedState.index, derivedState);\n\n    states.push({\n      state: derivedState,\n      queriesCount: derivedStateQueries.length,\n      helper: derivedHelper\n    });\n    derivedHelper.emit('search', {\n      state: derivedState,\n      results: derivedHelper.lastResults\n    });\n    return derivedStateQueries;\n  });\n  var queries = Array.prototype.concat.apply(mainQueries, derivedQueries);\n  var queryId = this._queryId++;\n  this._currentNbQueries++;\n\n  try {\n    this.client.search(queries).then(this._dispatchAlgoliaResponse.bind(this, states, queryId)).catch(this._dispatchAlgoliaError.bind(this, queryId));\n  } catch (error) {\n    // If we reach this part, we're in an internal error state\n    this.emit('error', {\n      error: error\n    });\n  }\n};\n/**\n * Transform the responses as sent by the server and transform them into a user\n * usable object that merge the results of all the batch requests. It will dispatch\n * over the different helper + derived helpers (when there are some).\n * @private\n * @param {array.<{SearchParameters, AlgoliaQueries, AlgoliaSearchHelper}>}\n *  state state used for to generate the request\n * @param {number} queryId id of the current request\n * @param {object} content content of the response\n * @return {undefined}\n */\n\n\nAlgoliaSearchHelper.prototype._dispatchAlgoliaResponse = function (states, queryId, content) {\n  // FIXME remove the number of outdated queries discarded instead of just one\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n  var results = content.results.slice();\n  states.forEach(function (s) {\n    var state = s.state;\n    var queriesCount = s.queriesCount;\n    var helper = s.helper;\n    var specificResults = results.splice(0, queriesCount);\n    var formattedResponse = helper.lastResults = new SearchResults(state, specificResults);\n    helper.emit('result', {\n      results: formattedResponse,\n      state: state\n    });\n  });\n};\n\nAlgoliaSearchHelper.prototype._dispatchAlgoliaError = function (queryId, error) {\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n  this.emit('error', {\n    error: error\n  });\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n};\n\nAlgoliaSearchHelper.prototype.containsRefinement = function (query, facetFilters, numericFilters, tagFilters) {\n  return query || facetFilters.length !== 0 || numericFilters.length !== 0 || tagFilters.length !== 0;\n};\n/**\n * Test if there are some disjunctive refinements on the facet\n * @private\n * @param {string} facet the attribute to test\n * @return {boolean}\n */\n\n\nAlgoliaSearchHelper.prototype._hasDisjunctiveRefinements = function (facet) {\n  return this.state.disjunctiveRefinements[facet] && this.state.disjunctiveRefinements[facet].length > 0;\n};\n\nAlgoliaSearchHelper.prototype._change = function (event) {\n  var state = event.state;\n  var isPageReset = event.isPageReset;\n\n  if (state !== this.state) {\n    this.state = state;\n    this.emit('change', {\n      state: this.state,\n      results: this.lastResults,\n      isPageReset: isPageReset\n    });\n  }\n};\n/**\n * Clears the cache of the underlying Algolia client.\n * @return {AlgoliaSearchHelper}\n */\n\n\nAlgoliaSearchHelper.prototype.clearCache = function () {\n  this.client.clearCache && this.client.clearCache();\n  return this;\n};\n/**\n * Updates the internal client instance. If the reference of the clients\n * are equal then no update is actually done.\n * @param  {AlgoliaSearch} newClient an AlgoliaSearch client\n * @return {AlgoliaSearchHelper}\n */\n\n\nAlgoliaSearchHelper.prototype.setClient = function (newClient) {\n  if (this.client === newClient) return this;\n\n  if (typeof newClient.addAlgoliaAgent === 'function') {\n    newClient.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n\n  this.client = newClient;\n  return this;\n};\n/**\n * Gets the instance of the currently used client.\n * @return {AlgoliaSearch}\n */\n\n\nAlgoliaSearchHelper.prototype.getClient = function () {\n  return this.client;\n};\n/**\n * Creates an derived instance of the Helper. A derived helper\n * is a way to request other indices synchronised with the lifecycle\n * of the main Helper. This mechanism uses the multiqueries feature\n * of Algolia to aggregate all the requests in a single network call.\n *\n * This method takes a function that is used to create a new SearchParameter\n * that will be used to create requests to Algolia. Those new requests\n * are created just before the `search` event. The signature of the function\n * is `SearchParameters -> SearchParameters`.\n *\n * This method returns a new DerivedHelper which is an EventEmitter\n * that fires the same `search`, `result` and `error` events. Those\n * events, however, will receive data specific to this DerivedHelper\n * and the SearchParameters that is returned by the call of the\n * parameter function.\n * @param {function} fn SearchParameters -> SearchParameters\n * @return {DerivedHelper}\n */\n\n\nAlgoliaSearchHelper.prototype.derive = function (fn) {\n  var derivedHelper = new DerivedHelper(this, fn);\n  this.derivedHelpers.push(derivedHelper);\n  return derivedHelper;\n};\n/**\n * This method detaches a derived Helper from the main one. Prefer using the one from the\n * derived helper itself, to remove the event listeners too.\n * @private\n * @return {undefined}\n * @throws Error\n */\n\n\nAlgoliaSearchHelper.prototype.detachDerivedHelper = function (derivedHelper) {\n  var pos = this.derivedHelpers.indexOf(derivedHelper);\n  if (pos === -1) throw new Error('Derived helper already detached');\n  this.derivedHelpers.splice(pos, 1);\n};\n/**\n * This method returns true if there is currently at least one on-going search.\n * @return {boolean} true if there is a search pending\n */\n\n\nAlgoliaSearchHelper.prototype.hasPendingRequests = function () {\n  return this._currentNbQueries > 0;\n};\n/**\n * @typedef AlgoliaSearchHelper.NumericRefinement\n * @type {object}\n * @property {number[]} value the numbers that are used for filtering this attribute with\n * the operator specified.\n * @property {string} operator the faceting data: value, number of entries\n * @property {string} type will be 'numeric'\n */\n\n/**\n * @typedef AlgoliaSearchHelper.FacetRefinement\n * @type {object}\n * @property {string} value the string use to filter the attribute\n * @property {string} type the type of filter: 'conjunctive', 'disjunctive', 'exclude'\n */\n\n\nmodule.exports = AlgoliaSearchHelper;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? Object(arguments[i]) : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\"; // From https://github.com/reactjs/react-redux/blob/master/src/utils/shallowEqual.js\n\nexport var shallowEqual = function shallowEqual(objA, objB) {\n  if (objA === objB) {\n    return true;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  } // Test for A's keys different from B.\n\n\n  var hasOwn = Object.prototype.hasOwnProperty;\n\n  for (var i = 0; i < keysA.length; i++) {\n    if (!hasOwn.call(objB, keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n      return false;\n    }\n  }\n\n  return true;\n};\nexport var getDisplayName = function getDisplayName(Component) {\n  return Component.displayName || Component.name || 'UnknownComponent';\n};\nvar resolved = Promise.resolve();\nexport var defer = function defer(f) {\n  resolved.then(f);\n};\n\nvar isPlainObject = function isPlainObject(value) {\n  return _typeof(value) === 'object' && value !== null && !Array.isArray(value);\n};\n\nexport var removeEmptyKey = function removeEmptyKey(obj) {\n  Object.keys(obj).forEach(function (key) {\n    var value = obj[key];\n\n    if (!isPlainObject(value)) {\n      return;\n    }\n\n    if (!objectHasKeys(value)) {\n      delete obj[key];\n    } else {\n      removeEmptyKey(value);\n    }\n  });\n  return obj;\n};\nexport var removeEmptyArraysFromObject = function removeEmptyArraysFromObject(obj) {\n  Object.keys(obj).forEach(function (key) {\n    var value = obj[key];\n\n    if (Array.isArray(value) && value.length === 0) {\n      delete obj[key];\n    }\n  });\n  return obj;\n};\nexport function addAbsolutePositions(hits, hitsPerPage, page) {\n  return hits.map(function (hit, index) {\n    return _objectSpread({}, hit, {\n      __position: hitsPerPage * page + index + 1\n    });\n  });\n}\nexport function addQueryID(hits, queryID) {\n  if (!queryID) {\n    return hits;\n  }\n\n  return hits.map(function (hit) {\n    return _objectSpread({}, hit, {\n      __queryID: queryID\n    });\n  });\n}\nexport function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n\n  return undefined;\n}\nexport function objectHasKeys(object) {\n  return object && Object.keys(object).length > 0;\n} // https://github.com/babel/babel/blob/3aaafae053fa75febb3aa45d45b6f00646e30ba4/packages/babel-helpers/src/helpers.js#L604-L620\n\nexport function omit(source, excluded) {\n  if (source === null || source === undefined) {\n    return {};\n  }\n\n  var target = {};\n  var sourceKeys = Object.keys(source);\n\n  for (var i = 0; i < sourceKeys.length; i++) {\n    var _key = sourceKeys[i];\n\n    if (excluded.indexOf(_key) >= 0) {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    target[_key] = source[_key];\n  }\n\n  return target;\n}\n/**\n * Retrieve the value at a path of the object:\n *\n * @example\n * getPropertyByPath(\n *   { test: { this: { function: [{ now: { everyone: true } }] } } },\n *   'test.this.function[0].now.everyone'\n * ); // true\n *\n * getPropertyByPath(\n *   { test: { this: { function: [{ now: { everyone: true } }] } } },\n *   ['test', 'this', 'function', 0, 'now', 'everyone']\n * ); // true\n *\n * @param object Source object to query\n * @param path either an array of properties, or a string form of the properties, separated by .\n */\n\nexport var getPropertyByPath = function getPropertyByPath(object, path) {\n  return (Array.isArray(path) ? path : path.replace(/\\[(\\d+)]/g, '.$1').split('.')).reduce(function (current, key) {\n    return current ? current[key] : undefined;\n  }, object);\n};\nexport function getObjectType(object) {\n  return Object.prototype.toString.call(object).slice(8, -1);\n}","import { createContext } from 'react';\n\nvar _createContext = createContext({\n  onInternalStateUpdate: function onInternalStateUpdate() {\n    return undefined;\n  },\n  createHrefForState: function createHrefForState() {\n    return '#';\n  },\n  onSearchForFacetValues: function onSearchForFacetValues() {\n    return undefined;\n  },\n  onSearchStateChange: function onSearchStateChange() {\n    return undefined;\n  },\n  onSearchParameters: function onSearchParameters() {\n    return undefined;\n  },\n  store: {},\n  widgetsManager: {},\n  mainTargetedIndex: ''\n}),\n    InstantSearchConsumer = _createContext.Consumer,\n    InstantSearchProvider = _createContext.Provider;\n\nexport { InstantSearchConsumer, InstantSearchProvider };\n\nvar _createContext2 = createContext(undefined),\n    IndexConsumer = _createContext2.Consumer,\n    IndexProvider = _createContext2.Provider;\n\nexport { IndexConsumer, IndexProvider };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport isEqual from 'react-fast-compare';\nimport { shallowEqual, getDisplayName, removeEmptyKey } from './utils';\nimport { InstantSearchConsumer, IndexConsumer } from './context';\n/**\n * Connectors are the HOC used to transform React components\n * into InstantSearch widgets.\n * In order to simplify the construction of such connectors\n * `createConnector` takes a description and transform it into\n * a connector.\n * @param {ConnectorDescription} connectorDesc the description of the connector\n * @return {Connector} a function that wraps a component into\n * an instantsearch connected one.\n */\n\nexport function createConnectorWithoutContext(connectorDesc) {\n  if (!connectorDesc.displayName) {\n    throw new Error('`createConnector` requires you to provide a `displayName` property.');\n  }\n\n  var isWidget = typeof connectorDesc.getSearchParameters === 'function' || typeof connectorDesc.getMetadata === 'function' || typeof connectorDesc.transitionState === 'function';\n  return function (Composed) {\n    var Connector = /*#__PURE__*/function (_Component) {\n      _inherits(Connector, _Component);\n\n      function Connector(props) {\n        var _this;\n\n        _classCallCheck(this, Connector);\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(Connector).call(this, props));\n\n        _defineProperty(_assertThisInitialized(_this), \"unsubscribe\", void 0);\n\n        _defineProperty(_assertThisInitialized(_this), \"unregisterWidget\", void 0);\n\n        _defineProperty(_assertThisInitialized(_this), \"isUnmounting\", false);\n\n        _defineProperty(_assertThisInitialized(_this), \"state\", {\n          providedProps: _this.getProvidedProps(_this.props)\n        });\n\n        _defineProperty(_assertThisInitialized(_this), \"refine\", function () {\n          var _ref;\n\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          _this.props.contextValue.onInternalStateUpdate( // refine will always be defined here because the prop is only given conditionally\n          (_ref = connectorDesc.refine).call.apply(_ref, [_assertThisInitialized(_this), _this.props, _this.props.contextValue.store.getState().widgets].concat(args)));\n        });\n\n        _defineProperty(_assertThisInitialized(_this), \"createURL\", function () {\n          var _ref2;\n\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n\n          return _this.props.contextValue.createHrefForState( // refine will always be defined here because the prop is only given conditionally\n          (_ref2 = connectorDesc.refine).call.apply(_ref2, [_assertThisInitialized(_this), _this.props, _this.props.contextValue.store.getState().widgets].concat(args)));\n        });\n\n        _defineProperty(_assertThisInitialized(_this), \"searchForFacetValues\", function () {\n          var _ref3;\n\n          for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n            args[_key3] = arguments[_key3];\n          }\n\n          _this.props.contextValue.onSearchForFacetValues( // searchForFacetValues will always be defined here because the prop is only given conditionally\n          (_ref3 = connectorDesc.searchForFacetValues).call.apply(_ref3, [_assertThisInitialized(_this), _this.props, _this.props.contextValue.store.getState().widgets].concat(args)));\n        });\n\n        if (connectorDesc.getSearchParameters) {\n          _this.props.contextValue.onSearchParameters(connectorDesc.getSearchParameters.bind(_assertThisInitialized(_this)), {\n            ais: _this.props.contextValue,\n            multiIndexContext: _this.props.indexContextValue\n          }, _this.props);\n        }\n\n        return _this;\n      }\n\n      _createClass(Connector, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n          var _this2 = this;\n\n          this.unsubscribe = this.props.contextValue.store.subscribe(function () {\n            if (!_this2.isUnmounting) {\n              _this2.setState({\n                providedProps: _this2.getProvidedProps(_this2.props)\n              });\n            }\n          });\n\n          if (isWidget) {\n            this.unregisterWidget = this.props.contextValue.widgetsManager.registerWidget(this);\n          }\n        }\n      }, {\n        key: \"shouldComponentUpdate\",\n        value: function shouldComponentUpdate(nextProps, nextState) {\n          if (typeof connectorDesc.shouldComponentUpdate === 'function') {\n            return connectorDesc.shouldComponentUpdate.call(this, this.props, nextProps, this.state, nextState);\n          }\n\n          var propsEqual = shallowEqual(this.props, nextProps);\n\n          if (this.state.providedProps === null || nextState.providedProps === null) {\n            if (this.state.providedProps === nextState.providedProps) {\n              return !propsEqual;\n            }\n\n            return true;\n          }\n\n          return !propsEqual || !shallowEqual(this.state.providedProps, nextState.providedProps);\n        }\n      }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate(prevProps) {\n          if (!isEqual(prevProps, this.props)) {\n            this.setState({\n              providedProps: this.getProvidedProps(this.props)\n            });\n\n            if (isWidget) {\n              this.props.contextValue.widgetsManager.update();\n\n              if (typeof connectorDesc.transitionState === 'function') {\n                this.props.contextValue.onSearchStateChange(connectorDesc.transitionState.call(this, this.props, this.props.contextValue.store.getState().widgets, this.props.contextValue.store.getState().widgets));\n              }\n            }\n          }\n        }\n      }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n          this.isUnmounting = true;\n\n          if (this.unsubscribe) {\n            this.unsubscribe();\n          }\n\n          if (this.unregisterWidget) {\n            this.unregisterWidget();\n\n            if (typeof connectorDesc.cleanUp === 'function') {\n              var nextState = connectorDesc.cleanUp.call(this, this.props, this.props.contextValue.store.getState().widgets);\n              this.props.contextValue.store.setState(_objectSpread({}, this.props.contextValue.store.getState(), {\n                widgets: nextState\n              }));\n              this.props.contextValue.onSearchStateChange(removeEmptyKey(nextState));\n            }\n          }\n        }\n      }, {\n        key: \"getProvidedProps\",\n        value: function getProvidedProps(props) {\n          var _this$props$contextVa = this.props.contextValue.store.getState(),\n              widgets = _this$props$contextVa.widgets,\n              results = _this$props$contextVa.results,\n              resultsFacetValues = _this$props$contextVa.resultsFacetValues,\n              searching = _this$props$contextVa.searching,\n              searchingForFacetValues = _this$props$contextVa.searchingForFacetValues,\n              isSearchStalled = _this$props$contextVa.isSearchStalled,\n              metadata = _this$props$contextVa.metadata,\n              error = _this$props$contextVa.error;\n\n          var searchResults = {\n            results: results,\n            searching: searching,\n            searchingForFacetValues: searchingForFacetValues,\n            isSearchStalled: isSearchStalled,\n            error: error\n          };\n          return connectorDesc.getProvidedProps.call(this, props, widgets, searchResults, metadata, // @MAJOR: move this attribute on the `searchResults` it doesn't\n          // makes sense to have it into a separate argument. The search\n          // flags are on the object why not the results?\n          resultsFacetValues);\n        }\n      }, {\n        key: \"getSearchParameters\",\n        value: function getSearchParameters(searchParameters) {\n          if (typeof connectorDesc.getSearchParameters === 'function') {\n            return connectorDesc.getSearchParameters.call(this, searchParameters, this.props, this.props.contextValue.store.getState().widgets);\n          }\n\n          return null;\n        }\n      }, {\n        key: \"getMetadata\",\n        value: function getMetadata(nextWidgetsState) {\n          if (typeof connectorDesc.getMetadata === 'function') {\n            return connectorDesc.getMetadata.call(this, this.props, nextWidgetsState);\n          }\n\n          return {};\n        }\n      }, {\n        key: \"transitionState\",\n        value: function transitionState(prevWidgetsState, nextWidgetsState) {\n          if (typeof connectorDesc.transitionState === 'function') {\n            return connectorDesc.transitionState.call(this, this.props, prevWidgetsState, nextWidgetsState);\n          }\n\n          return nextWidgetsState;\n        }\n      }, {\n        key: \"render\",\n        value: function render() {\n          var _this$props = this.props,\n              contextValue = _this$props.contextValue,\n              props = _objectWithoutProperties(_this$props, [\"contextValue\"]);\n\n          var providedProps = this.state.providedProps;\n\n          if (providedProps === null) {\n            return null;\n          }\n\n          var refineProps = typeof connectorDesc.refine === 'function' ? {\n            refine: this.refine,\n            createURL: this.createURL\n          } : {};\n          var searchForFacetValuesProps = typeof connectorDesc.searchForFacetValues === 'function' ? {\n            searchForItems: this.searchForFacetValues\n          } : {};\n          return React.createElement(Composed, _extends({}, props, providedProps, refineProps, searchForFacetValuesProps));\n        }\n      }]);\n\n      return Connector;\n    }(Component);\n\n    _defineProperty(Connector, \"displayName\", \"\".concat(connectorDesc.displayName, \"(\").concat(getDisplayName(Composed), \")\"));\n\n    _defineProperty(Connector, \"propTypes\", connectorDesc.propTypes);\n\n    _defineProperty(Connector, \"defaultProps\", connectorDesc.defaultProps);\n\n    return Connector;\n  };\n}\n\nvar createConnectorWithContext = function createConnectorWithContext(connectorDesc) {\n  return function (Composed) {\n    var Connector = createConnectorWithoutContext(connectorDesc)(Composed);\n\n    var ConnectorWrapper = function ConnectorWrapper(props) {\n      return React.createElement(InstantSearchConsumer, null, function (contextValue) {\n        return React.createElement(IndexConsumer, null, function (indexContextValue) {\n          return React.createElement(Connector, _extends({\n            contextValue: contextValue,\n            indexContextValue: indexContextValue\n          }, props));\n        });\n      });\n    };\n\n    return ConnectorWrapper;\n  };\n};\n\nexport default createConnectorWithContext;","import { getPropertyByPath } from './utils';\nexport var HIGHLIGHT_TAGS = {\n  highlightPreTag: \"<ais-highlight-0000000000>\",\n  highlightPostTag: \"</ais-highlight-0000000000>\"\n};\n/**\n * Parses an highlighted attribute into an array of objects with the string value, and\n * a boolean that indicated if this part is highlighted.\n *\n * @param {string} preTag - string used to identify the start of an highlighted value\n * @param {string} postTag - string used to identify the end of an highlighted value\n * @param {string} highlightedValue - highlighted attribute as returned by Algolia highlight feature\n * @return {object[]} - An array of {value: string, isHighlighted: boolean}.\n */\n\nfunction parseHighlightedAttribute(_ref) {\n  var preTag = _ref.preTag,\n      postTag = _ref.postTag,\n      _ref$highlightedValue = _ref.highlightedValue,\n      highlightedValue = _ref$highlightedValue === void 0 ? '' : _ref$highlightedValue;\n  var splitByPreTag = highlightedValue.split(preTag);\n  var firstValue = splitByPreTag.shift();\n  var elements = firstValue === '' ? [] : [{\n    value: firstValue,\n    isHighlighted: false\n  }];\n\n  if (postTag === preTag) {\n    var isHighlighted = true;\n    splitByPreTag.forEach(function (split) {\n      elements.push({\n        value: split,\n        isHighlighted: isHighlighted\n      });\n      isHighlighted = !isHighlighted;\n    });\n  } else {\n    splitByPreTag.forEach(function (split) {\n      var splitByPostTag = split.split(postTag);\n      elements.push({\n        value: splitByPostTag[0],\n        isHighlighted: true\n      });\n\n      if (splitByPostTag[1] !== '') {\n        elements.push({\n          value: splitByPostTag[1],\n          isHighlighted: false\n        });\n      }\n    });\n  }\n\n  return elements;\n}\n/**\n * Find an highlighted attribute given an `attribute` and an `highlightProperty`, parses it,\n * and provided an array of objects with the string value and a boolean if this\n * value is highlighted.\n *\n * In order to use this feature, highlight must be activated in the configuration of\n * the index. The `preTag` and `postTag` attributes are respectively highlightPreTag and\n * highlightPostTag in Algolia configuration.\n *\n * @param {string} preTag - string used to identify the start of an highlighted value\n * @param {string} postTag - string used to identify the end of an highlighted value\n * @param {string} highlightProperty - the property that contains the highlight structure in the results\n * @param {string} attribute - the highlighted attribute to look for\n * @param {object} hit - the actual hit returned by Algolia.\n * @return {object[]} - An array of {value: string, isHighlighted: boolean}.\n */\n\n\nexport function parseAlgoliaHit(_ref2) {\n  var _ref2$preTag = _ref2.preTag,\n      preTag = _ref2$preTag === void 0 ? '<em>' : _ref2$preTag,\n      _ref2$postTag = _ref2.postTag,\n      postTag = _ref2$postTag === void 0 ? '</em>' : _ref2$postTag,\n      highlightProperty = _ref2.highlightProperty,\n      attribute = _ref2.attribute,\n      hit = _ref2.hit;\n  if (!hit) throw new Error('`hit`, the matching record, must be provided');\n  var highlightObject = getPropertyByPath(hit[highlightProperty], attribute) || {};\n\n  if (Array.isArray(highlightObject)) {\n    return highlightObject.map(function (item) {\n      return parseHighlightedAttribute({\n        preTag: preTag,\n        postTag: postTag,\n        highlightedValue: item.value\n      });\n    });\n  }\n\n  return parseHighlightedAttribute({\n    preTag: preTag,\n    postTag: postTag,\n    highlightedValue: highlightObject.value\n  });\n}","import createConnector from '../core/createConnector';\nimport { HIGHLIGHT_TAGS, parseAlgoliaHit } from '../core/highlight';\n\nvar highlight = function highlight(_ref) {\n  var attribute = _ref.attribute,\n      hit = _ref.hit,\n      highlightProperty = _ref.highlightProperty,\n      _ref$preTag = _ref.preTag,\n      preTag = _ref$preTag === void 0 ? HIGHLIGHT_TAGS.highlightPreTag : _ref$preTag,\n      _ref$postTag = _ref.postTag,\n      postTag = _ref$postTag === void 0 ? HIGHLIGHT_TAGS.highlightPostTag : _ref$postTag;\n  return parseAlgoliaHit({\n    attribute: attribute,\n    highlightProperty: highlightProperty,\n    hit: hit,\n    preTag: preTag,\n    postTag: postTag\n  });\n};\n/**\n * connectHighlight connector provides the logic to create an highlighter\n * component that will retrieve, parse and render an highlighted attribute\n * from an Algolia hit.\n * @name connectHighlight\n * @kind connector\n * @category connector\n * @providedPropType {function} highlight - function to retrieve and parse an attribute from a hit. It takes a configuration object with 3 attributes: `highlightProperty` which is the property that contains the highlight structure from the records, `attribute` which is the name of the attribute (it can be either a string or an array of strings) to look for and `hit` which is the hit from Algolia. It returns an array of objects `{value: string, isHighlighted: boolean}`. If the element that corresponds to the attribute is an array of strings, it will return a nested array of objects.\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits, connectHighlight } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const CustomHighlight = connectHighlight(\n *   ({ highlight, attribute, hit, highlightProperty }) => {\n *     const highlights = highlight({\n *       highlightProperty: '_highlightResult',\n *       attribute,\n *       hit\n *     });\n *\n *     return highlights.map(part => part.isHighlighted ? (\n *       <mark>{part.value}</mark>\n *     ) : (\n *       <span>{part.value}</span>\n *     ));\n *   }\n * );\n *\n * const Hit = ({ hit }) => (\n *   <p>\n *     <CustomHighlight attribute=\"name\" hit={hit} />\n *   </p>\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox defaultRefinement=\"pho\" />\n *     <Hits hitComponent={Hit} />\n *   </InstantSearch>\n * );\n */\n\n\nexport default createConnector({\n  displayName: 'AlgoliaHighlighter',\n  propTypes: {},\n  getProvidedProps: function getProvidedProps() {\n    return {\n      highlight: highlight\n    };\n  }\n});","import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport cx from 'classnames';\nexport var createClassNames = function createClassNames(block) {\n  var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ais';\n  return function () {\n    for (var _len = arguments.length, elements = new Array(_len), _key = 0; _key < _len; _key++) {\n      elements[_key] = arguments[_key];\n    }\n\n    var suitElements = elements.filter(function (element) {\n      return element || element === '';\n    }).map(function (element) {\n      var baseClassName = \"\".concat(prefix, \"-\").concat(block);\n      return element ? \"\".concat(baseClassName, \"-\").concat(element) : baseClassName;\n    });\n    return cx(suitElements);\n  };\n};\nexport var isSpecialClick = function isSpecialClick(event) {\n  var isMiddleClick = event.button === 1;\n  return Boolean(isMiddleClick || event.altKey || event.ctrlKey || event.metaKey || event.shiftKey);\n};\nexport var capitalize = function capitalize(key) {\n  return key.length === 0 ? '' : \"\".concat(key[0].toUpperCase()).concat(key.slice(1));\n}; // taken from InstantSearch.js/utils\n\nexport function range(_ref) {\n  var _ref$start = _ref.start,\n      start = _ref$start === void 0 ? 0 : _ref$start,\n      end = _ref.end,\n      _ref$step = _ref.step,\n      step = _ref$step === void 0 ? 1 : _ref$step; // We can't divide by 0 so we re-assign the step to 1 if it happens.\n\n  var limitStep = step === 0 ? 1 : step; // In some cases the array to create has a decimal length.\n  // We therefore need to round the value.\n  // Example:\n  //   { start: 1, end: 5000, step: 500 }\n  //   => Array length = (5000 - 1) / 500 = 9.998\n\n  var arrayLength = Math.round((end - start) / limitStep);\n  return _toConsumableArray(Array(arrayLength)).map(function (_, current) {\n    return (start + current) * limitStep;\n  });\n}\nexport function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n\n  return undefined;\n}","import React from 'react';\nimport classNames from 'classnames';\nexport var Highlight = function Highlight(_ref) {\n  var cx = _ref.cx,\n      value = _ref.value,\n      highlightedTagName = _ref.highlightedTagName,\n      isHighlighted = _ref.isHighlighted,\n      nonHighlightedTagName = _ref.nonHighlightedTagName;\n  var TagName = isHighlighted ? highlightedTagName : nonHighlightedTagName;\n  var className = isHighlighted ? 'highlighted' : 'nonHighlighted';\n  return React.createElement(TagName, {\n    className: cx(className)\n  }, value);\n};\n\nvar Highlighter = function Highlighter(_ref2) {\n  var cx = _ref2.cx,\n      hit = _ref2.hit,\n      attribute = _ref2.attribute,\n      highlight = _ref2.highlight,\n      highlightProperty = _ref2.highlightProperty,\n      tagName = _ref2.tagName,\n      nonHighlightedTagName = _ref2.nonHighlightedTagName,\n      separator = _ref2.separator,\n      className = _ref2.className;\n  var parsedHighlightedValue = highlight({\n    hit: hit,\n    attribute: attribute,\n    highlightProperty: highlightProperty\n  });\n  return React.createElement(\"span\", {\n    className: classNames(cx(''), className)\n  }, parsedHighlightedValue.map(function (item, i) {\n    if (Array.isArray(item)) {\n      var isLast = i === parsedHighlightedValue.length - 1;\n      return React.createElement(\"span\", {\n        key: i\n      }, item.map(function (element, index) {\n        return React.createElement(Highlight, {\n          cx: cx,\n          key: index,\n          value: element.value,\n          highlightedTagName: tagName,\n          nonHighlightedTagName: nonHighlightedTagName,\n          isHighlighted: element.isHighlighted\n        });\n      }), !isLast && React.createElement(\"span\", {\n        className: cx('separator')\n      }, separator));\n    }\n\n    return React.createElement(Highlight, {\n      cx: cx,\n      key: i,\n      value: item.value,\n      highlightedTagName: tagName,\n      nonHighlightedTagName: nonHighlightedTagName,\n      isHighlighted: item.isHighlighted\n    });\n  }));\n};\n\nHighlighter.defaultProps = {\n  tagName: 'em',\n  nonHighlightedTagName: 'span',\n  className: '',\n  separator: ', '\n};\nexport default Highlighter;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { createClassNames } from '../core/utils';\nimport Highlighter from './Highlighter';\nvar cx = createClassNames('Highlight');\n\nvar Highlight = function Highlight(props) {\n  return React.createElement(Highlighter, _extends({}, props, {\n    highlightProperty: \"_highlightResult\",\n    cx: cx\n  }));\n};\n\nexport default Highlight;","import { connectHighlight } from 'react-instantsearch-core';\nimport Highlight from '../components/Highlight';\n/**\n * Renders any attribute from a hit into its highlighted form when relevant.\n *\n * Read more about it in the [Highlighting results](guide/Highlighting_results.html) guide.\n * @name Highlight\n * @kind widget\n * @propType {string} attribute - location of the highlighted attribute in the hit (the corresponding element can be either a string or an array of strings)\n * @propType {object} hit - hit object containing the highlighted attribute\n * @propType {string} [tagName='em'] - tag to be used for highlighted parts of the hit\n * @propType {string} [nonHighlightedTagName='span'] - tag to be used for the parts of the hit that are not highlighted\n * @propType {node} [separator=',<space>'] - symbol used to separate the elements of the array in case the attribute points to an array of strings.\n * @themeKey ais-Highlight - root of the component\n * @themeKey ais-Highlight-highlighted - part of the text which is highlighted\n * @themeKey ais-Highlight-nonHighlighted - part of the text that is not highlighted\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits, Highlight } from 'react-instantsearch-dom';\n *\n * const Hit = ({ hit }) => (\n *   <div>\n *     <Highlight attribute=\"name\" hit={hit} />\n *   </div>\n * );\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox defaultRefinement=\"Pho\" />\n *     <Hits hitComponent={Hit} />\n *   </InstantSearch>\n * );\n */\n\nexport default connectHighlight(Highlight);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport { createClassNames } from '../core/utils';\nimport Highlighter from './Highlighter';\nvar cx = createClassNames('Snippet');\n\nvar Snippet = function Snippet(props) {\n  return React.createElement(Highlighter, _extends({}, props, {\n    highlightProperty: \"_snippetResult\",\n    cx: cx\n  }));\n};\n\nexport default Snippet;","import { connectHighlight } from 'react-instantsearch-core';\nimport Snippet from '../components/Snippet';\n/**\n * Renders any attribute from an hit into its highlighted snippet form when relevant.\n *\n * Read more about it in the [Highlighting results](guide/Highlighting_results.html) guide.\n * @name Snippet\n * @kind widget\n * @requirements To use this widget, the attribute name passed to the `attribute` prop must be\n * present in \"Attributes to snippet\" on the Algolia dashboard or configured as `attributesToSnippet`\n * via a set settings call to the Algolia API.\n * @propType {string} attribute - location of the highlighted snippet attribute in the hit (the corresponding element can be either a string or an array of strings)\n * @propType {object} hit - hit object containing the highlighted snippet attribute\n * @propType {string} [tagName='em'] - tag to be used for highlighted parts of the attribute\n * @propType {string} [nonHighlightedTagName='span'] - tag to be used for the parts of the hit that are not highlighted\n * @propType {node} [separator=',<space>'] - symbol used to separate the elements of the array in case the attribute points to an array of strings.\n * @themeKey ais-Snippet - the root span of the widget\n * @themeKey ais-Snippet-highlighted - the highlighted text\n * @themeKey ais-Snippet-nonHighlighted - the normal text\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits, Snippet } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const Hit = ({ hit }) => (\n *   <div>\n *     <Snippet attribute=\"description\" hit={hit} />\n *   </div>\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox defaultRefinement=\"adjustable\" />\n *     <Hits hitComponent={Hit} />\n *   </InstantSearch>\n * );\n */\n\nexport default connectHighlight(Snippet);","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport { omit } from './utils';\nexport function getIndexId(context) {\n  return hasMultipleIndices(context) ? context.multiIndexContext.targetedIndex : context.ais.mainTargetedIndex;\n}\nexport function getResults(searchResults, context) {\n  if (searchResults.results) {\n    if (searchResults.results.hits) {\n      return searchResults.results;\n    }\n\n    var indexId = getIndexId(context);\n\n    if (searchResults.results[indexId]) {\n      return searchResults.results[indexId];\n    }\n  }\n\n  return null;\n}\nexport function hasMultipleIndices(context) {\n  return context && context.multiIndexContext;\n} // eslint-disable-next-line max-params\n\nexport function refineValue(searchState, nextRefinement, context, resetPage, namespace) {\n  if (hasMultipleIndices(context)) {\n    var indexId = getIndexId(context);\n    return namespace ? refineMultiIndexWithNamespace(searchState, nextRefinement, indexId, resetPage, namespace) : refineMultiIndex(searchState, nextRefinement, indexId, resetPage);\n  } else {\n    // When we have a multi index page with shared widgets we should also\n    // reset their page to 1 if the resetPage is provided. Otherwise the\n    // indices will always be reset\n    // see: https://github.com/algolia/react-instantsearch/issues/310\n    // see: https://github.com/algolia/react-instantsearch/issues/637\n    if (searchState.indices && resetPage) {\n      Object.keys(searchState.indices).forEach(function (targetedIndex) {\n        searchState = refineValue(searchState, {\n          page: 1\n        }, {\n          multiIndexContext: {\n            targetedIndex: targetedIndex\n          }\n        }, true, namespace);\n      });\n    }\n\n    return namespace ? refineSingleIndexWithNamespace(searchState, nextRefinement, resetPage, namespace) : refineSingleIndex(searchState, nextRefinement, resetPage);\n  }\n}\n\nfunction refineMultiIndex(searchState, nextRefinement, indexId, resetPage) {\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  var state = searchState.indices && searchState.indices[indexId] ? _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread({}, searchState.indices[indexId], nextRefinement, page))) : _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread({}, nextRefinement, page)));\n  return _objectSpread({}, searchState, {\n    indices: state\n  });\n}\n\nfunction refineSingleIndex(searchState, nextRefinement, resetPage) {\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  return _objectSpread({}, searchState, nextRefinement, page);\n} // eslint-disable-next-line max-params\n\n\nfunction refineMultiIndexWithNamespace(searchState, nextRefinement, indexId, resetPage, namespace) {\n  var _objectSpread4;\n\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  var state = searchState.indices && searchState.indices[indexId] ? _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread({}, searchState.indices[indexId], (_objectSpread4 = {}, _defineProperty(_objectSpread4, namespace, _objectSpread({}, searchState.indices[indexId][namespace], nextRefinement)), _defineProperty(_objectSpread4, \"page\", 1), _objectSpread4)))) : _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread(_defineProperty({}, namespace, nextRefinement), page)));\n  return _objectSpread({}, searchState, {\n    indices: state\n  });\n}\n\nfunction refineSingleIndexWithNamespace(searchState, nextRefinement, resetPage, namespace) {\n  var page = resetPage ? {\n    page: 1\n  } : undefined;\n  return _objectSpread({}, searchState, _defineProperty({}, namespace, _objectSpread({}, searchState[namespace], nextRefinement)), page);\n}\n\nfunction getNamespaceAndAttributeName(id) {\n  var parts = id.match(/^([^.]*)\\.(.*)/);\n  var namespace = parts && parts[1];\n  var attributeName = parts && parts[2];\n  return {\n    namespace: namespace,\n    attributeName: attributeName\n  };\n}\n\nfunction hasRefinements(_ref) {\n  var multiIndex = _ref.multiIndex,\n      indexId = _ref.indexId,\n      namespace = _ref.namespace,\n      attributeName = _ref.attributeName,\n      id = _ref.id,\n      searchState = _ref.searchState;\n\n  if (multiIndex && namespace) {\n    return searchState.indices && searchState.indices[indexId] && searchState.indices[indexId][namespace] && Object.hasOwnProperty.call(searchState.indices[indexId][namespace], attributeName);\n  }\n\n  if (multiIndex) {\n    return searchState.indices && searchState.indices[indexId] && Object.hasOwnProperty.call(searchState.indices[indexId], id);\n  }\n\n  if (namespace) {\n    return searchState[namespace] && Object.hasOwnProperty.call(searchState[namespace], attributeName);\n  }\n\n  return Object.hasOwnProperty.call(searchState, id);\n}\n\nfunction getRefinements(_ref2) {\n  var multiIndex = _ref2.multiIndex,\n      indexId = _ref2.indexId,\n      namespace = _ref2.namespace,\n      attributeName = _ref2.attributeName,\n      id = _ref2.id,\n      searchState = _ref2.searchState;\n\n  if (multiIndex && namespace) {\n    return searchState.indices[indexId][namespace][attributeName];\n  }\n\n  if (multiIndex) {\n    return searchState.indices[indexId][id];\n  }\n\n  if (namespace) {\n    return searchState[namespace][attributeName];\n  }\n\n  return searchState[id];\n}\n\nexport function getCurrentRefinementValue(props, searchState, context, id, defaultValue) {\n  var indexId = getIndexId(context);\n\n  var _getNamespaceAndAttri = getNamespaceAndAttributeName(id),\n      namespace = _getNamespaceAndAttri.namespace,\n      attributeName = _getNamespaceAndAttri.attributeName;\n\n  var multiIndex = hasMultipleIndices(context);\n  var args = {\n    multiIndex: multiIndex,\n    indexId: indexId,\n    namespace: namespace,\n    attributeName: attributeName,\n    id: id,\n    searchState: searchState\n  };\n  var hasRefinementsValue = hasRefinements(args);\n\n  if (hasRefinementsValue) {\n    return getRefinements(args);\n  }\n\n  if (props.defaultRefinement) {\n    return props.defaultRefinement;\n  }\n\n  return defaultValue;\n}\nexport function cleanUpValue(searchState, context, id) {\n  var indexId = getIndexId(context);\n\n  var _getNamespaceAndAttri2 = getNamespaceAndAttributeName(id),\n      namespace = _getNamespaceAndAttri2.namespace,\n      attributeName = _getNamespaceAndAttri2.attributeName;\n\n  if (hasMultipleIndices(context) && Boolean(searchState.indices)) {\n    return cleanUpValueWithMultiIndex({\n      attribute: attributeName,\n      searchState: searchState,\n      indexId: indexId,\n      id: id,\n      namespace: namespace\n    });\n  }\n\n  return cleanUpValueWithSingleIndex({\n    attribute: attributeName,\n    searchState: searchState,\n    id: id,\n    namespace: namespace\n  });\n}\n\nfunction cleanUpValueWithSingleIndex(_ref3) {\n  var searchState = _ref3.searchState,\n      id = _ref3.id,\n      namespace = _ref3.namespace,\n      attribute = _ref3.attribute;\n\n  if (namespace) {\n    return _objectSpread({}, searchState, _defineProperty({}, namespace, omit(searchState[namespace], [attribute])));\n  }\n\n  return omit(searchState, [id]);\n}\n\nfunction cleanUpValueWithMultiIndex(_ref4) {\n  var searchState = _ref4.searchState,\n      indexId = _ref4.indexId,\n      id = _ref4.id,\n      namespace = _ref4.namespace,\n      attribute = _ref4.attribute;\n  var indexSearchState = searchState.indices[indexId];\n\n  if (namespace && indexSearchState) {\n    return _objectSpread({}, searchState, {\n      indices: _objectSpread({}, searchState.indices, _defineProperty({}, indexId, _objectSpread({}, indexSearchState, _defineProperty({}, namespace, omit(indexSearchState[namespace], [attribute])))))\n    });\n  }\n\n  if (indexSearchState) {\n    return _objectSpread({}, searchState, {\n      indices: _objectSpread({}, searchState.indices, _defineProperty({}, indexId, omit(indexSearchState, [id])))\n    });\n  }\n\n  return searchState;\n}","import createConnector from '../core/createConnector';\nimport { getResults } from '../core/indexUtils';\nimport { addAbsolutePositions, addQueryID } from '../core/utils';\n/**\n * connectHits connector provides the logic to create connected\n * components that will render the results retrieved from\n * Algolia.\n *\n * To configure the number of hits retrieved, use [HitsPerPage widget](widgets/HitsPerPage.html),\n * [connectHitsPerPage connector](connectors/connectHitsPerPage.html) or pass the hitsPerPage\n * prop to a [Configure](guide/Search_parameters.html) widget.\n *\n * **Warning:** you will need to use the **objectID** property available on every hit as a key\n * when iterating over them. This will ensure you have the best possible UI experience\n * especially on slow networks.\n * @name connectHits\n * @kind connector\n * @providedPropType {array.<object>} hits - the records that matched the search state\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, Highlight, connectHits } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n * const CustomHits = connectHits(({ hits }) => (\n *   <div>\n *     {hits.map(hit =>\n *       <p key={hit.objectID}>\n *         <Highlight attribute=\"name\" hit={hit} />\n *       </p>\n *     )}\n *   </div>\n * ));\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <CustomHits />\n *   </InstantSearch>\n * );\n */\n\nexport default createConnector({\n  displayName: 'AlgoliaHits',\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    var results = getResults(searchResults, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n\n    if (!results) {\n      return {\n        hits: []\n      };\n    }\n\n    var hitsWithPositions = addAbsolutePositions(results.hits, results.hitsPerPage, results.page);\n    var hitsWithPositionsAndQueryID = addQueryID(hitsWithPositions, results.queryID);\n    return {\n      hits: hitsWithPositionsAndQueryID\n    };\n  },\n\n  /**\n   * Hits needs to be considered as a widget to trigger a search,\n   * even if no other widgets are used.\n   *\n   * To be considered as a widget you need either:\n   * - getSearchParameters\n   * - getMetadata\n   * - transitionState\n   *\n   * See: createConnector.tsx\n   */\n  getSearchParameters: function getSearchParameters(searchParameters) {\n    return searchParameters;\n  }\n});","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport PropTypes from 'prop-types';\nimport createConnector from '../core/createConnector';\nimport { cleanUpValue, refineValue, getCurrentRefinementValue, getIndexId } from '../core/indexUtils';\n\nfunction getId() {\n  return 'query';\n}\n\nfunction getCurrentRefinement(props, searchState, context) {\n  var id = getId(props);\n  var currentRefinement = getCurrentRefinementValue(props, searchState, context, id, '');\n\n  if (currentRefinement) {\n    return currentRefinement;\n  }\n\n  return '';\n}\n\nfunction _refine(props, searchState, nextRefinement, context) {\n  var id = getId();\n\n  var nextValue = _defineProperty({}, id, nextRefinement);\n\n  var resetPage = true;\n  return refineValue(searchState, nextValue, context, resetPage);\n}\n\nfunction _cleanUp(props, searchState, context) {\n  return cleanUpValue(searchState, context, getId());\n}\n/**\n * connectSearchBox connector provides the logic to build a widget that will\n * let the user search for a query\n * @name connectSearchBox\n * @kind connector\n * @propType {string} [defaultRefinement] - Provide a default value for the query\n * @providedPropType {function} refine - a function to change the current query\n * @providedPropType {string} currentRefinement - the current query used\n * @providedPropType {boolean} isSearchStalled - a flag that indicates if InstantSearch has detected that searches are stalled\n */\n\n\nexport default createConnector({\n  displayName: 'AlgoliaSearchBox',\n  propTypes: {\n    defaultRefinement: PropTypes.string\n  },\n  getProvidedProps: function getProvidedProps(props, searchState, searchResults) {\n    return {\n      currentRefinement: getCurrentRefinement(props, searchState, {\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      isSearchStalled: searchResults.isSearchStalled\n    };\n  },\n  refine: function refine(props, searchState, nextRefinement) {\n    return _refine(props, searchState, nextRefinement, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  cleanUp: function cleanUp(props, searchState) {\n    return _cleanUp(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n  },\n  getSearchParameters: function getSearchParameters(searchParameters, props, searchState) {\n    return searchParameters.setQuery(getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    }));\n  },\n  getMetadata: function getMetadata(props, searchState) {\n    var id = getId(props);\n    var currentRefinement = getCurrentRefinement(props, searchState, {\n      ais: props.contextValue,\n      multiIndexContext: props.indexContextValue\n    });\n    return {\n      id: id,\n      index: getIndexId({\n        ais: props.contextValue,\n        multiIndexContext: props.indexContextValue\n      }),\n      items: currentRefinement === null ? [] : [{\n        label: \"\".concat(id, \": \").concat(currentRefinement),\n        value: function value(nextState) {\n          return _refine(props, nextState, '', {\n            ais: props.contextValue,\n            multiIndexContext: props.indexContextValue\n          });\n        },\n        currentRefinement: currentRefinement\n      }]\n    };\n  }\n});","import { defer } from './utils';\nexport default function createWidgetsManager(onWidgetsUpdate) {\n  var widgets = []; // Is an update scheduled?\n\n  var scheduled = false; // The state manager's updates need to be batched since more than one\n  // component can register or unregister widgets during the same tick.\n\n  function scheduleUpdate() {\n    if (scheduled) {\n      return;\n    }\n\n    scheduled = true;\n    defer(function () {\n      scheduled = false;\n      onWidgetsUpdate();\n    });\n  }\n\n  return {\n    registerWidget: function registerWidget(widget) {\n      widgets.push(widget);\n      scheduleUpdate();\n      return function unregisterWidget() {\n        widgets.splice(widgets.indexOf(widget), 1);\n        scheduleUpdate();\n      };\n    },\n    update: scheduleUpdate,\n    getWidgets: function getWidgets() {\n      return widgets;\n    }\n  };\n}","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport algoliasearchHelper from 'algoliasearch-helper';\nimport createWidgetsManager from './createWidgetsManager';\nimport createStore from './createStore';\nimport { HIGHLIGHT_TAGS } from './highlight';\nimport { hasMultipleIndices } from './indexUtils';\nimport { version as ReactVersion } from 'react';\nimport version from './version';\n\nfunction addAlgoliaAgents(searchClient) {\n  if (typeof searchClient.addAlgoliaAgent === 'function') {\n    searchClient.addAlgoliaAgent(\"react (\".concat(ReactVersion, \")\"));\n    searchClient.addAlgoliaAgent(\"react-instantsearch (\".concat(version, \")\"));\n  }\n}\n\nvar isMultiIndexContext = function isMultiIndexContext(widget) {\n  return hasMultipleIndices({\n    ais: widget.props.contextValue,\n    multiIndexContext: widget.props.indexContextValue\n  });\n};\n\nvar isTargetedIndexEqualIndex = function isTargetedIndexEqualIndex(widget, indexId) {\n  return widget.props.indexContextValue.targetedIndex === indexId;\n}; // Relying on the `indexId` is a bit brittle to detect the `Index` widget.\n// Since it's a class we could rely on `instanceof` or similar. We never\n// had an issue though. Works for now.\n\n\nvar isIndexWidget = function isIndexWidget(widget) {\n  return Boolean(widget.props.indexId);\n};\n\nvar isIndexWidgetEqualIndex = function isIndexWidgetEqualIndex(widget, indexId) {\n  return widget.props.indexId === indexId;\n};\n\nvar sortIndexWidgetsFirst = function sortIndexWidgetsFirst(firstWidget, secondWidget) {\n  var isFirstWidgetIndex = isIndexWidget(firstWidget);\n  var isSecondWidgetIndex = isIndexWidget(secondWidget);\n\n  if (isFirstWidgetIndex && !isSecondWidgetIndex) {\n    return -1;\n  }\n\n  if (!isFirstWidgetIndex && isSecondWidgetIndex) {\n    return 1;\n  }\n\n  return 0;\n}; // This function is copied from the algoliasearch v4 API Client. If modified,\n// consider updating it also in `serializeQueryParameters` from `@algolia/transporter`.\n\n\nfunction serializeQueryParameters(parameters) {\n  var isObjectOrArray = function isObjectOrArray(value) {\n    return Object.prototype.toString.call(value) === '[object Object]' || Object.prototype.toString.call(value) === '[object Array]';\n  };\n\n  var encode = function encode(format) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    var i = 0;\n    return format.replace(/%s/g, function () {\n      return encodeURIComponent(args[i++]);\n    });\n  };\n\n  return Object.keys(parameters).map(function (key) {\n    return encode('%s=%s', key, isObjectOrArray(parameters[key]) ? JSON.stringify(parameters[key]) : parameters[key]);\n  }).join('&');\n}\n/**\n * Creates a new instance of the InstantSearchManager which controls the widgets and\n * trigger the search when the widgets are updated.\n * @param {string} indexName - the main index name\n * @param {object} initialState - initial widget state\n * @param {object} SearchParameters - optional additional parameters to send to the algolia API\n * @param {number} stalledSearchDelay - time (in ms) after the search is stalled\n * @return {InstantSearchManager} a new instance of InstantSearchManager\n */\n\n\nexport default function createInstantSearchManager(_ref) {\n  var indexName = _ref.indexName,\n      _ref$initialState = _ref.initialState,\n      initialState = _ref$initialState === void 0 ? {} : _ref$initialState,\n      searchClient = _ref.searchClient,\n      resultsState = _ref.resultsState,\n      stalledSearchDelay = _ref.stalledSearchDelay;\n  var helper = algoliasearchHelper(searchClient, indexName, _objectSpread({}, HIGHLIGHT_TAGS));\n  addAlgoliaAgents(searchClient);\n  helper.on('search', handleNewSearch).on('result', handleSearchSuccess({\n    indexId: indexName\n  })).on('error', handleSearchError);\n  var skip = false;\n  var stalledSearchTimer = null;\n  var initialSearchParameters = helper.state;\n  var widgetsManager = createWidgetsManager(onWidgetsUpdate);\n  hydrateSearchClient(searchClient, resultsState);\n  var store = createStore({\n    widgets: initialState,\n    metadata: [],\n    results: hydrateResultsState(resultsState),\n    error: null,\n    searching: false,\n    isSearchStalled: true,\n    searchingForFacetValues: false\n  });\n\n  function skipSearch() {\n    skip = true;\n  }\n\n  function updateClient(client) {\n    addAlgoliaAgents(client);\n    helper.setClient(client);\n    search();\n  }\n\n  function clearCache() {\n    helper.clearCache();\n    search();\n  }\n\n  function getMetadata(state) {\n    return widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getMetadata);\n    }).map(function (widget) {\n      return widget.getMetadata(state);\n    });\n  }\n\n  function getSearchParameters() {\n    var sharedParameters = widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getSearchParameters);\n    }).filter(function (widget) {\n      return !isMultiIndexContext(widget) && !isIndexWidget(widget);\n    }).reduce(function (res, widget) {\n      return widget.getSearchParameters(res);\n    }, initialSearchParameters);\n    var mainParameters = widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getSearchParameters);\n    }).filter(function (widget) {\n      var targetedIndexEqualMainIndex = isMultiIndexContext(widget) && isTargetedIndexEqualIndex(widget, indexName);\n      var subIndexEqualMainIndex = isIndexWidget(widget) && isIndexWidgetEqualIndex(widget, indexName);\n      return targetedIndexEqualMainIndex || subIndexEqualMainIndex;\n    }) // We have to sort the `Index` widgets first so the `index` parameter\n    // is correctly set in the `reduce` function for the following widgets\n    .sort(sortIndexWidgetsFirst).reduce(function (res, widget) {\n      return widget.getSearchParameters(res);\n    }, sharedParameters);\n    var derivedIndices = widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.getSearchParameters);\n    }).filter(function (widget) {\n      var targetedIndexNotEqualMainIndex = isMultiIndexContext(widget) && !isTargetedIndexEqualIndex(widget, indexName);\n      var subIndexNotEqualMainIndex = isIndexWidget(widget) && !isIndexWidgetEqualIndex(widget, indexName);\n      return targetedIndexNotEqualMainIndex || subIndexNotEqualMainIndex;\n    }) // We have to sort the `Index` widgets first so the `index` parameter\n    // is correctly set in the `reduce` function for the following widgets\n    .sort(sortIndexWidgetsFirst).reduce(function (indices, widget) {\n      var indexId = isMultiIndexContext(widget) ? widget.props.indexContextValue.targetedIndex : widget.props.indexId;\n      var widgets = indices[indexId] || [];\n      return _objectSpread({}, indices, _defineProperty({}, indexId, widgets.concat(widget)));\n    }, {});\n    var derivedParameters = Object.keys(derivedIndices).map(function (indexId) {\n      return {\n        parameters: derivedIndices[indexId].reduce(function (res, widget) {\n          return widget.getSearchParameters(res);\n        }, sharedParameters),\n        indexId: indexId\n      };\n    });\n    return {\n      mainParameters: mainParameters,\n      derivedParameters: derivedParameters\n    };\n  }\n\n  function search() {\n    if (!skip) {\n      var _getSearchParameters = getSearchParameters(helper.state),\n          mainParameters = _getSearchParameters.mainParameters,\n          derivedParameters = _getSearchParameters.derivedParameters; // We have to call `slice` because the method `detach` on the derived\n      // helpers mutates the value `derivedHelpers`. The `forEach` loop does\n      // not iterate on each value and we're not able to correctly clear the\n      // previous derived helpers (memory leak + useless requests).\n\n\n      helper.derivedHelpers.slice().forEach(function (derivedHelper) {\n        // Since we detach the derived helpers on **every** new search they\n        // won't receive intermediate results in case of a stalled search.\n        // Only the last result is dispatched by the derived helper because\n        // they are not detached yet:\n        //\n        // - a -> main helper receives results\n        // - ap -> main helper receives results\n        // - app -> main helper + derived helpers receive results\n        //\n        // The quick fix is to avoid to detach them on search but only once they\n        // received the results. But it means that in case of a stalled search\n        // all the derived helpers not detached yet register a new search inside\n        // the helper. The number grows fast in case of a bad network and it's\n        // not deterministic.\n        derivedHelper.detach();\n      });\n      derivedParameters.forEach(function (_ref2) {\n        var indexId = _ref2.indexId,\n            parameters = _ref2.parameters;\n        var derivedHelper = helper.derive(function () {\n          return parameters;\n        });\n        derivedHelper.on('result', handleSearchSuccess({\n          indexId: indexId\n        })).on('error', handleSearchError);\n      });\n      helper.setState(mainParameters);\n      helper.search();\n    }\n  }\n\n  function handleSearchSuccess(_ref3) {\n    var indexId = _ref3.indexId;\n    return function (event) {\n      var state = store.getState();\n      var isDerivedHelpersEmpty = !helper.derivedHelpers.length;\n      var results = state.results ? state.results : {}; // Switching from mono index to multi index and vice versa must reset the\n      // results to an empty object, otherwise we keep reference of stalled and\n      // unused results.\n\n      results = !isDerivedHelpersEmpty && results.getFacetByName ? {} : results;\n\n      if (!isDerivedHelpersEmpty) {\n        results = _objectSpread({}, results, _defineProperty({}, indexId, event.results));\n      } else {\n        results = event.results;\n      }\n\n      var currentState = store.getState();\n      var nextIsSearchStalled = currentState.isSearchStalled;\n\n      if (!helper.hasPendingRequests()) {\n        clearTimeout(stalledSearchTimer);\n        stalledSearchTimer = null;\n        nextIsSearchStalled = false;\n      }\n\n      var resultsFacetValues = currentState.resultsFacetValues,\n          partialState = _objectWithoutProperties(currentState, [\"resultsFacetValues\"]);\n\n      store.setState(_objectSpread({}, partialState, {\n        results: results,\n        isSearchStalled: nextIsSearchStalled,\n        searching: false,\n        error: null\n      }));\n    };\n  }\n\n  function handleSearchError(_ref4) {\n    var error = _ref4.error;\n    var currentState = store.getState();\n    var nextIsSearchStalled = currentState.isSearchStalled;\n\n    if (!helper.hasPendingRequests()) {\n      clearTimeout(stalledSearchTimer);\n      nextIsSearchStalled = false;\n    }\n\n    var resultsFacetValues = currentState.resultsFacetValues,\n        partialState = _objectWithoutProperties(currentState, [\"resultsFacetValues\"]);\n\n    store.setState(_objectSpread({}, partialState, {\n      isSearchStalled: nextIsSearchStalled,\n      error: error,\n      searching: false\n    }));\n  }\n\n  function handleNewSearch() {\n    if (!stalledSearchTimer) {\n      stalledSearchTimer = setTimeout(function () {\n        var _store$getState = store.getState(),\n            resultsFacetValues = _store$getState.resultsFacetValues,\n            partialState = _objectWithoutProperties(_store$getState, [\"resultsFacetValues\"]);\n\n        store.setState(_objectSpread({}, partialState, {\n          isSearchStalled: true\n        }));\n      }, stalledSearchDelay);\n    }\n  }\n\n  function hydrateSearchClient(client, results) {\n    if (!results) {\n      return;\n    } // Disable cache hydration on:\n    // - Algoliasearch API Client < v4 with cache disabled\n    // - Third party clients (detected by the `addAlgoliaAgent` function missing)\n\n\n    if ((!client.transporter || client._cacheHydrated) && (!client._useCache || typeof client.addAlgoliaAgent !== 'function')) {\n      return;\n    } // Algoliasearch API Client >= v4\n    // To hydrate the client we need to populate the cache with the data from\n    // the server (done in `hydrateSearchClientWithMultiIndexRequest` or\n    // `hydrateSearchClientWithSingleIndexRequest`). But since there is no way\n    // for us to compute the key the same way as `algoliasearch-client` we need\n    // to populate it on a custom key and override the `search` method to\n    // search on it first.\n\n\n    if (client.transporter && !client._cacheHydrated) {\n      client._cacheHydrated = true;\n      var baseMethod = client.search;\n\n      client.search = function (requests) {\n        for (var _len2 = arguments.length, methodArgs = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          methodArgs[_key2 - 1] = arguments[_key2];\n        }\n\n        var requestsWithSerializedParams = requests.map(function (request) {\n          return _objectSpread({}, request, {\n            params: serializeQueryParameters(request.params)\n          });\n        });\n        return client.transporter.responsesCache.get({\n          method: 'search',\n          args: [requestsWithSerializedParams].concat(methodArgs)\n        }, function () {\n          return baseMethod.apply(void 0, [requests].concat(methodArgs));\n        });\n      };\n    }\n\n    if (Array.isArray(results)) {\n      hydrateSearchClientWithMultiIndexRequest(client, results);\n      return;\n    }\n\n    hydrateSearchClientWithSingleIndexRequest(client, results);\n  }\n\n  function hydrateSearchClientWithMultiIndexRequest(client, results) {\n    // Algoliasearch API Client >= v4\n    // Populate the cache with the data from the server\n    if (client.transporter) {\n      client.transporter.responsesCache.set({\n        method: 'search',\n        args: [results.reduce(function (acc, result) {\n          return acc.concat(result.rawResults.map(function (request) {\n            return {\n              indexName: request.index,\n              params: request.params\n            };\n          }));\n        }, [])]\n      }, {\n        results: results.reduce(function (acc, result) {\n          return acc.concat(result.rawResults);\n        }, [])\n      });\n      return;\n    } // Algoliasearch API Client < v4\n    // Prior to client v4 we didn't have a proper API to hydrate the client\n    // cache from the outside. The following code populates the cache with\n    // a single-index result. You can find more information about the\n    // computation of the key inside the client (see link below).\n    // https://github.com/algolia/algoliasearch-client-javascript/blob/c27e89ff92b2a854ae6f40dc524bffe0f0cbc169/src/AlgoliaSearchCore.js#L232-L240\n\n\n    var key = \"/1/indexes/*/queries_body_\".concat(JSON.stringify({\n      requests: results.reduce(function (acc, result) {\n        return acc.concat(result.rawResults.map(function (request) {\n          return {\n            indexName: request.index,\n            params: request.params\n          };\n        }));\n      }, [])\n    }));\n    client.cache = _objectSpread({}, client.cache, _defineProperty({}, key, JSON.stringify({\n      results: results.reduce(function (acc, result) {\n        return acc.concat(result.rawResults);\n      }, [])\n    })));\n  }\n\n  function hydrateSearchClientWithSingleIndexRequest(client, results) {\n    // Algoliasearch API Client >= v4\n    // Populate the cache with the data from the server\n    if (client.transporter) {\n      client.transporter.responsesCache.set({\n        method: 'search',\n        args: [results.rawResults.map(function (request) {\n          return {\n            indexName: request.index,\n            params: request.params\n          };\n        })]\n      }, {\n        results: results.rawResults\n      });\n      return;\n    } // Algoliasearch API Client < v4\n    // Prior to client v4 we didn't have a proper API to hydrate the client\n    // cache from the outside. The following code populates the cache with\n    // a single-index result. You can find more information about the\n    // computation of the key inside the client (see link below).\n    // https://github.com/algolia/algoliasearch-client-javascript/blob/c27e89ff92b2a854ae6f40dc524bffe0f0cbc169/src/AlgoliaSearchCore.js#L232-L240\n\n\n    var key = \"/1/indexes/*/queries_body_\".concat(JSON.stringify({\n      requests: results.rawResults.map(function (request) {\n        return {\n          indexName: request.index,\n          params: request.params\n        };\n      })\n    }));\n    client.cache = _objectSpread({}, client.cache, _defineProperty({}, key, JSON.stringify({\n      results: results.rawResults\n    })));\n  }\n\n  function hydrateResultsState(results) {\n    if (!results) {\n      return null;\n    }\n\n    if (Array.isArray(results)) {\n      return results.reduce(function (acc, result) {\n        return _objectSpread({}, acc, _defineProperty({}, result._internalIndexId, new algoliasearchHelper.SearchResults(new algoliasearchHelper.SearchParameters(result.state), result.rawResults)));\n      }, {});\n    }\n\n    return new algoliasearchHelper.SearchResults(new algoliasearchHelper.SearchParameters(results.state), results.rawResults);\n  } // Called whenever a widget has been rendered with new props.\n\n\n  function onWidgetsUpdate() {\n    var metadata = getMetadata(store.getState().widgets);\n    store.setState(_objectSpread({}, store.getState(), {\n      metadata: metadata,\n      searching: true\n    })); // Since the `getSearchParameters` method of widgets also depends on props,\n    // the result search parameters might have changed.\n\n    search();\n  }\n\n  function transitionState(nextSearchState) {\n    var searchState = store.getState().widgets;\n    return widgetsManager.getWidgets().filter(function (widget) {\n      return Boolean(widget.transitionState);\n    }).reduce(function (res, widget) {\n      return widget.transitionState(searchState, res);\n    }, nextSearchState);\n  }\n\n  function onExternalStateUpdate(nextSearchState) {\n    var metadata = getMetadata(nextSearchState);\n    store.setState(_objectSpread({}, store.getState(), {\n      widgets: nextSearchState,\n      metadata: metadata,\n      searching: true\n    }));\n    search();\n  }\n\n  function onSearchForFacetValues(_ref5) {\n    var facetName = _ref5.facetName,\n        query = _ref5.query,\n        _ref5$maxFacetHits = _ref5.maxFacetHits,\n        maxFacetHits = _ref5$maxFacetHits === void 0 ? 10 : _ref5$maxFacetHits; // The values 1, 100 are the min / max values that the engine accepts.\n    // see: https://www.algolia.com/doc/api-reference/api-parameters/maxFacetHits\n\n    var maxFacetHitsWithinRange = Math.max(1, Math.min(maxFacetHits, 100));\n    store.setState(_objectSpread({}, store.getState(), {\n      searchingForFacetValues: true\n    }));\n    helper.searchForFacetValues(facetName, query, maxFacetHitsWithinRange).then(function (content) {\n      var _objectSpread7;\n\n      store.setState(_objectSpread({}, store.getState(), {\n        error: null,\n        searchingForFacetValues: false,\n        resultsFacetValues: _objectSpread({}, store.getState().resultsFacetValues, (_objectSpread7 = {}, _defineProperty(_objectSpread7, facetName, content.facetHits), _defineProperty(_objectSpread7, \"query\", query), _objectSpread7))\n      }));\n    }, function (error) {\n      store.setState(_objectSpread({}, store.getState(), {\n        searchingForFacetValues: false,\n        error: error\n      }));\n    }).catch(function (error) {\n      // Since setState is synchronous, any error that occurs in the render of a\n      // component will be swallowed by this promise.\n      // This is a trick to make the error show up correctly in the console.\n      // See http://stackoverflow.com/a/30741722/969302\n      setTimeout(function () {\n        throw error;\n      });\n    });\n  }\n\n  function updateIndex(newIndex) {\n    initialSearchParameters = initialSearchParameters.setIndex(newIndex); // No need to trigger a new search here as the widgets will also update and trigger it if needed.\n  }\n\n  function getWidgetsIds() {\n    return store.getState().metadata.reduce(function (res, meta) {\n      return typeof meta.id !== 'undefined' ? res.concat(meta.id) : res;\n    }, []);\n  }\n\n  return {\n    store: store,\n    widgetsManager: widgetsManager,\n    getWidgetsIds: getWidgetsIds,\n    getSearchParameters: getSearchParameters,\n    onSearchForFacetValues: onSearchForFacetValues,\n    onExternalStateUpdate: onExternalStateUpdate,\n    transitionState: transitionState,\n    updateClient: updateClient,\n    updateIndex: updateIndex,\n    clearCache: clearCache,\n    skipSearch: skipSearch\n  };\n}","export default '6.7.0';","export default function createStore(initialState) {\n  var state = initialState;\n  var listeners = [];\n  return {\n    getState: function getState() {\n      return state;\n    },\n    setState: function setState(nextState) {\n      state = nextState;\n      listeners.forEach(function (listener) {\n        return listener();\n      });\n    },\n    subscribe: function subscribe(listener) {\n      listeners.push(listener);\n      return function unsubscribe() {\n        listeners.splice(listeners.indexOf(listener), 1);\n      };\n    }\n  };\n}","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component, Children } from 'react';\nimport isEqual from 'react-fast-compare';\nimport PropTypes from 'prop-types';\nimport createInstantSearchManager from '../core/createInstantSearchManager';\nimport { InstantSearchProvider } from '../core/context';\n\nfunction isControlled(props) {\n  return Boolean(props.searchState);\n}\n/**\n * @description\n * `<InstantSearch>` is the root component of all React InstantSearch implementations.\n * It provides all the connected components (aka widgets) a means to interact\n * with the searchState.\n * @kind widget\n * @name <InstantSearch>\n * @requirements You will need to have an Algolia account to be able to use this widget.\n * [Create one now](https://www.algolia.com/users/sign_up).\n * @propType {string} indexName - Main index in which to search.\n * @propType {boolean} [refresh=false] - Flag to activate when the cache needs to be cleared so that the front-end is updated when a change occurs in the index.\n * @propType {object} [searchClient] - Provide a custom search client.\n * @propType {func} [onSearchStateChange] - Function to be called everytime a new search is done. Useful for [URL Routing](guide/Routing.html).\n * @propType {object} [searchState] - Object to inject some search state. Switches the InstantSearch component in controlled mode. Useful for [URL Routing](guide/Routing.html).\n * @propType {func} [createURL] - Function to call when creating links, useful for [URL Routing](guide/Routing.html).\n * @propType {SearchResults|SearchResults[]} [resultsState] - Use this to inject the results that will be used at first rendering. Those results are found by using the `findResultsState` function. Useful for [Server Side Rendering](guide/Server-side_rendering.html).\n * @propType {number} [stalledSearchDelay=200] - The amount of time before considering that the search takes too much time. The time is expressed in milliseconds.\n * @propType {{ Root: string|function, props: object }} [root] - Use this to customize the root element. Default value: `{ Root: 'div' }`\n * @example\n * import React from 'react';\n * import algoliasearch from 'algoliasearch/lite';\n * import { InstantSearch, SearchBox, Hits } from 'react-instantsearch-dom';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <SearchBox />\n *     <Hits />\n *   </InstantSearch>\n * );\n */\n\n\nvar InstantSearch = /*#__PURE__*/function (_Component) {\n  _inherits(InstantSearch, _Component);\n\n  _createClass(InstantSearch, null, [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var nextIsControlled = isControlled(nextProps);\n      var previousSearchState = prevState.instantSearchManager.store.getState().widgets;\n      var nextSearchState = nextProps.searchState;\n\n      if (nextIsControlled && !isEqual(previousSearchState, nextSearchState)) {\n        prevState.instantSearchManager.onExternalStateUpdate(nextProps.searchState);\n      }\n\n      return {\n        isControlled: nextIsControlled,\n        contextValue: _objectSpread({}, prevState.contextValue, {\n          mainTargetedIndex: nextProps.indexName\n        })\n      };\n    }\n  }]);\n\n  function InstantSearch(props) {\n    var _this;\n\n    _classCallCheck(this, InstantSearch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InstantSearch).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"isUnmounting\", false);\n\n    var instantSearchManager = createInstantSearchManager({\n      indexName: _this.props.indexName,\n      searchClient: _this.props.searchClient,\n      initialState: _this.props.searchState || {},\n      resultsState: _this.props.resultsState,\n      stalledSearchDelay: _this.props.stalledSearchDelay\n    });\n    var contextValue = {\n      store: instantSearchManager.store,\n      widgetsManager: instantSearchManager.widgetsManager,\n      mainTargetedIndex: _this.props.indexName,\n      onInternalStateUpdate: _this.onWidgetsInternalStateUpdate.bind(_assertThisInitialized(_this)),\n      createHrefForState: _this.createHrefForState.bind(_assertThisInitialized(_this)),\n      onSearchForFacetValues: _this.onSearchForFacetValues.bind(_assertThisInitialized(_this)),\n      onSearchStateChange: _this.onSearchStateChange.bind(_assertThisInitialized(_this)),\n      onSearchParameters: _this.onSearchParameters.bind(_assertThisInitialized(_this))\n    };\n    _this.state = {\n      isControlled: isControlled(_this.props),\n      instantSearchManager: instantSearchManager,\n      contextValue: contextValue\n    };\n    return _this;\n  }\n\n  _createClass(InstantSearch, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var prevIsControlled = isControlled(prevProps);\n\n      if (prevIsControlled && !this.state.isControlled) {\n        throw new Error(\"You can't switch <InstantSearch> from being controlled to uncontrolled\");\n      }\n\n      if (!prevIsControlled && this.state.isControlled) {\n        throw new Error(\"You can't switch <InstantSearch> from being uncontrolled to controlled\");\n      }\n\n      if (this.props.refresh !== prevProps.refresh && this.props.refresh) {\n        this.state.instantSearchManager.clearCache();\n      }\n\n      if (prevProps.indexName !== this.props.indexName) {\n        this.state.instantSearchManager.updateIndex(this.props.indexName);\n      }\n\n      if (prevProps.searchClient !== this.props.searchClient) {\n        this.state.instantSearchManager.updateClient(this.props.searchClient);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.isUnmounting = true;\n      this.state.instantSearchManager.skipSearch();\n    }\n  }, {\n    key: \"createHrefForState\",\n    value: function createHrefForState(searchState) {\n      searchState = this.state.instantSearchManager.transitionState(searchState);\n      return this.state.isControlled && this.props.createURL ? this.props.createURL(searchState, this.getKnownKeys()) : '#';\n    }\n  }, {\n    key: \"onWidgetsInternalStateUpdate\",\n    value: function onWidgetsInternalStateUpdate(searchState) {\n      searchState = this.state.instantSearchManager.transitionState(searchState);\n      this.onSearchStateChange(searchState);\n\n      if (!this.state.isControlled) {\n        this.state.instantSearchManager.onExternalStateUpdate(searchState);\n      }\n    }\n  }, {\n    key: \"onSearchStateChange\",\n    value: function onSearchStateChange(searchState) {\n      if (this.props.onSearchStateChange && !this.isUnmounting) {\n        this.props.onSearchStateChange(searchState);\n      }\n    }\n  }, {\n    key: \"onSearchParameters\",\n    value: function onSearchParameters(getSearchParameters, context, props) {\n      if (this.props.onSearchParameters) {\n        var _searchState = this.props.searchState ? this.props.searchState : {};\n\n        this.props.onSearchParameters(getSearchParameters, context, props, _searchState);\n      }\n    }\n  }, {\n    key: \"onSearchForFacetValues\",\n    value: function onSearchForFacetValues(searchState) {\n      this.state.instantSearchManager.onSearchForFacetValues(searchState);\n    }\n  }, {\n    key: \"getKnownKeys\",\n    value: function getKnownKeys() {\n      return this.state.instantSearchManager.getWidgetsIds();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (Children.count(this.props.children) === 0) {\n        return null;\n      }\n\n      return React.createElement(InstantSearchProvider, {\n        value: this.state.contextValue\n      }, this.props.children);\n    }\n  }]);\n\n  return InstantSearch;\n}(Component);\n\n_defineProperty(InstantSearch, \"defaultProps\", {\n  stalledSearchDelay: 200,\n  refresh: false\n});\n\n_defineProperty(InstantSearch, \"propTypes\", {\n  // @TODO: These props are currently constant.\n  indexName: PropTypes.string.isRequired,\n  searchClient: PropTypes.shape({\n    search: PropTypes.func.isRequired,\n    searchForFacetValues: PropTypes.func,\n    addAlgoliaAgent: PropTypes.func,\n    clearCache: PropTypes.func\n  }).isRequired,\n  createURL: PropTypes.func,\n  refresh: PropTypes.bool,\n  searchState: PropTypes.object,\n  onSearchStateChange: PropTypes.func,\n  onSearchParameters: PropTypes.func,\n  resultsState: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  children: PropTypes.node,\n  stalledSearchDelay: PropTypes.number\n});\n\nexport default InstantSearch;","import createConnector from '../core/createConnector';\n/**\n * connectPoweredBy connector provides the logic to build a widget that\n * will display a link to algolia.\n * @name connectPoweredBy\n * @kind connector\n * @providedPropType {string} url - the url to redirect to algolia\n */\n\nexport default createConnector({\n  displayName: 'AlgoliaPoweredBy',\n  getProvidedProps: function getProvidedProps() {\n    var hostname = typeof window === 'undefined' ? '' : window.location.hostname;\n    var url = 'https://www.algolia.com/?' + 'utm_source=react-instantsearch&' + 'utm_medium=website&' + \"utm_content=\".concat(hostname, \"&\") + 'utm_campaign=poweredby';\n    return {\n      url: url\n    };\n  }\n});","import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { translatable } from 'react-instantsearch-core';\nimport { createClassNames } from '../core/utils';\nvar cx = createClassNames('PoweredBy');\n/* eslint-disable max-len */\n\nvar AlgoliaLogo = function AlgoliaLogo() {\n  return React.createElement(\"svg\", {\n    xmlns: \"http://www.w3.org/2000/svg\",\n    baseProfile: \"basic\",\n    viewBox: \"0 0 1366 362\",\n    width: \"100\",\n    height: \"27\",\n    className: cx('logo')\n  }, React.createElement(\"linearGradient\", {\n    id: \"g\",\n    x1: \"428.258\",\n    x2: \"434.145\",\n    y1: \"404.15\",\n    y2: \"409.85\",\n    gradientUnits: \"userSpaceOnUse\",\n    gradientTransform: \"matrix(94.045 0 0 -94.072 -40381.527 38479.52)\"\n  }, React.createElement(\"stop\", {\n    offset: \"0\",\n    stopColor: \"#00AEFF\"\n  }), React.createElement(\"stop\", {\n    offset: \"1\",\n    stopColor: \"#3369E7\"\n  })), React.createElement(\"path\", {\n    d: \"M61.8 15.4h242.8c23.9 0 43.4 19.4 43.4 43.4v242.9c0 23.9-19.4 43.4-43.4 43.4H61.8c-23.9 0-43.4-19.4-43.4-43.4v-243c0-23.9 19.4-43.3 43.4-43.3z\",\n    fill: \"url(#g)\"\n  }), React.createElement(\"path\", {\n    d: \"M187 98.7c-51.4 0-93.1 41.7-93.1 93.2S135.6 285 187 285s93.1-41.7 93.1-93.2-41.6-93.1-93.1-93.1zm0 158.8c-36.2 0-65.6-29.4-65.6-65.6s29.4-65.6 65.6-65.6 65.6 29.4 65.6 65.6-29.3 65.6-65.6 65.6zm0-117.8v48.9c0 1.4 1.5 2.4 2.8 1.7l43.4-22.5c1-.5 1.3-1.7.8-2.7-9-15.8-25.7-26.6-45-27.3-1 0-2 .8-2 1.9zm-60.8-35.9l-5.7-5.7c-5.6-5.6-14.6-5.6-20.2 0l-6.8 6.8c-5.6 5.6-5.6 14.6 0 20.2l5.6 5.6c.9.9 2.2.7 3-.2 3.3-4.5 6.9-8.8 10.9-12.8 4.1-4.1 8.3-7.7 12.9-11 1-.6 1.1-2 .3-2.9zM217.5 89V77.7c0-7.9-6.4-14.3-14.3-14.3h-33.3c-7.9 0-14.3 6.4-14.3 14.3v11.6c0 1.3 1.2 2.2 2.5 1.9 9.3-2.7 19.1-4.1 29-4.1 9.5 0 18.9 1.3 28 3.8 1.2.3 2.4-.6 2.4-1.9z\",\n    fill: \"#FFFFFF\"\n  }), React.createElement(\"path\", {\n    d: \"M842.5 267.6c0 26.7-6.8 46.2-20.5 58.6-13.7 12.4-34.6 18.6-62.8 18.6-10.3 0-31.7-2-48.8-5.8l6.3-31c14.3 3 33.2 3.8 43.1 3.8 15.7 0 26.9-3.2 33.6-9.6s10-15.9 10-28.5v-6.4c-3.9 1.9-9 3.8-15.3 5.8-6.3 1.9-13.6 2.9-21.8 2.9-10.8 0-20.6-1.7-29.5-5.1-8.9-3.4-16.6-8.4-22.9-15-6.3-6.6-11.3-14.9-14.8-24.8s-5.3-27.6-5.3-40.6c0-12.2 1.9-27.5 5.6-37.7 3.8-10.2 9.2-19 16.5-26.3 7.2-7.3 16-12.9 26.3-17s22.4-6.7 35.5-6.7c12.7 0 24.4 1.6 35.8 3.5 11.4 1.9 21.1 3.9 29 6.1v155.2zm-108.7-77.2c0 16.4 3.6 34.6 10.8 42.2 7.2 7.6 16.5 11.4 27.9 11.4 6.2 0 12.1-.9 17.6-2.6 5.5-1.7 9.9-3.7 13.4-6.1v-97.1c-2.8-.6-14.5-3-25.8-3.3-14.2-.4-25 5.4-32.6 14.7-7.5 9.3-11.3 25.6-11.3 40.8zm294.3 0c0 13.2-1.9 23.2-5.8 34.1s-9.4 20.2-16.5 27.9c-7.1 7.7-15.6 13.7-25.6 17.9s-25.4 6.6-33.1 6.6c-7.7-.1-23-2.3-32.9-6.6-9.9-4.3-18.4-10.2-25.5-17.9-7.1-7.7-12.6-17-16.6-27.9s-6-20.9-6-34.1c0-13.2 1.8-25.9 5.8-36.7 4-10.8 9.6-20 16.8-27.7s15.8-13.6 25.6-17.8c9.9-4.2 20.8-6.2 32.6-6.2s22.7 2.1 32.7 6.2c10 4.2 18.6 10.1 25.6 17.8 7.1 7.7 12.6 16.9 16.6 27.7 4.2 10.8 6.3 23.5 6.3 36.7zm-40 .1c0-16.9-3.7-31-10.9-40.8-7.2-9.9-17.3-14.8-30.2-14.8-12.9 0-23 4.9-30.2 14.8-7.2 9.9-10.7 23.9-10.7 40.8 0 17.1 3.6 28.6 10.8 38.5 7.2 10 17.3 14.9 30.2 14.9 12.9 0 23-5 30.2-14.9 7.2-10 10.8-21.4 10.8-38.5zm127.1 86.4c-64.1.3-64.1-51.8-64.1-60.1L1051 32l39.1-6.2v183.6c0 4.7 0 34.5 25.1 34.6v32.9zm68.9 0h-39.3V108.1l39.3-6.2v175zm-19.7-193.5c13.1 0 23.8-10.6 23.8-23.7S1177.6 36 1164.4 36s-23.8 10.6-23.8 23.7 10.7 23.7 23.8 23.7zm117.4 18.6c12.9 0 23.8 1.6 32.6 4.8 8.8 3.2 15.9 7.7 21.1 13.4s8.9 13.5 11.1 21.7c2.3 8.2 3.4 17.2 3.4 27.1v100.6c-6 1.3-15.1 2.8-27.3 4.6s-25.9 2.7-41.1 2.7c-10.1 0-19.4-1-27.7-2.9-8.4-1.9-15.5-5-21.5-9.3-5.9-4.3-10.5-9.8-13.9-16.6-3.3-6.8-5-16.4-5-26.4 0-9.6 1.9-15.7 5.6-22.3 3.8-6.6 8.9-12 15.3-16.2 6.5-4.2 13.9-7.2 22.4-9s17.4-2.7 26.6-2.7c4.3 0 8.8.3 13.6.8s9.8 1.4 15.2 2.7v-6.4c0-4.5-.5-8.8-1.6-12.8-1.1-4.1-3-7.6-5.6-10.7-2.7-3.1-6.2-5.5-10.6-7.2s-10-3-16.7-3c-9 0-17.2 1.1-24.7 2.4-7.5 1.3-13.7 2.8-18.4 4.5l-4.7-32.1c4.9-1.7 12.2-3.4 21.6-5.1s19.5-2.6 30.3-2.6zm3.3 141.9c12 0 20.9-.7 27.1-1.9v-39.8c-2.2-.6-5.3-1.3-9.4-1.9-4.1-.6-8.6-1-13.6-1-4.3 0-8.7.3-13.1 1-4.4.6-8.4 1.8-11.9 3.5s-6.4 4.1-8.5 7.2c-2.2 3.1-3.2 4.9-3.2 9.6 0 9.2 3.2 14.5 9 18 5.9 3.6 13.7 5.3 23.6 5.3zM512.9 103c12.9 0 23.8 1.6 32.6 4.8 8.8 3.2 15.9 7.7 21.1 13.4 5.3 5.8 8.9 13.5 11.1 21.7 2.3 8.2 3.4 17.2 3.4 27.1v100.6c-6 1.3-15.1 2.8-27.3 4.6-12.2 1.8-25.9 2.7-41.1 2.7-10.1 0-19.4-1-27.7-2.9-8.4-1.9-15.5-5-21.5-9.3-5.9-4.3-10.5-9.8-13.9-16.6-3.3-6.8-5-16.4-5-26.4 0-9.6 1.9-15.7 5.6-22.3 3.8-6.6 8.9-12 15.3-16.2 6.5-4.2 13.9-7.2 22.4-9s17.4-2.7 26.6-2.7c4.3 0 8.8.3 13.6.8 4.7.5 9.8 1.4 15.2 2.7v-6.4c0-4.5-.5-8.8-1.6-12.8-1.1-4.1-3-7.6-5.6-10.7-2.7-3.1-6.2-5.5-10.6-7.2-4.4-1.7-10-3-16.7-3-9 0-17.2 1.1-24.7 2.4-7.5 1.3-13.7 2.8-18.4 4.5l-4.7-32.1c4.9-1.7 12.2-3.4 21.6-5.1 9.4-1.8 19.5-2.6 30.3-2.6zm3.4 142c12 0 20.9-.7 27.1-1.9v-39.8c-2.2-.6-5.3-1.3-9.4-1.9-4.1-.6-8.6-1-13.6-1-4.3 0-8.7.3-13.1 1-4.4.6-8.4 1.8-11.9 3.5s-6.4 4.1-8.5 7.2c-2.2 3.1-3.2 4.9-3.2 9.6 0 9.2 3.2 14.5 9 18s13.7 5.3 23.6 5.3zm158.5 31.9c-64.1.3-64.1-51.8-64.1-60.1L610.6 32l39.1-6.2v183.6c0 4.7 0 34.5 25.1 34.6v32.9z\",\n    fill: \"#182359\"\n  }));\n};\n/* eslint-enable max-len */\n\n\nvar PoweredBy = /*#__PURE__*/function (_Component) {\n  _inherits(PoweredBy, _Component);\n\n  function PoweredBy() {\n    _classCallCheck(this, PoweredBy);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PoweredBy).apply(this, arguments));\n  }\n\n  _createClass(PoweredBy, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          url = _this$props.url,\n          translate = _this$props.translate,\n          className = _this$props.className;\n      return React.createElement(\"div\", {\n        className: classNames(cx(''), className)\n      }, React.createElement(\"span\", {\n        className: cx('text')\n      }, translate('searchBy')), ' ', React.createElement(\"a\", {\n        href: url,\n        target: \"_blank\",\n        className: cx('link'),\n        \"aria-label\": \"Algolia\",\n        rel: \"noopener noreferrer\"\n      }, React.createElement(AlgoliaLogo, null)));\n    }\n  }]);\n\n  return PoweredBy;\n}(Component);\n\n_defineProperty(PoweredBy, \"propTypes\", {\n  url: PropTypes.string.isRequired,\n  translate: PropTypes.func.isRequired,\n  className: PropTypes.string\n});\n\nexport default translatable({\n  searchBy: 'Search by'\n})(PoweredBy);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React, { Component } from 'react';\nexport default function translatable(defaultTranslations) {\n  return function (Composed) {\n    var Translatable = /*#__PURE__*/function (_Component) {\n      _inherits(Translatable, _Component);\n\n      function Translatable() {\n        var _getPrototypeOf2;\n\n        var _this;\n\n        _classCallCheck(this, Translatable);\n\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n\n        _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Translatable)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n        _defineProperty(_assertThisInitialized(_this), \"translate\", function (key) {\n          var translations = _this.props.translations;\n          var translation = translations && translations.hasOwnProperty(key) ? translations[key] : defaultTranslations[key];\n\n          if (typeof translation === 'function') {\n            for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n              params[_key2 - 1] = arguments[_key2];\n            }\n\n            return translation.apply(void 0, params);\n          }\n\n          return translation;\n        });\n\n        return _this;\n      }\n\n      _createClass(Translatable, [{\n        key: \"render\",\n        value: function render() {\n          return React.createElement(Composed, _extends({\n            translate: this.translate\n          }, this.props));\n        }\n      }]);\n\n      return Translatable;\n    }(Component);\n\n    var name = Composed.displayName || Composed.name || 'UnknownComponent';\n    Translatable.displayName = \"Translatable(\".concat(name, \")\");\n    return Translatable;\n  };\n}","import { connectPoweredBy } from 'react-instantsearch-core';\nimport PoweredBy from '../components/PoweredBy';\n/**\n * PoweredBy displays an Algolia logo.\n *\n * Algolia requires that you use this widget if you are on a [community or free plan](https://www.algolia.com/pricing).\n * @name PoweredBy\n * @kind widget\n * @themeKey ais-PoweredBy - the root div of the widget\n * @themeKey ais-PoweredBy-text - the text of the widget\n * @themeKey ais-PoweredBy-link - the link of the logo\n * @themeKey ais-PoweredBy-logo - the logo of the widget\n * @translationKey searchBy - Label value for the powered by\n * @example\n * import React from 'react';\n * import { InstantSearch, PoweredBy } from 'react-instantsearch-dom';\n * import algoliasearch from 'algoliasearch/lite';\n *\n * const searchClient = algoliasearch(\n *   'latency',\n *   '6be0576ff61c053d5f9a3225e2a90f76'\n * );\n *\n * const App = () => (\n *   <InstantSearch\n *     searchClient={searchClient}\n *     indexName=\"instant_search\"\n *   >\n *     <PoweredBy />\n *   </InstantSearch>\n * );\n */\n\nexport default connectPoweredBy(PoweredBy);","/** @jsx jsx */\nimport { createRef, default as React, useState } from \"react\";\nimport { jsx, Link as TLink } from \"theme-ui\";\nimport algoliasearch from \"algoliasearch/lite\";\nimport { Link } from \"gatsby\";\nimport {\n  InstantSearch,\n  Highlight,\n  Snippet,\n  connectHits,\n  connectSearchBox,\n  PoweredBy,\n} from \"react-instantsearch-dom\";\n\nconst searchClient = algoliasearch(\n  process.env.GATSBY_ALGOLIA_APP_ID,\n  process.env.GATSBY_ALGOLIA_SEARCH_KEY\n);\n\nconst Hit = ({ hit }) => (\n  <div>\n    <TLink\n      as={Link}\n      to={hit.slug}\n      sx={{ fontSize: [2, 2, 3], fontWeight: \"bold\", color: `text` }}\n    >\n      <Highlight attribute=\"title\" hit={hit} tagName=\"mark\" />\n    </TLink>\n    <p\n      sx={{\n        color: `secondary`,\n        mt: 1,\n        mb: [3, 4],\n        a: { color: `secondary` },\n        fontSize: [1, 1, 2],\n      }}\n    >\n      <Snippet attribute=\"excerpt\" hit={hit} tagName=\"mark\" />\n    </p>\n  </div>\n);\n\nconst Hits = ({ hits }) => (\n  <div>\n    {hits.map((hit) => (\n      <Hit key={hit.objectID} hit={hit} />\n    ))}\n  </div>\n);\n\nconst CustomHits = connectHits(Hits);\n\nconst SearchBox = connectSearchBox(\n  ({\n    refine,\n    createURL,\n    isSearchStalled,\n    currentRefinement,\n    indexContextValue,\n    ...rest\n  }) => (\n    <form sx={{ mb: [3, 4] }}>\n      <input\n        sx={{\n          outline: \"none\",\n          borderRadius: 16,\n          backgroundColor: \"muted\",\n          color: \"text\",\n          p: 3,\n          border: 0,\n        }}\n        type=\"text\"\n        placeholder=\"Search here...\"\n        aria-label=\"Search\"\n        onChange={(e) => refine(e.target.value)}\n        {...rest}\n      />\n    </form>\n  )\n);\n\nconst Search = function Search() {\n  return (\n    <InstantSearch\n      indexName={process.env.GATSBY_ALGOLIA_INDEX_NAME}\n      searchClient={searchClient}\n    >\n      <SearchBox autoFocus={true} />\n      <CustomHits />\n      <PoweredBy />\n    </InstantSearch>\n  );\n};\n\nexport default Search;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\";\nimport Search from \"../@lekoarts/gatsby-theme-minimal-blog/components/search\";\nimport Layout from \"../@lekoarts/gatsby-theme-minimal-blog/components/layout\";\n\nconst SearchPage = () => (\n  <Layout title=\"Search\" hideSearch={true}>\n    <Search />\n  </Layout>\n);\nexport default SearchPage;\n","'use strict';\n\nvar find = require('./find');\n/**\n * Transform sort format from user friendly notation to lodash format\n * @param {string[]} sortBy array of predicate of the form \"attribute:order\"\n * @param {string[]} [defaults] array of predicate of the form \"attribute:order\"\n * @return {array.<string[]>} array containing 2 elements : attributes, orders\n */\n\n\nmodule.exports = function formatSort(sortBy, defaults) {\n  var defaultInstructions = (defaults || []).map(function (sort) {\n    return sort.split(':');\n  });\n  return sortBy.reduce(function preparePredicate(out, sort) {\n    var sortInstruction = sort.split(':');\n    var matchingDefault = find(defaultInstructions, function (defaultInstruction) {\n      return defaultInstruction[0] === sortInstruction[0];\n    });\n\n    if (sortInstruction.length > 1 || !matchingDefault) {\n      out[0].push(sortInstruction[0]);\n      out[1].push(sortInstruction[1]);\n      return out;\n    }\n\n    out[0].push(matchingDefault[0]);\n    out[1].push(matchingDefault[1]);\n    return out;\n  }, [[], []]);\n};","/*! algoliasearch-lite.umd.js | 4.4.0 | © Algolia, inc. | https://github.com/algolia/algoliasearch-client-javascript */\n!function (e, t) {\n  \"object\" == typeof exports && \"undefined\" != typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define(t) : (e = e || self).algoliasearch = t();\n}(this, function () {\n  \"use strict\";\n\n  function e(e, t, r) {\n    return t in e ? Object.defineProperty(e, t, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }) : e[t] = r, e;\n  }\n\n  function t(e, t) {\n    var r = Object.keys(e);\n\n    if (Object.getOwnPropertySymbols) {\n      var n = Object.getOwnPropertySymbols(e);\n      t && (n = n.filter(function (t) {\n        return Object.getOwnPropertyDescriptor(e, t).enumerable;\n      })), r.push.apply(r, n);\n    }\n\n    return r;\n  }\n\n  function r(r) {\n    for (var n = 1; n < arguments.length; n++) {\n      var o = null != arguments[n] ? arguments[n] : {};\n      n % 2 ? t(Object(o), !0).forEach(function (t) {\n        e(r, t, o[t]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(r, Object.getOwnPropertyDescriptors(o)) : t(Object(o)).forEach(function (e) {\n        Object.defineProperty(r, e, Object.getOwnPropertyDescriptor(o, e));\n      });\n    }\n\n    return r;\n  }\n\n  function n(e, t) {\n    if (null == e) return {};\n\n    var r,\n        n,\n        o = function (e, t) {\n      if (null == e) return {};\n      var r,\n          n,\n          o = {},\n          a = Object.keys(e);\n\n      for (n = 0; n < a.length; n++) {\n        r = a[n], t.indexOf(r) >= 0 || (o[r] = e[r]);\n      }\n\n      return o;\n    }(e, t);\n\n    if (Object.getOwnPropertySymbols) {\n      var a = Object.getOwnPropertySymbols(e);\n\n      for (n = 0; n < a.length; n++) {\n        r = a[n], t.indexOf(r) >= 0 || Object.prototype.propertyIsEnumerable.call(e, r) && (o[r] = e[r]);\n      }\n    }\n\n    return o;\n  }\n\n  function o(e, t) {\n    return function (e) {\n      if (Array.isArray(e)) return e;\n    }(e) || function (e, t) {\n      if (!(Symbol.iterator in Object(e) || \"[object Arguments]\" === Object.prototype.toString.call(e))) return;\n      var r = [],\n          n = !0,\n          o = !1,\n          a = void 0;\n\n      try {\n        for (var u, i = e[Symbol.iterator](); !(n = (u = i.next()).done) && (r.push(u.value), !t || r.length !== t); n = !0) {\n          ;\n        }\n      } catch (e) {\n        o = !0, a = e;\n      } finally {\n        try {\n          n || null == i.return || i.return();\n        } finally {\n          if (o) throw a;\n        }\n      }\n\n      return r;\n    }(e, t) || function () {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }();\n  }\n\n  function a(e) {\n    return function (e) {\n      if (Array.isArray(e)) {\n        for (var t = 0, r = new Array(e.length); t < e.length; t++) {\n          r[t] = e[t];\n        }\n\n        return r;\n      }\n    }(e) || function (e) {\n      if (Symbol.iterator in Object(e) || \"[object Arguments]\" === Object.prototype.toString.call(e)) return Array.from(e);\n    }(e) || function () {\n      throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n    }();\n  }\n\n  function u(e) {\n    var t,\n        r = \"algoliasearch-client-js-\".concat(e.key),\n        n = function n() {\n      return void 0 === t && (t = e.localStorage || window.localStorage), t;\n    },\n        a = function a() {\n      return JSON.parse(n().getItem(r) || \"{}\");\n    };\n\n    return {\n      get: function get(e, t) {\n        var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function miss() {\n            return Promise.resolve();\n          }\n        };\n        return Promise.resolve().then(function () {\n          var r = JSON.stringify(e),\n              n = a()[r];\n          return Promise.all([n || t(), void 0 !== n]);\n        }).then(function (e) {\n          var t = o(e, 2),\n              n = t[0],\n              a = t[1];\n          return Promise.all([n, a || r.miss(n)]);\n        }).then(function (e) {\n          return o(e, 1)[0];\n        });\n      },\n      set: function set(e, t) {\n        return Promise.resolve().then(function () {\n          var o = a();\n          return o[JSON.stringify(e)] = t, n().setItem(r, JSON.stringify(o)), t;\n        });\n      },\n      delete: function _delete(e) {\n        return Promise.resolve().then(function () {\n          var t = a();\n          delete t[JSON.stringify(e)], n().setItem(r, JSON.stringify(t));\n        });\n      },\n      clear: function clear() {\n        return Promise.resolve().then(function () {\n          n().removeItem(r);\n        });\n      }\n    };\n  }\n\n  function i(e) {\n    var t = a(e.caches),\n        r = t.shift();\n    return void 0 === r ? {\n      get: function get(e, t) {\n        var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function miss() {\n            return Promise.resolve();\n          }\n        },\n            n = t();\n        return n.then(function (e) {\n          return Promise.all([e, r.miss(e)]);\n        }).then(function (e) {\n          return o(e, 1)[0];\n        });\n      },\n      set: function set(e, t) {\n        return Promise.resolve(t);\n      },\n      delete: function _delete(e) {\n        return Promise.resolve();\n      },\n      clear: function clear() {\n        return Promise.resolve();\n      }\n    } : {\n      get: function get(e, n) {\n        var o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function miss() {\n            return Promise.resolve();\n          }\n        };\n        return r.get(e, n, o).catch(function () {\n          return i({\n            caches: t\n          }).get(e, n, o);\n        });\n      },\n      set: function set(e, n) {\n        return r.set(e, n).catch(function () {\n          return i({\n            caches: t\n          }).set(e, n);\n        });\n      },\n      delete: function _delete(e) {\n        return r.delete(e).catch(function () {\n          return i({\n            caches: t\n          }).delete(e);\n        });\n      },\n      clear: function clear() {\n        return r.clear().catch(function () {\n          return i({\n            caches: t\n          }).clear();\n        });\n      }\n    };\n  }\n\n  function s() {\n    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {\n      serializable: !0\n    },\n        t = {};\n    return {\n      get: function get(r, n) {\n        var o = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {\n          miss: function miss() {\n            return Promise.resolve();\n          }\n        },\n            a = JSON.stringify(r);\n        if (a in t) return Promise.resolve(e.serializable ? JSON.parse(t[a]) : t[a]);\n\n        var u = n(),\n            i = o && o.miss || function () {\n          return Promise.resolve();\n        };\n\n        return u.then(function (e) {\n          return i(e);\n        }).then(function () {\n          return u;\n        });\n      },\n      set: function set(r, n) {\n        return t[JSON.stringify(r)] = e.serializable ? JSON.stringify(n) : n, Promise.resolve(n);\n      },\n      delete: function _delete(e) {\n        return delete t[JSON.stringify(e)], Promise.resolve();\n      },\n      clear: function clear() {\n        return t = {}, Promise.resolve();\n      }\n    };\n  }\n\n  function c(e) {\n    for (var t = e.length - 1; t > 0; t--) {\n      var r = Math.floor(Math.random() * (t + 1)),\n          n = e[t];\n      e[t] = e[r], e[r] = n;\n    }\n\n    return e;\n  }\n\n  function l(e, t) {\n    return Object.keys(void 0 !== t ? t : {}).forEach(function (r) {\n      e[r] = t[r](e);\n    }), e;\n  }\n\n  function f(e) {\n    for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++) {\n      r[n - 1] = arguments[n];\n    }\n\n    var o = 0;\n    return e.replace(/%s/g, function () {\n      return encodeURIComponent(r[o++]);\n    });\n  }\n\n  var h = {\n    WithinQueryParameters: 0,\n    WithinHeaders: 1\n  };\n\n  function d(e, t) {\n    var r = e || {},\n        n = r.data || {};\n    return Object.keys(r).forEach(function (e) {\n      -1 === [\"timeout\", \"headers\", \"queryParameters\", \"data\", \"cacheable\"].indexOf(e) && (n[e] = r[e]);\n    }), {\n      data: Object.entries(n).length > 0 ? n : void 0,\n      timeout: r.timeout || t,\n      headers: r.headers || {},\n      queryParameters: r.queryParameters || {},\n      cacheable: r.cacheable\n    };\n  }\n\n  var m = {\n    Read: 1,\n    Write: 2,\n    Any: 3\n  },\n      p = 1,\n      v = 2,\n      g = 3;\n\n  function y(e) {\n    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : p;\n    return r({}, e, {\n      status: t,\n      lastUpdate: Date.now()\n    });\n  }\n\n  function b(e) {\n    return {\n      protocol: e.protocol || \"https\",\n      url: e.url,\n      accept: e.accept || m.Any\n    };\n  }\n\n  var O = \"GET\",\n      P = \"POST\";\n\n  function q(e, t) {\n    return Promise.all(t.map(function (t) {\n      return e.get(t, function () {\n        return Promise.resolve(y(t));\n      });\n    })).then(function (e) {\n      var r = e.filter(function (e) {\n        return function (e) {\n          return e.status === p || Date.now() - e.lastUpdate > 12e4;\n        }(e);\n      }),\n          n = e.filter(function (e) {\n        return function (e) {\n          return e.status === g && Date.now() - e.lastUpdate <= 12e4;\n        }(e);\n      }),\n          o = [].concat(a(r), a(n));\n      return {\n        getTimeout: function getTimeout(e, t) {\n          return (0 === n.length && 0 === e ? 1 : n.length + 3 + e) * t;\n        },\n        statelessHosts: o.length > 0 ? o.map(function (e) {\n          return b(e);\n        }) : t\n      };\n    });\n  }\n\n  function j(e, t, n, o) {\n    var u = [],\n        i = function (e, t) {\n      if (e.method === O || void 0 === e.data && void 0 === t.data) return;\n      var n = Array.isArray(e.data) ? e.data : r({}, e.data, {}, t.data);\n      return JSON.stringify(n);\n    }(n, o),\n        s = function (e, t) {\n      var n = r({}, e.headers, {}, t.headers),\n          o = {};\n      return Object.keys(n).forEach(function (e) {\n        var t = n[e];\n        o[e.toLowerCase()] = t;\n      }), o;\n    }(e, o),\n        c = n.method,\n        l = n.method !== O ? {} : r({}, n.data, {}, o.data),\n        f = r({\n      \"x-algolia-agent\": e.userAgent.value\n    }, e.queryParameters, {}, l, {}, o.queryParameters),\n        h = 0,\n        d = function t(r, a) {\n      var l = r.pop();\n      if (void 0 === l) throw {\n        name: \"RetryError\",\n        message: \"Unreachable hosts - your application id may be incorrect. If the error persists, contact support@algolia.com.\",\n        transporterStackTrace: A(u)\n      };\n\n      var d = {\n        data: i,\n        headers: s,\n        method: c,\n        url: w(l, n.path, f),\n        connectTimeout: a(h, e.timeouts.connect),\n        responseTimeout: a(h, o.timeout)\n      },\n          m = function m(e) {\n        var t = {\n          request: d,\n          response: e,\n          host: l,\n          triesLeft: r.length\n        };\n        return u.push(t), t;\n      },\n          p = {\n        onSucess: function onSucess(e) {\n          return function (e) {\n            try {\n              return JSON.parse(e.content);\n            } catch (t) {\n              throw function (e, t) {\n                return {\n                  name: \"DeserializationError\",\n                  message: e,\n                  response: t\n                };\n              }(t.message, e);\n            }\n          }(e);\n        },\n        onRetry: function onRetry(n) {\n          var o = m(n);\n          return n.isTimedOut && h++, Promise.all([e.logger.info(\"Retryable failure\", x(o)), e.hostsCache.set(l, y(l, n.isTimedOut ? g : v))]).then(function () {\n            return t(r, a);\n          });\n        },\n        onFail: function onFail(e) {\n          throw m(e), function (e, t) {\n            var r = e.content,\n                n = e.status,\n                o = r;\n\n            try {\n              o = JSON.parse(r).message;\n            } catch (e) {}\n\n            return function (e, t, r) {\n              return {\n                name: \"ApiError\",\n                message: e,\n                status: t,\n                transporterStackTrace: r\n              };\n            }(o, n, t);\n          }(e, A(u));\n        }\n      };\n\n      return e.requester.send(d).then(function (e) {\n        return function (e, t) {\n          return function (e) {\n            var t = e.status;\n            return e.isTimedOut || function (e) {\n              var t = e.isTimedOut,\n                  r = e.status;\n              return !t && 0 == ~~r;\n            }(e) || 2 != ~~(t / 100) && 4 != ~~(t / 100);\n          }(e) ? t.onRetry(e) : 2 == ~~(e.status / 100) ? t.onSucess(e) : t.onFail(e);\n        }(e, p);\n      });\n    };\n\n    return q(e.hostsCache, t).then(function (e) {\n      return d(a(e.statelessHosts).reverse(), e.getTimeout);\n    });\n  }\n\n  function S(e) {\n    var t = {\n      value: \"Algolia for JavaScript (\".concat(e, \")\"),\n      add: function add(e) {\n        var r = \"; \".concat(e.segment).concat(void 0 !== e.version ? \" (\".concat(e.version, \")\") : \"\");\n        return -1 === t.value.indexOf(r) && (t.value = \"\".concat(t.value).concat(r)), t;\n      }\n    };\n    return t;\n  }\n\n  function w(e, t, r) {\n    var n = T(r),\n        o = \"\".concat(e.protocol, \"://\").concat(e.url, \"/\").concat(\"/\" === t.charAt(0) ? t.substr(1) : t);\n    return n.length && (o += \"?\".concat(n)), o;\n  }\n\n  function T(e) {\n    return Object.keys(e).map(function (t) {\n      return f(\"%s=%s\", t, (r = e[t], \"[object Object]\" === Object.prototype.toString.call(r) || \"[object Array]\" === Object.prototype.toString.call(r) ? JSON.stringify(e[t]) : e[t]));\n      var r;\n    }).join(\"&\");\n  }\n\n  function A(e) {\n    return e.map(function (e) {\n      return x(e);\n    });\n  }\n\n  function x(e) {\n    var t = e.request.headers[\"x-algolia-api-key\"] ? {\n      \"x-algolia-api-key\": \"*****\"\n    } : {};\n    return r({}, e, {\n      request: r({}, e.request, {\n        headers: r({}, e.request.headers, {}, t)\n      })\n    });\n  }\n\n  var C = function C(e) {\n    var t = e.appId,\n        n = function (e, t, r) {\n      var n = {\n        \"x-algolia-api-key\": r,\n        \"x-algolia-application-id\": t\n      };\n      return {\n        headers: function headers() {\n          return e === h.WithinHeaders ? n : {};\n        },\n        queryParameters: function queryParameters() {\n          return e === h.WithinQueryParameters ? n : {};\n        }\n      };\n    }(void 0 !== e.authMode ? e.authMode : h.WithinHeaders, t, e.apiKey),\n        a = function (e) {\n      var t = e.hostsCache,\n          r = e.logger,\n          n = e.requester,\n          a = e.requestsCache,\n          u = e.responsesCache,\n          i = e.timeouts,\n          s = e.userAgent,\n          c = e.hosts,\n          l = e.queryParameters,\n          f = {\n        hostsCache: t,\n        logger: r,\n        requester: n,\n        requestsCache: a,\n        responsesCache: u,\n        timeouts: i,\n        userAgent: s,\n        headers: e.headers,\n        queryParameters: l,\n        hosts: c.map(function (e) {\n          return b(e);\n        }),\n        read: function read(e, t) {\n          var r = d(t, f.timeouts.read),\n              n = function n() {\n            return j(f, f.hosts.filter(function (e) {\n              return 0 != (e.accept & m.Read);\n            }), e, r);\n          };\n\n          if (!0 !== (void 0 !== r.cacheable ? r.cacheable : e.cacheable)) return n();\n          var a = {\n            request: e,\n            mappedRequestOptions: r,\n            transporter: {\n              queryParameters: f.queryParameters,\n              headers: f.headers\n            }\n          };\n          return f.responsesCache.get(a, function () {\n            return f.requestsCache.get(a, function () {\n              return f.requestsCache.set(a, n()).then(function (e) {\n                return Promise.all([f.requestsCache.delete(a), e]);\n              }, function (e) {\n                return Promise.all([f.requestsCache.delete(a), Promise.reject(e)]);\n              }).then(function (e) {\n                var t = o(e, 2);\n                t[0];\n                return t[1];\n              });\n            });\n          }, {\n            miss: function miss(e) {\n              return f.responsesCache.set(a, e);\n            }\n          });\n        },\n        write: function write(e, t) {\n          return j(f, f.hosts.filter(function (e) {\n            return 0 != (e.accept & m.Write);\n          }), e, d(t, f.timeouts.write));\n        }\n      };\n      return f;\n    }(r({\n      hosts: [{\n        url: \"\".concat(t, \"-dsn.algolia.net\"),\n        accept: m.Read\n      }, {\n        url: \"\".concat(t, \".algolia.net\"),\n        accept: m.Write\n      }].concat(c([{\n        url: \"\".concat(t, \"-1.algolianet.com\")\n      }, {\n        url: \"\".concat(t, \"-2.algolianet.com\")\n      }, {\n        url: \"\".concat(t, \"-3.algolianet.com\")\n      }]))\n    }, e, {\n      headers: r({}, n.headers(), {}, {\n        \"content-type\": \"application/x-www-form-urlencoded\"\n      }, {}, e.headers),\n      queryParameters: r({}, n.queryParameters(), {}, e.queryParameters)\n    }));\n\n    return l({\n      transporter: a,\n      appId: t,\n      addAlgoliaAgent: function addAlgoliaAgent(e, t) {\n        a.userAgent.add({\n          segment: e,\n          version: t\n        });\n      },\n      clearCache: function clearCache() {\n        return Promise.all([a.requestsCache.clear(), a.responsesCache.clear()]).then(function () {});\n      }\n    }, e.methods);\n  },\n      N = function N(e) {\n    return function (t) {\n      var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},\n          n = {\n        transporter: e.transporter,\n        appId: e.appId,\n        indexName: t\n      };\n      return l(n, r.methods);\n    };\n  },\n      k = function k(e) {\n    return function (t, n) {\n      var o = t.map(function (e) {\n        return r({}, e, {\n          params: T(e.params || {})\n        });\n      });\n      return e.transporter.read({\n        method: P,\n        path: \"1/indexes/*/queries\",\n        data: {\n          requests: o\n        },\n        cacheable: !0\n      }, n);\n    };\n  },\n      J = function J(e) {\n    return function (t, o) {\n      return Promise.all(t.map(function (t) {\n        var a = t.params,\n            u = a.facetName,\n            i = a.facetQuery,\n            s = n(a, [\"facetName\", \"facetQuery\"]);\n        return N(e)(t.indexName, {\n          methods: {\n            searchForFacetValues: I\n          }\n        }).searchForFacetValues(u, i, r({}, o, {}, s));\n      }));\n    };\n  },\n      E = function E(e) {\n    return function (t, r) {\n      return e.transporter.read({\n        method: P,\n        path: f(\"1/indexes/%s/query\", e.indexName),\n        data: {\n          query: t\n        },\n        cacheable: !0\n      }, r);\n    };\n  },\n      I = function I(e) {\n    return function (t, r, n) {\n      return e.transporter.read({\n        method: P,\n        path: f(\"1/indexes/%s/facets/%s/query\", e.indexName, t),\n        data: {\n          facetQuery: r\n        },\n        cacheable: !0\n      }, n);\n    };\n  },\n      F = 1,\n      R = 2,\n      D = 3;\n\n  function W(e, t, n) {\n    var o,\n        a = {\n      appId: e,\n      apiKey: t,\n      timeouts: {\n        connect: 1,\n        read: 2,\n        write: 30\n      },\n      requester: {\n        send: function send(e) {\n          return new Promise(function (t) {\n            var r = new XMLHttpRequest();\n            r.open(e.method, e.url, !0), Object.keys(e.headers).forEach(function (t) {\n              return r.setRequestHeader(t, e.headers[t]);\n            });\n\n            var n,\n                o = function o(e, n) {\n              return setTimeout(function () {\n                r.abort(), t({\n                  status: 0,\n                  content: n,\n                  isTimedOut: !0\n                });\n              }, 1e3 * e);\n            },\n                a = o(e.connectTimeout, \"Connection timeout\");\n\n            r.onreadystatechange = function () {\n              r.readyState > r.OPENED && void 0 === n && (clearTimeout(a), n = o(e.responseTimeout, \"Socket timeout\"));\n            }, r.onerror = function () {\n              0 === r.status && (clearTimeout(a), clearTimeout(n), t({\n                content: r.responseText || \"Network request failed\",\n                status: r.status,\n                isTimedOut: !1\n              }));\n            }, r.onload = function () {\n              clearTimeout(a), clearTimeout(n), t({\n                content: r.responseText,\n                status: r.status,\n                isTimedOut: !1\n              });\n            }, r.send(e.data);\n          });\n        }\n      },\n      logger: (o = D, {\n        debug: function debug(e, t) {\n          return F >= o && console.debug(e, t), Promise.resolve();\n        },\n        info: function info(e, t) {\n          return R >= o && console.info(e, t), Promise.resolve();\n        },\n        error: function error(e, t) {\n          return console.error(e, t), Promise.resolve();\n        }\n      }),\n      responsesCache: s(),\n      requestsCache: s({\n        serializable: !1\n      }),\n      hostsCache: i({\n        caches: [u({\n          key: \"\".concat(\"4.4.0\", \"-\").concat(e)\n        }), s()]\n      }),\n      userAgent: S(\"4.4.0\").add({\n        segment: \"Browser\",\n        version: \"lite\"\n      }),\n      authMode: h.WithinQueryParameters\n    };\n    return C(r({}, a, {}, n, {\n      methods: {\n        search: k,\n        searchForFacetValues: J,\n        multipleQueries: k,\n        multipleSearchForFacetValues: J,\n        initIndex: function initIndex(e) {\n          return function (t) {\n            return N(e)(t, {\n              methods: {\n                search: E,\n                searchForFacetValues: I\n              }\n            });\n          };\n        }\n      }\n    }));\n  }\n\n  return W.version = \"4.4.0\", W;\n});","'use strict';\n\nfunction clone(value) {\n  if (typeof value === 'object' && value !== null) {\n    return _merge(Array.isArray(value) ? [] : {}, value);\n  }\n\n  return value;\n}\n\nfunction isObjectOrArrayOrFunction(value) {\n  return typeof value === 'function' || Array.isArray(value) || Object.prototype.toString.call(value) === '[object Object]';\n}\n\nfunction _merge(target, source) {\n  if (target === source) {\n    return target;\n  }\n\n  for (var key in source) {\n    if (!Object.prototype.hasOwnProperty.call(source, key)) {\n      continue;\n    }\n\n    var sourceVal = source[key];\n    var targetVal = target[key];\n\n    if (typeof targetVal !== 'undefined' && typeof sourceVal === 'undefined') {\n      continue;\n    }\n\n    if (isObjectOrArrayOrFunction(targetVal) && isObjectOrArrayOrFunction(sourceVal)) {\n      target[key] = _merge(targetVal, sourceVal);\n    } else {\n      target[key] = clone(sourceVal);\n    }\n  }\n\n  return target;\n}\n/**\n * This method is like Object.assign, but recursively merges own and inherited\n * enumerable keyed properties of source objects into the destination object.\n *\n * NOTE: this behaves like lodash/merge, but:\n * - does mutate functions if they are a source\n * - treats non-plain objects as plain\n * - does not work for circular objects\n * - treats sparse arrays as sparse\n * - does not convert Array-like objects (Arguments, NodeLists, etc.) to arrays\n *\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction merge(target) {\n  if (!isObjectOrArrayOrFunction(target)) {\n    target = {};\n  }\n\n  for (var i = 1, l = arguments.length; i < l; i++) {\n    var source = arguments[i];\n\n    if (isObjectOrArrayOrFunction(source)) {\n      _merge(target, source);\n    }\n  }\n\n  return target;\n}\n\nmodule.exports = merge;","'use strict'; // @MAJOR can be replaced by native Array#find when we change support\n\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n};","'use strict';\n/**\n * Functions to manipulate refinement lists\n *\n * The RefinementList is not formally defined through a prototype but is based\n * on a specific structure.\n *\n * @module SearchParameters.refinementList\n *\n * @typedef {string[]} SearchParameters.refinementList.Refinements\n * @typedef {Object.<string, SearchParameters.refinementList.Refinements>} SearchParameters.refinementList.RefinementList\n */\n\nvar defaultsPure = require('../functions/defaultsPure');\n\nvar omit = require('../functions/omit');\n\nvar objectHasKeys = require('../functions/objectHasKeys');\n\nvar lib = {\n  /**\n   * Adds a refinement to a RefinementList\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement, if the value is not a string it will be converted\n   * @return {RefinementList} a new and updated refinement list\n   */\n  addRefinement: function addRefinement(refinementList, attribute, value) {\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return refinementList;\n    }\n\n    var valueAsString = '' + value;\n    var facetRefinement = !refinementList[attribute] ? [valueAsString] : refinementList[attribute].concat(valueAsString);\n    var mod = {};\n    mod[attribute] = facetRefinement;\n    return defaultsPure({}, mod, refinementList);\n  },\n\n  /**\n   * Removes refinement(s) for an attribute:\n   *  - if the value is specified removes the refinement for the value on the attribute\n   *  - if no value is specified removes all the refinements for this attribute\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} [value] the value of the refinement\n   * @return {RefinementList} a new and updated refinement lst\n   */\n  removeRefinement: function removeRefinement(refinementList, attribute, value) {\n    if (value === undefined) {\n      // we use the \"filter\" form of clearRefinement, since it leaves empty values as-is\n      // the form with a string will remove the attribute completely\n      return lib.clearRefinement(refinementList, function (v, f) {\n        return attribute === f;\n      });\n    }\n\n    var valueAsString = '' + value;\n    return lib.clearRefinement(refinementList, function (v, f) {\n      return attribute === f && valueAsString === v;\n    });\n  },\n\n  /**\n   * Toggles the refinement value for an attribute.\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement\n   * @return {RefinementList} a new and updated list\n   */\n  toggleRefinement: function toggleRefinement(refinementList, attribute, value) {\n    if (value === undefined) throw new Error('toggleRefinement should be used with a value');\n\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return lib.removeRefinement(refinementList, attribute, value);\n    }\n\n    return lib.addRefinement(refinementList, attribute, value);\n  },\n\n  /**\n   * Clear all or parts of a RefinementList. Depending on the arguments, three\n   * kinds of behavior can happen:\n   *  - if no attribute is provided: clears the whole list\n   *  - if an attribute is provided as a string: clears the list for the specific attribute\n   *  - if an attribute is provided as a function: discards the elements for which the function returns true\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} [attribute] the attribute or function to discard\n   * @param {string} [refinementType] optional parameter to give more context to the attribute function\n   * @return {RefinementList} a new and updated refinement list\n   */\n  clearRefinement: function clearRefinement(refinementList, attribute, refinementType) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(refinementList)) {\n        return refinementList;\n      }\n\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(refinementList, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n      var newRefinementList = Object.keys(refinementList).reduce(function (memo, key) {\n        var values = refinementList[key] || [];\n        var facetList = values.filter(function (value) {\n          return !attribute(value, key, refinementType);\n        });\n\n        if (facetList.length !== values.length) {\n          hasChanged = true;\n        }\n\n        memo[key] = facetList;\n        return memo;\n      }, {});\n      if (hasChanged) return newRefinementList;\n      return refinementList;\n    }\n  },\n\n  /**\n   * Test if the refinement value is used for the attribute. If no refinement value\n   * is provided, test if the refinementList contains any refinement for the\n   * given attribute.\n   * @param {RefinementList} refinementList the list of refinement\n   * @param {string} attribute name of the attribute\n   * @param {string} [refinementValue] value of the filter/refinement\n   * @return {boolean}\n   */\n  isRefined: function isRefined(refinementList, attribute, refinementValue) {\n    var containsRefinements = !!refinementList[attribute] && refinementList[attribute].length > 0;\n\n    if (refinementValue === undefined || !containsRefinements) {\n      return containsRefinements;\n    }\n\n    var refinementValueAsString = '' + refinementValue;\n    return refinementList[attribute].indexOf(refinementValueAsString) !== -1;\n  }\n};\nmodule.exports = lib;","'use strict';\n\nvar events = require('events');\n\nvar inherits = require('../functions/inherits');\n/**\n * A DerivedHelper is a way to create sub requests to\n * Algolia from a main helper.\n * @class\n * @classdesc The DerivedHelper provides an event based interface for search callbacks:\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n */\n\n\nfunction DerivedHelper(mainHelper, fn) {\n  this.main = mainHelper;\n  this.fn = fn;\n  this.lastResults = null;\n}\n\ninherits(DerivedHelper, events.EventEmitter);\n/**\n * Detach this helper from the main helper\n * @return {undefined}\n * @throws Error if the derived helper is already detached\n */\n\nDerivedHelper.prototype.detach = function () {\n  this.removeAllListeners();\n  this.main.detachDerivedHelper(this);\n};\n\nDerivedHelper.prototype.getModifiedState = function (parameters) {\n  return this.fn(parameters);\n};\n\nmodule.exports = DerivedHelper;","'use strict';\n\nvar AlgoliaSearchHelper = require('./src/algoliasearch.helper');\n\nvar SearchParameters = require('./src/SearchParameters');\n\nvar SearchResults = require('./src/SearchResults');\n/**\n * The algoliasearchHelper module is the function that will let its\n * contains everything needed to use the Algoliasearch\n * Helper. It is a also a function that instanciate the helper.\n * To use the helper, you also need the Algolia JS client v3.\n * @example\n * //using the UMD build\n * var client = algoliasearch('latency', '6be0576ff61c053d5f9a3225e2a90f76');\n * var helper = algoliasearchHelper(client, 'bestbuy', {\n *   facets: ['shipping'],\n *   disjunctiveFacets: ['category']\n * });\n * helper.on('result', function(event) {\n *   console.log(event.results);\n * });\n * helper\n *   .toggleFacetRefinement('category', 'Movies & TV Shows')\n *   .toggleFacetRefinement('shipping', 'Free shipping')\n *   .search();\n * @example\n * // The helper is an event emitter using the node API\n * helper.on('result', updateTheResults);\n * helper.once('result', updateTheResults);\n * helper.removeListener('result', updateTheResults);\n * helper.removeAllListeners('result');\n * @module algoliasearchHelper\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the name of the index to query\n * @param  {SearchParameters|object} opts an object defining the initial config of the search. It doesn't have to be a {SearchParameters}, just an object containing the properties you need from it.\n * @return {AlgoliaSearchHelper}\n */\n\n\nfunction algoliasearchHelper(client, index, opts) {\n  return new AlgoliaSearchHelper(client, index, opts);\n}\n/**\n * The version currently used\n * @member module:algoliasearchHelper.version\n * @type {number}\n */\n\n\nalgoliasearchHelper.version = require('./src/version.js');\n/**\n * Constructor for the Helper.\n * @member module:algoliasearchHelper.AlgoliaSearchHelper\n * @type {AlgoliaSearchHelper}\n */\n\nalgoliasearchHelper.AlgoliaSearchHelper = AlgoliaSearchHelper;\n/**\n * Constructor for the object containing all the parameters of the search.\n * @member module:algoliasearchHelper.SearchParameters\n * @type {SearchParameters}\n */\n\nalgoliasearchHelper.SearchParameters = SearchParameters;\n/**\n * Constructor for the object containing the results of the search.\n * @member module:algoliasearchHelper.SearchResults\n * @type {SearchResults}\n */\n\nalgoliasearchHelper.SearchResults = SearchResults;\nmodule.exports = algoliasearchHelper;","'use strict';\n\nfunction inherits(ctor, superCtor) {\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n}\n\nmodule.exports = inherits;","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","'use strict';\n\nvar merge = require('../functions/merge');\n\nvar defaultsPure = require('../functions/defaultsPure');\n\nvar intersection = require('../functions/intersection');\n\nvar find = require('../functions/find');\n\nvar valToNumber = require('../functions/valToNumber');\n\nvar omit = require('../functions/omit');\n\nvar objectHasKeys = require('../functions/objectHasKeys');\n\nvar RefinementList = require('./RefinementList');\n/**\n * isEqual, but only for numeric refinement values, possible values:\n * - 5\n * - [5]\n * - [[5]]\n * - [[5,5],[4]]\n */\n\n\nfunction isEqualNumericRefinement(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return a.length === b.length && a.every(function (el, i) {\n      return isEqualNumericRefinement(b[i], el);\n    });\n  }\n\n  return a === b;\n}\n/**\n * like _.find but using deep equality to be able to use it\n * to find arrays.\n * @private\n * @param {any[]} array array to search into (elements are base or array of base)\n * @param {any} searchedValue the value we're looking for (base or array of base)\n * @return {any} the searched value or undefined\n */\n\n\nfunction findArray(array, searchedValue) {\n  return find(array, function (currentValue) {\n    return isEqualNumericRefinement(currentValue, searchedValue);\n  });\n}\n/**\n * The facet list is the structure used to store the list of values used to\n * filter a single attribute.\n * @typedef {string[]} SearchParameters.FacetList\n */\n\n/**\n * Structure to store numeric filters with the operator as the key. The supported operators\n * are `=`, `>`, `<`, `>=`, `<=` and `!=`.\n * @typedef {Object.<string, Array.<number|number[]>>} SearchParameters.OperatorList\n */\n\n/**\n * SearchParameters is the data structure that contains all the information\n * usable for making a search to Algolia API. It doesn't do the search itself,\n * nor does it contains logic about the parameters.\n * It is an immutable object, therefore it has been created in a way that each\n * changes does not change the object itself but returns a copy with the\n * modification.\n * This object should probably not be instantiated outside of the helper. It will\n * be provided when needed. This object is documented for reference as you'll\n * get it from events generated by the {@link AlgoliaSearchHelper}.\n * If need be, instantiate the Helper from the factory function {@link SearchParameters.make}\n * @constructor\n * @classdesc contains all the parameters of a search\n * @param {object|SearchParameters} newParameters existing parameters or partial object\n * for the properties of a new SearchParameters\n * @see SearchParameters.make\n * @example <caption>SearchParameters of the first query in\n *   <a href=\"http://demos.algolia.com/instant-search-demo/\">the instant search demo</a></caption>\n{\n   \"query\": \"\",\n   \"disjunctiveFacets\": [\n      \"customerReviewCount\",\n      \"category\",\n      \"salePrice_range\",\n      \"manufacturer\"\n  ],\n   \"maxValuesPerFacet\": 30,\n   \"page\": 0,\n   \"hitsPerPage\": 10,\n   \"facets\": [\n      \"type\",\n      \"shipping\"\n  ]\n}\n */\n\n\nfunction SearchParameters(newParameters) {\n  var params = newParameters ? SearchParameters._parseNumbers(newParameters) : {};\n  /**\n   * This attribute contains the list of all the conjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n\n  this.facets = params.facets || [];\n  /**\n   * This attribute contains the list of all the disjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n\n  this.disjunctiveFacets = params.disjunctiveFacets || [];\n  /**\n   * This attribute contains the list of all the hierarchical facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * Hierarchical facets are a sub type of disjunctive facets that\n   * let you filter faceted attributes hierarchically.\n   * @member {string[]|object[]}\n   */\n\n  this.hierarchicalFacets = params.hierarchicalFacets || []; // Refinements\n\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n\n  this.facetsRefinements = params.facetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * excluded from the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters excluded for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n\n  this.facetsExcludes = params.facetsExcludes || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the disjunctive facets. Each facet must be properly\n   * defined in the `disjunctiveFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n\n  this.disjunctiveFacetsRefinements = params.disjunctiveFacetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the numeric attributes.\n   *\n   * The key is the name of the attribute, and the value is the\n   * filters to apply to this attribute.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `numericFilters` attribute.\n   * @member {Object.<string, SearchParameters.OperatorList>}\n   */\n\n  this.numericRefinements = params.numericRefinements || {};\n  /**\n   * This attribute contains all the tags used to refine the query.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `tagFilters` attribute.\n   * @member {string[]}\n   */\n\n  this.tagRefinements = params.tagRefinements || [];\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the hierarchical facets. Each facet must be properly\n   * defined in the `hierarchicalFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name. The FacetList values\n   * are structured as a string that contain the values for each level\n   * separated by the configured separator.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n\n  this.hierarchicalFacetsRefinements = params.hierarchicalFacetsRefinements || {};\n  var self = this;\n  Object.keys(params).forEach(function (paramName) {\n    var isKeyKnown = SearchParameters.PARAMETERS.indexOf(paramName) !== -1;\n    var isValueDefined = params[paramName] !== undefined;\n\n    if (!isKeyKnown && isValueDefined) {\n      self[paramName] = params[paramName];\n    }\n  });\n}\n/**\n * List all the properties in SearchParameters and therefore all the known Algolia properties\n * This doesn't contain any beta/hidden features.\n * @private\n */\n\n\nSearchParameters.PARAMETERS = Object.keys(new SearchParameters());\n/**\n * @private\n * @param {object} partialState full or part of a state\n * @return {object} a new object with the number keys as number\n */\n\nSearchParameters._parseNumbers = function (partialState) {\n  // Do not reparse numbers in SearchParameters, they ought to be parsed already\n  if (partialState instanceof SearchParameters) return partialState;\n  var numbers = {};\n  var numberKeys = ['aroundPrecision', 'aroundRadius', 'getRankingInfo', 'minWordSizefor2Typos', 'minWordSizefor1Typo', 'page', 'maxValuesPerFacet', 'distinct', 'minimumAroundRadius', 'hitsPerPage', 'minProximity'];\n  numberKeys.forEach(function (k) {\n    var value = partialState[k];\n\n    if (typeof value === 'string') {\n      var parsedValue = parseFloat(value); // global isNaN is ok to use here, value is only number or NaN\n\n      numbers[k] = isNaN(parsedValue) ? value : parsedValue;\n    }\n  }); // there's two formats of insideBoundingBox, we need to parse\n  // the one which is an array of float geo rectangles\n\n  if (Array.isArray(partialState.insideBoundingBox)) {\n    numbers.insideBoundingBox = partialState.insideBoundingBox.map(function (geoRect) {\n      if (Array.isArray(geoRect)) {\n        return geoRect.map(function (value) {\n          return parseFloat(value);\n        });\n      }\n\n      return geoRect;\n    });\n  }\n\n  if (partialState.numericRefinements) {\n    var numericRefinements = {};\n    Object.keys(partialState.numericRefinements).forEach(function (attribute) {\n      var operators = partialState.numericRefinements[attribute] || {};\n      numericRefinements[attribute] = {};\n      Object.keys(operators).forEach(function (operator) {\n        var values = operators[operator];\n        var parsedValues = values.map(function (v) {\n          if (Array.isArray(v)) {\n            return v.map(function (vPrime) {\n              if (typeof vPrime === 'string') {\n                return parseFloat(vPrime);\n              }\n\n              return vPrime;\n            });\n          } else if (typeof v === 'string') {\n            return parseFloat(v);\n          }\n\n          return v;\n        });\n        numericRefinements[attribute][operator] = parsedValues;\n      });\n    });\n    numbers.numericRefinements = numericRefinements;\n  }\n\n  return merge({}, partialState, numbers);\n};\n/**\n * Factory for SearchParameters\n * @param {object|SearchParameters} newParameters existing parameters or partial\n * object for the properties of a new SearchParameters\n * @return {SearchParameters} frozen instance of SearchParameters\n */\n\n\nSearchParameters.make = function makeSearchParameters(newParameters) {\n  var instance = new SearchParameters(newParameters);\n  var hierarchicalFacets = newParameters.hierarchicalFacets || [];\n  hierarchicalFacets.forEach(function (facet) {\n    if (facet.rootPath) {\n      var currentRefinement = instance.getHierarchicalRefinement(facet.name);\n\n      if (currentRefinement.length > 0 && currentRefinement[0].indexOf(facet.rootPath) !== 0) {\n        instance = instance.clearRefinements(facet.name);\n      } // get it again in case it has been cleared\n\n\n      currentRefinement = instance.getHierarchicalRefinement(facet.name);\n\n      if (currentRefinement.length === 0) {\n        instance = instance.toggleHierarchicalFacetRefinement(facet.name, facet.rootPath);\n      }\n    }\n  });\n  return instance;\n};\n/**\n * Validates the new parameters based on the previous state\n * @param {SearchParameters} currentState the current state\n * @param {object|SearchParameters} parameters the new parameters to set\n * @return {Error|null} Error if the modification is invalid, null otherwise\n */\n\n\nSearchParameters.validate = function (currentState, parameters) {\n  var params = parameters || {};\n\n  if (currentState.tagFilters && params.tagRefinements && params.tagRefinements.length > 0) {\n    return new Error('[Tags] Cannot switch from the managed tag API to the advanced API. It is probably ' + 'an error, if it is really what you want, you should first clear the tags with clearTags method.');\n  }\n\n  if (currentState.tagRefinements.length > 0 && params.tagFilters) {\n    return new Error('[Tags] Cannot switch from the advanced tag API to the managed API. It is probably ' + 'an error, if it is not, you should first clear the tags with clearTags method.');\n  }\n\n  if (currentState.numericFilters && params.numericRefinements && objectHasKeys(params.numericRefinements)) {\n    return new Error(\"[Numeric filters] Can't switch from the advanced to the managed API. It\" + ' is probably an error, if this is really what you want, you have to first' + ' clear the numeric filters.');\n  }\n\n  if (objectHasKeys(currentState.numericRefinements) && params.numericFilters) {\n    return new Error(\"[Numeric filters] Can't switch from the managed API to the advanced. It\" + ' is probably an error, if this is really what you want, you have to first' + ' clear the numeric filters.');\n  }\n\n  return null;\n};\n\nSearchParameters.prototype = {\n  constructor: SearchParameters,\n\n  /**\n   * Remove all refinements (disjunctive + conjunctive + excludes + numeric filters)\n   * @method\n   * @param {undefined|string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {SearchParameters}\n   */\n  clearRefinements: function clearRefinements(attribute) {\n    var patch = {\n      numericRefinements: this._clearNumericRefinements(attribute),\n      facetsRefinements: RefinementList.clearRefinement(this.facetsRefinements, attribute, 'conjunctiveFacet'),\n      facetsExcludes: RefinementList.clearRefinement(this.facetsExcludes, attribute, 'exclude'),\n      disjunctiveFacetsRefinements: RefinementList.clearRefinement(this.disjunctiveFacetsRefinements, attribute, 'disjunctiveFacet'),\n      hierarchicalFacetsRefinements: RefinementList.clearRefinement(this.hierarchicalFacetsRefinements, attribute, 'hierarchicalFacet')\n    };\n\n    if (patch.numericRefinements === this.numericRefinements && patch.facetsRefinements === this.facetsRefinements && patch.facetsExcludes === this.facetsExcludes && patch.disjunctiveFacetsRefinements === this.disjunctiveFacetsRefinements && patch.hierarchicalFacetsRefinements === this.hierarchicalFacetsRefinements) {\n      return this;\n    }\n\n    return this.setQueryParameters(patch);\n  },\n\n  /**\n   * Remove all the refined tags from the SearchParameters\n   * @method\n   * @return {SearchParameters}\n   */\n  clearTags: function clearTags() {\n    if (this.tagFilters === undefined && this.tagRefinements.length === 0) return this;\n    return this.setQueryParameters({\n      tagFilters: undefined,\n      tagRefinements: []\n    });\n  },\n\n  /**\n   * Set the index.\n   * @method\n   * @param {string} index the index name\n   * @return {SearchParameters}\n   */\n  setIndex: function setIndex(index) {\n    if (index === this.index) return this;\n    return this.setQueryParameters({\n      index: index\n    });\n  },\n\n  /**\n   * Query setter\n   * @method\n   * @param {string} newQuery value for the new query\n   * @return {SearchParameters}\n   */\n  setQuery: function setQuery(newQuery) {\n    if (newQuery === this.query) return this;\n    return this.setQueryParameters({\n      query: newQuery\n    });\n  },\n\n  /**\n   * Page setter\n   * @method\n   * @param {number} newPage new page number\n   * @return {SearchParameters}\n   */\n  setPage: function setPage(newPage) {\n    if (newPage === this.page) return this;\n    return this.setQueryParameters({\n      page: newPage\n    });\n  },\n\n  /**\n   * Facets setter\n   * The facets are the simple facets, used for conjunctive (and) faceting.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for conjunctive faceting\n   * @return {SearchParameters}\n   */\n  setFacets: function setFacets(facets) {\n    return this.setQueryParameters({\n      facets: facets\n    });\n  },\n\n  /**\n   * Disjunctive facets setter\n   * Change the list of disjunctive (or) facets the helper chan handle.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for disjunctive faceting\n   * @return {SearchParameters}\n   */\n  setDisjunctiveFacets: function setDisjunctiveFacets(facets) {\n    return this.setQueryParameters({\n      disjunctiveFacets: facets\n    });\n  },\n\n  /**\n   * HitsPerPage setter\n   * Hits per page represents the number of hits retrieved for this query\n   * @method\n   * @param {number} n number of hits retrieved per page of results\n   * @return {SearchParameters}\n   */\n  setHitsPerPage: function setHitsPerPage(n) {\n    if (this.hitsPerPage === n) return this;\n    return this.setQueryParameters({\n      hitsPerPage: n\n    });\n  },\n\n  /**\n   * typoTolerance setter\n   * Set the value of typoTolerance\n   * @method\n   * @param {string} typoTolerance new value of typoTolerance (\"true\", \"false\", \"min\" or \"strict\")\n   * @return {SearchParameters}\n   */\n  setTypoTolerance: function setTypoTolerance(typoTolerance) {\n    if (this.typoTolerance === typoTolerance) return this;\n    return this.setQueryParameters({\n      typoTolerance: typoTolerance\n    });\n  },\n\n  /**\n   * Add a numeric filter for a given attribute\n   * When value is an array, they are combined with OR\n   * When value is a single value, it will combined with AND\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} operator operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number | number[]} value value of the filter\n   * @return {SearchParameters}\n   * @example\n   * // for price = 50 or 40\n   * searchparameter.addNumericRefinement('price', '=', [50, 40]);\n   * @example\n   * // for size = 38 and 40\n   * searchparameter.addNumericRefinement('size', '=', 38);\n   * searchparameter.addNumericRefinement('size', '=', 40);\n   */\n  addNumericRefinement: function addNumericRefinement(attribute, operator, v) {\n    var value = valToNumber(v);\n    if (this.isNumericRefined(attribute, operator, value)) return this;\n    var mod = merge({}, this.numericRefinements);\n    mod[attribute] = merge({}, mod[attribute]);\n\n    if (mod[attribute][operator]) {\n      // Array copy\n      mod[attribute][operator] = mod[attribute][operator].slice(); // Add the element. Concat can't be used here because value can be an array.\n\n      mod[attribute][operator].push(value);\n    } else {\n      mod[attribute][operator] = [value];\n    }\n\n    return this.setQueryParameters({\n      numericRefinements: mod\n    });\n  },\n\n  /**\n   * Get the list of conjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getConjunctiveRefinements: function getConjunctiveRefinements(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n\n    return this.facetsRefinements[facetName] || [];\n  },\n\n  /**\n   * Get the list of disjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getDisjunctiveRefinements: function getDisjunctiveRefinements(facetName) {\n    if (!this.isDisjunctiveFacet(facetName)) {\n      return [];\n    }\n\n    return this.disjunctiveFacetsRefinements[facetName] || [];\n  },\n\n  /**\n   * Get the list of hierarchical refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getHierarchicalRefinement: function getHierarchicalRefinement(facetName) {\n    // we send an array but we currently do not support multiple\n    // hierarchicalRefinements for a hierarchicalFacet\n    return this.hierarchicalFacetsRefinements[facetName] || [];\n  },\n\n  /**\n   * Get the list of exclude refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getExcludeRefinements: function getExcludeRefinements(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n\n    return this.facetsExcludes[facetName] || [];\n  },\n\n  /**\n   * Remove all the numeric filter for a given (attribute, operator)\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} [operator] operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number} [number] the value to be removed\n   * @return {SearchParameters}\n   */\n  removeNumericRefinement: function removeNumericRefinement(attribute, operator, paramValue) {\n    if (paramValue !== undefined) {\n      if (!this.isNumericRefined(attribute, operator, paramValue)) {\n        return this;\n      }\n\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function (value, key) {\n          return key === attribute && value.op === operator && isEqualNumericRefinement(value.val, valToNumber(paramValue));\n        })\n      });\n    } else if (operator !== undefined) {\n      if (!this.isNumericRefined(attribute, operator)) return this;\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function (value, key) {\n          return key === attribute && value.op === operator;\n        })\n      });\n    }\n\n    if (!this.isNumericRefined(attribute)) return this;\n    return this.setQueryParameters({\n      numericRefinements: this._clearNumericRefinements(function (value, key) {\n        return key === attribute;\n      })\n    });\n  },\n\n  /**\n   * Get the list of numeric refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {SearchParameters.OperatorList[]} list of refinements\n   */\n  getNumericRefinements: function getNumericRefinements(facetName) {\n    return this.numericRefinements[facetName] || {};\n  },\n\n  /**\n   * Return the current refinement for the (attribute, operator)\n   * @param {string} attribute attribute in the record\n   * @param {string} operator operator applied on the refined values\n   * @return {Array.<number|number[]>} refined values\n   */\n  getNumericRefinement: function getNumericRefinement(attribute, operator) {\n    return this.numericRefinements[attribute] && this.numericRefinements[attribute][operator];\n  },\n\n  /**\n   * Clear numeric filters.\n   * @method\n   * @private\n   * @param {string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {Object.<string, OperatorList>}\n   */\n  _clearNumericRefinements: function _clearNumericRefinements(attribute) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(this.numericRefinements)) {\n        return this.numericRefinements;\n      }\n\n      return {};\n    } else if (typeof attribute === 'string') {\n      if (!objectHasKeys(this.numericRefinements[attribute])) {\n        return this.numericRefinements;\n      }\n\n      return omit(this.numericRefinements, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n      var numericRefinements = this.numericRefinements;\n      var newNumericRefinements = Object.keys(numericRefinements).reduce(function (memo, key) {\n        var operators = numericRefinements[key];\n        var operatorList = {};\n        operators = operators || {};\n        Object.keys(operators).forEach(function (operator) {\n          var values = operators[operator] || [];\n          var outValues = [];\n          values.forEach(function (value) {\n            var predicateResult = attribute({\n              val: value,\n              op: operator\n            }, key, 'numeric');\n            if (!predicateResult) outValues.push(value);\n          });\n\n          if (outValues.length !== values.length) {\n            hasChanged = true;\n          }\n\n          operatorList[operator] = outValues;\n        });\n        memo[key] = operatorList;\n        return memo;\n      }, {});\n      if (hasChanged) return newNumericRefinements;\n      return this.numericRefinements;\n    }\n  },\n\n  /**\n   * Add a facet to the facets attribute of the helper configuration, if it\n   * isn't already present.\n   * @method\n   * @param {string} facet facet name to add\n   * @return {SearchParameters}\n   */\n  addFacet: function addFacet(facet) {\n    if (this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      facets: this.facets.concat([facet])\n    });\n  },\n\n  /**\n   * Add a disjunctive facet to the disjunctiveFacets attribute of the helper\n   * configuration, if it isn't already present.\n   * @method\n   * @param {string} facet disjunctive facet name to add\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacet: function addDisjunctiveFacet(facet) {\n    if (this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.concat([facet])\n    });\n  },\n\n  /**\n   * Add a hierarchical facet to the hierarchicalFacets attribute of the helper\n   * configuration.\n   * @method\n   * @param {object} hierarchicalFacet hierarchical facet to add\n   * @return {SearchParameters}\n   * @throws will throw an error if a hierarchical facet with the same name was already declared\n   */\n  addHierarchicalFacet: function addHierarchicalFacet(hierarchicalFacet) {\n    if (this.isHierarchicalFacet(hierarchicalFacet.name)) {\n      throw new Error('Cannot declare two hierarchical facets with the same name: `' + hierarchicalFacet.name + '`');\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.concat([hierarchicalFacet])\n    });\n  },\n\n  /**\n   * Add a refinement on a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addFacetRefinement: function addFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.addRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Exclude a value from a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the exclusion on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addExcludeRefinement: function addExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.addRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n\n  /**\n   * Adds a refinement on a disjunctive facet.\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacetRefinement: function addDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.addRefinement(this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * addTagRefinement adds a tag to the list used to filter the results\n   * @param {string} tag tag to be added\n   * @return {SearchParameters}\n   */\n  addTagRefinement: function addTagRefinement(tag) {\n    if (this.isTagRefined(tag)) return this;\n    var modification = {\n      tagRefinements: this.tagRefinements.concat(tag)\n    };\n    return this.setQueryParameters(modification);\n  },\n\n  /**\n   * Remove a facet from the facets attribute of the helper configuration, if it\n   * is present.\n   * @method\n   * @param {string} facet facet name to remove\n   * @return {SearchParameters}\n   */\n  removeFacet: function removeFacet(facet) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      facets: this.facets.filter(function (f) {\n        return f !== facet;\n      })\n    });\n  },\n\n  /**\n   * Remove a disjunctive facet from the disjunctiveFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet disjunctive facet name to remove\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacet: function removeDisjunctiveFacet(facet) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.filter(function (f) {\n        return f !== facet;\n      })\n    });\n  },\n\n  /**\n   * Remove a hierarchical facet from the hierarchicalFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet hierarchical facet name to remove\n   * @return {SearchParameters}\n   */\n  removeHierarchicalFacet: function removeHierarchicalFacet(facet) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.filter(function (f) {\n        return f.name !== facet;\n      })\n    });\n  },\n\n  /**\n   * Remove a refinement set on facet. If a value is provided, it will clear the\n   * refinement for the given value, otherwise it will clear all the refinement\n   * values for the faceted attribute.\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} [value] value used to filter\n   * @return {SearchParameters}\n   */\n  removeFacetRefinement: function removeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    if (!RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.removeRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Remove a negative refinement on a facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeExcludeRefinement: function removeExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    if (!RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.removeRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n\n  /**\n   * Remove a refinement on a disjunctive facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacetRefinement: function removeDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    if (!RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.removeRefinement(this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Remove a tag from the list of tag refinements\n   * @method\n   * @param {string} tag the tag to remove\n   * @return {SearchParameters}\n   */\n  removeTagRefinement: function removeTagRefinement(tag) {\n    if (!this.isTagRefined(tag)) return this;\n    var modification = {\n      tagRefinements: this.tagRefinements.filter(function (t) {\n        return t !== tag;\n      })\n    };\n    return this.setQueryParameters(modification);\n  },\n\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   * @deprecated since version 2.19.0, see {@link SearchParameters#toggleFacetRefinement}\n   */\n  toggleRefinement: function toggleRefinement(facet, value) {\n    return this.toggleFacetRefinement(facet, value);\n  },\n\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   */\n  toggleFacetRefinement: function toggleFacetRefinement(facet, value) {\n    if (this.isHierarchicalFacet(facet)) {\n      return this.toggleHierarchicalFacetRefinement(facet, value);\n    } else if (this.isConjunctiveFacet(facet)) {\n      return this.toggleConjunctiveFacetRefinement(facet, value);\n    } else if (this.isDisjunctiveFacet(facet)) {\n      return this.toggleDisjunctiveFacetRefinement(facet, value);\n    }\n\n    throw new Error('Cannot refine the undeclared facet ' + facet + '; it should be added to the helper options facets, disjunctiveFacets or hierarchicalFacets');\n  },\n\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleConjunctiveFacetRefinement: function toggleConjunctiveFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.toggleRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleExcludeFacetRefinement: function toggleExcludeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.toggleRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleDisjunctiveFacetRefinement: function toggleDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.toggleRefinement(this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleHierarchicalFacetRefinement: function toggleHierarchicalFacetRefinement(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration');\n    }\n\n    var separator = this._getHierarchicalFacetSeparator(this.getHierarchicalFacetByName(facet));\n\n    var mod = {};\n    var upOneOrMultipleLevel = this.hierarchicalFacetsRefinements[facet] !== undefined && this.hierarchicalFacetsRefinements[facet].length > 0 && ( // remove current refinement:\n    // refinement was 'beer > IPA', call is toggleRefine('beer > IPA'), refinement should be `beer`\n    this.hierarchicalFacetsRefinements[facet][0] === value || // remove a parent refinement of the current refinement:\n    //  - refinement was 'beer > IPA > Flying dog'\n    //  - call is toggleRefine('beer > IPA')\n    //  - refinement should be `beer`\n    this.hierarchicalFacetsRefinements[facet][0].indexOf(value + separator) === 0);\n\n    if (upOneOrMultipleLevel) {\n      if (value.indexOf(separator) === -1) {\n        // go back to root level\n        mod[facet] = [];\n      } else {\n        mod[facet] = [value.slice(0, value.lastIndexOf(separator))];\n      }\n    } else {\n      mod[facet] = [value];\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Adds a refinement on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @param {string} path the hierarchical facet path\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is refined\n   */\n  addHierarchicalFacetRefinement: function addHierarchicalFacetRefinement(facet, path) {\n    if (this.isHierarchicalFacetRefined(facet)) {\n      throw new Error(facet + ' is already refined.');\n    }\n\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration.');\n    }\n\n    var mod = {};\n    mod[facet] = [path];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Removes the refinement set on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is not refined\n   */\n  removeHierarchicalFacetRefinement: function removeHierarchicalFacetRefinement(facet) {\n    if (!this.isHierarchicalFacetRefined(facet)) {\n      return this;\n    }\n\n    var mod = {};\n    mod[facet] = [];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Switch the tag refinement\n   * @method\n   * @param {string} tag the tag to remove or add\n   * @return {SearchParameters}\n   */\n  toggleTagRefinement: function toggleTagRefinement(tag) {\n    if (this.isTagRefined(tag)) {\n      return this.removeTagRefinement(tag);\n    }\n\n    return this.addTagRefinement(tag);\n  },\n\n  /**\n   * Test if the facet name is from one of the disjunctive facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isDisjunctiveFacet: function isDisjunctiveFacet(facet) {\n    return this.disjunctiveFacets.indexOf(facet) > -1;\n  },\n\n  /**\n   * Test if the facet name is from one of the hierarchical facets\n   * @method\n   * @param {string} facetName facet name to test\n   * @return {boolean}\n   */\n  isHierarchicalFacet: function isHierarchicalFacet(facetName) {\n    return this.getHierarchicalFacetByName(facetName) !== undefined;\n  },\n\n  /**\n   * Test if the facet name is from one of the conjunctive/normal facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isConjunctiveFacet: function isConjunctiveFacet(facet) {\n    return this.facets.indexOf(facet) > -1;\n  },\n\n  /**\n   * Returns true if the facet is refined, either for a specific value or in\n   * general.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value, optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isFacetRefined: function isFacetRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n\n    return RefinementList.isRefined(this.facetsRefinements, facet, value);\n  },\n\n  /**\n   * Returns true if the facet contains exclusions or if a specific value is\n   * excluded.\n   *\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isExcludeRefined: function isExcludeRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n\n    return RefinementList.isRefined(this.facetsExcludes, facet, value);\n  },\n\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isDisjunctiveFacetRefined: function isDisjunctiveFacetRefined(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return false;\n    }\n\n    return RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value);\n  },\n\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isHierarchicalFacetRefined: function isHierarchicalFacetRefined(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return false;\n    }\n\n    var refinements = this.getHierarchicalRefinement(facet);\n\n    if (!value) {\n      return refinements.length > 0;\n    }\n\n    return refinements.indexOf(value) !== -1;\n  },\n\n  /**\n   * Test if the triple (attribute, operator, value) is already refined.\n   * If only the attribute and the operator are provided, it tests if the\n   * contains any refinement value.\n   * @method\n   * @param {string} attribute attribute for which the refinement is applied\n   * @param {string} [operator] operator of the refinement\n   * @param {string} [value] value of the refinement\n   * @return {boolean} true if it is refined\n   */\n  isNumericRefined: function isNumericRefined(attribute, operator, value) {\n    if (value === undefined && operator === undefined) {\n      return !!this.numericRefinements[attribute];\n    }\n\n    var isOperatorDefined = this.numericRefinements[attribute] && this.numericRefinements[attribute][operator] !== undefined;\n\n    if (value === undefined || !isOperatorDefined) {\n      return isOperatorDefined;\n    }\n\n    var parsedValue = valToNumber(value);\n    var isAttributeValueDefined = findArray(this.numericRefinements[attribute][operator], parsedValue) !== undefined;\n    return isOperatorDefined && isAttributeValueDefined;\n  },\n\n  /**\n   * Returns true if the tag refined, false otherwise\n   * @method\n   * @param {string} tag the tag to check\n   * @return {boolean}\n   */\n  isTagRefined: function isTagRefined(tag) {\n    return this.tagRefinements.indexOf(tag) !== -1;\n  },\n\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedDisjunctiveFacets: function getRefinedDisjunctiveFacets() {\n    var self = this; // attributes used for numeric filter can also be disjunctive\n\n    var disjunctiveNumericRefinedFacets = intersection(Object.keys(this.numericRefinements).filter(function (facet) {\n      return Object.keys(self.numericRefinements[facet]).length > 0;\n    }), this.disjunctiveFacets);\n    return Object.keys(this.disjunctiveFacetsRefinements).filter(function (facet) {\n      return self.disjunctiveFacetsRefinements[facet].length > 0;\n    }).concat(disjunctiveNumericRefinedFacets).concat(this.getRefinedHierarchicalFacets());\n  },\n\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedHierarchicalFacets: function getRefinedHierarchicalFacets() {\n    var self = this;\n    return intersection( // enforce the order between the two arrays,\n    // so that refinement name index === hierarchical facet index\n    this.hierarchicalFacets.map(function (facet) {\n      return facet.name;\n    }), Object.keys(this.hierarchicalFacetsRefinements).filter(function (facet) {\n      return self.hierarchicalFacetsRefinements[facet].length > 0;\n    }));\n  },\n\n  /**\n   * Returned the list of all disjunctive facets not refined\n   * @method\n   * @return {string[]}\n   */\n  getUnrefinedDisjunctiveFacets: function getUnrefinedDisjunctiveFacets() {\n    var refinedFacets = this.getRefinedDisjunctiveFacets();\n    return this.disjunctiveFacets.filter(function (f) {\n      return refinedFacets.indexOf(f) === -1;\n    });\n  },\n  managedParameters: ['index', 'facets', 'disjunctiveFacets', 'facetsRefinements', 'facetsExcludes', 'disjunctiveFacetsRefinements', 'numericRefinements', 'tagRefinements', 'hierarchicalFacets', 'hierarchicalFacetsRefinements'],\n  getQueryParams: function getQueryParams() {\n    var managedParameters = this.managedParameters;\n    var queryParams = {};\n    var self = this;\n    Object.keys(this).forEach(function (paramName) {\n      var paramValue = self[paramName];\n\n      if (managedParameters.indexOf(paramName) === -1 && paramValue !== undefined) {\n        queryParams[paramName] = paramValue;\n      }\n    });\n    return queryParams;\n  },\n\n  /**\n   * Let the user set a specific value for a given parameter. Will return the\n   * same instance if the parameter is invalid or if the value is the same as the\n   * previous one.\n   * @method\n   * @param {string} parameter the parameter name\n   * @param {any} value the value to be set, must be compliant with the definition\n   * of the attribute on the object\n   * @return {SearchParameters} the updated state\n   */\n  setQueryParameter: function setParameter(parameter, value) {\n    if (this[parameter] === value) return this;\n    var modification = {};\n    modification[parameter] = value;\n    return this.setQueryParameters(modification);\n  },\n\n  /**\n   * Let the user set any of the parameters with a plain object.\n   * @method\n   * @param {object} params all the keys and the values to be updated\n   * @return {SearchParameters} a new updated instance\n   */\n  setQueryParameters: function setQueryParameters(params) {\n    if (!params) return this;\n    var error = SearchParameters.validate(this, params);\n\n    if (error) {\n      throw error;\n    }\n\n    var self = this;\n\n    var nextWithNumbers = SearchParameters._parseNumbers(params);\n\n    var previousPlainObject = Object.keys(this).reduce(function (acc, key) {\n      acc[key] = self[key];\n      return acc;\n    }, {});\n    var nextPlainObject = Object.keys(nextWithNumbers).reduce(function (previous, key) {\n      var isPreviousValueDefined = previous[key] !== undefined;\n      var isNextValueDefined = nextWithNumbers[key] !== undefined;\n\n      if (isPreviousValueDefined && !isNextValueDefined) {\n        return omit(previous, [key]);\n      }\n\n      if (isNextValueDefined) {\n        previous[key] = nextWithNumbers[key];\n      }\n\n      return previous;\n    }, previousPlainObject);\n    return new this.constructor(nextPlainObject);\n  },\n\n  /**\n   * Returns a new instance with the page reset. Two scenarios possible:\n   * the page is omitted -> return the given instance\n   * the page is set -> return a new instance with a page of 0\n   * @return {SearchParameters} a new updated instance\n   */\n  resetPage: function resetPage() {\n    if (this.page === undefined) {\n      return this;\n    }\n\n    return this.setPage(0);\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSortBy: function _getHierarchicalFacetSortBy(hierarchicalFacet) {\n    return hierarchicalFacet.sortBy || ['isRefined:desc', 'name:asc'];\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSeparator: function _getHierarchicalFacetSeparator(hierarchicalFacet) {\n    return hierarchicalFacet.separator || ' > ';\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet prefix path or null\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.rootPath or null as default\n   */\n  _getHierarchicalRootPath: function _getHierarchicalRootPath(hierarchicalFacet) {\n    return hierarchicalFacet.rootPath || null;\n  },\n\n  /**\n   * Helper function to check if we show the parent level of the hierarchicalFacet\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.showParentLevel or true as default\n   */\n  _getHierarchicalShowParentLevel: function _getHierarchicalShowParentLevel(hierarchicalFacet) {\n    if (typeof hierarchicalFacet.showParentLevel === 'boolean') {\n      return hierarchicalFacet.showParentLevel;\n    }\n\n    return true;\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet by it's name\n   * @param  {string} hierarchicalFacetName\n   * @return {object} a hierarchicalFacet\n   */\n  getHierarchicalFacetByName: function getHierarchicalFacetByName(hierarchicalFacetName) {\n    return find(this.hierarchicalFacets, function (f) {\n      return f.name === hierarchicalFacetName;\n    });\n  },\n\n  /**\n   * Get the current breadcrumb for a hierarchical facet, as an array\n   * @param  {string} facetName Hierarchical facet name\n   * @return {array.<string>} the path as an array of string\n   */\n  getHierarchicalFacetBreadcrumb: function getHierarchicalFacetBreadcrumb(facetName) {\n    if (!this.isHierarchicalFacet(facetName)) {\n      return [];\n    }\n\n    var refinement = this.getHierarchicalRefinement(facetName)[0];\n    if (!refinement) return [];\n\n    var separator = this._getHierarchicalFacetSeparator(this.getHierarchicalFacetByName(facetName));\n\n    var path = refinement.split(separator);\n    return path.map(function (part) {\n      return part.trim();\n    });\n  },\n  toString: function toString() {\n    return JSON.stringify(this, null, 2);\n  }\n};\n/**\n * Callback used for clearRefinement method\n * @callback SearchParameters.clearCallback\n * @param {OperatorList|FacetList} value the value of the filter\n * @param {string} key the current attribute name\n * @param {string} type `numeric`, `disjunctiveFacet`, `conjunctiveFacet`, `hierarchicalFacet` or `exclude`\n * depending on the type of facet\n * @return {boolean} `true` if the element should be removed. `false` otherwise.\n */\n\nmodule.exports = SearchParameters;","'use strict';\n\nfunction intersection(arr1, arr2) {\n  return arr1.filter(function (value, index) {\n    return arr2.indexOf(value) > -1 && arr1.indexOf(value) === index\n    /* skips duplicates */\n    ;\n  });\n}\n\nmodule.exports = intersection;","'use strict';\n\nmodule.exports = function compact(array) {\n  if (!Array.isArray(array)) {\n    return [];\n  }\n\n  return array.filter(Boolean);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null;\nvar ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {\n  return Function.prototype.apply.call(target, receiver, args);\n};\nvar ReflectOwnKeys;\n\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys;\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n};\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\n\nmodule.exports = EventEmitter;\nmodule.exports.once = once; // Backwards-compat with node 0.10.x\n\nEventEmitter.EventEmitter = EventEmitter;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\n\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function get() {\n    return defaultMaxListeners;\n  },\n  set: function set(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function () {\n  if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n}; // Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\n\n\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args.push(arguments[i]);\n  }\n\n  var doError = type === 'error';\n  var events = this._events;\n  if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false; // If there is no 'error' event listener then throw.\n\n  if (doError) {\n    var er;\n    if (args.length > 0) er = args[0];\n\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    } // At least give some kind of context to the user\n\n\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n  if (handler === undefined) return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n\n    for (var i = 0; i < len; ++i) {\n      ReflectApply(listeners[i], this, args);\n    }\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n  checkListener(listener);\n  events = target._events;\n\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type, listener.listener ? listener.listener : listener); // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n\n      events = target._events;\n    }\n\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] : [existing, listener]; // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    } // Check for listener leak\n\n\n    m = _getMaxListeners(target);\n\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true; // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n\n      var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener = function prependListener(type, listener) {\n  return _addListener(this, type, listener, true);\n};\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0) return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = {\n    fired: false,\n    wrapFn: undefined,\n    target: target,\n    type: type,\n    listener: listener\n  };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {\n  checkListener(listener);\n  this.prependListener(type, _onceWrap(this, type, listener));\n  return this;\n}; // Emits a 'removeListener' event if and only if the listener was removed.\n\n\nEventEmitter.prototype.removeListener = function removeListener(type, listener) {\n  var list, events, position, i, originalListener;\n  checkListener(listener);\n  events = this._events;\n  if (events === undefined) return this;\n  list = events[type];\n  if (list === undefined) return this;\n\n  if (list === listener || list.listener === listener) {\n    if (--this._eventsCount === 0) this._events = Object.create(null);else {\n      delete events[type];\n      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);\n    }\n  } else if (typeof list !== 'function') {\n    position = -1;\n\n    for (i = list.length - 1; i >= 0; i--) {\n      if (list[i] === listener || list[i].listener === listener) {\n        originalListener = list[i].listener;\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0) return this;\n    if (position === 0) list.shift();else {\n      spliceOne(list, position);\n    }\n    if (list.length === 1) events[type] = list[0];\n    if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {\n  var listeners, events, i;\n  events = this._events;\n  if (events === undefined) return this; // not listening for removeListener, no need to emit\n\n  if (events.removeListener === undefined) {\n    if (arguments.length === 0) {\n      this._events = Object.create(null);\n      this._eventsCount = 0;\n    } else if (events[type] !== undefined) {\n      if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];\n    }\n\n    return this;\n  } // emit removeListener for all listeners on all events\n\n\n  if (arguments.length === 0) {\n    var keys = Object.keys(events);\n    var key;\n\n    for (i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n\n    this.removeAllListeners('removeListener');\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n    return this;\n  }\n\n  listeners = events[type];\n\n  if (typeof listeners === 'function') {\n    this.removeListener(type, listeners);\n  } else if (listeners !== undefined) {\n    // LIFO order\n    for (i = listeners.length - 1; i >= 0; i--) {\n      this.removeListener(type, listeners[i]);\n    }\n  }\n\n  return this;\n};\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n  if (events === undefined) return [];\n  var evlistener = events[type];\n  if (evlistener === undefined) return [];\n  if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function (emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\n\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n\n  for (var i = 0; i < n; ++i) {\n    copy[i] = arr[i];\n  }\n\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++) {\n    list[index] = list[index + 1];\n  }\n\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n\n      resolve([].slice.call(arguments));\n    }\n\n    ;\n    var errorListener; // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}","'use strict';\n\nfunction objectHasKeys(obj) {\n  return obj && Object.keys(obj).length > 0;\n}\n\nmodule.exports = objectHasKeys;","'use strict'; // NOTE: this behaves like lodash/defaults, but doesn't mutate the target\n// it also preserve keys order\n\nmodule.exports = function defaultsPure() {\n  var sources = Array.prototype.slice.call(arguments);\n  return sources.reduceRight(function (acc, source) {\n    Object.keys(Object(source)).forEach(function (key) {\n      if (source[key] === undefined) {\n        return;\n      }\n\n      if (acc[key] !== undefined) {\n        // remove if already added, so that we can add it in correct order\n        delete acc[key];\n      }\n\n      acc[key] = source[key];\n    });\n    return acc;\n  }, {});\n};","'use strict';\n\nmodule.exports = generateTrees;\n\nvar orderBy = require('../functions/orderBy');\n\nvar find = require('../functions/find');\n\nvar prepareHierarchicalFacetSortBy = require('../functions/formatSort');\n\nfunction generateTrees(state) {\n  return function generate(hierarchicalFacetResult, hierarchicalFacetIndex) {\n    var hierarchicalFacet = state.hierarchicalFacets[hierarchicalFacetIndex];\n    var hierarchicalFacetRefinement = state.hierarchicalFacetsRefinements[hierarchicalFacet.name] && state.hierarchicalFacetsRefinements[hierarchicalFacet.name][0] || '';\n\n    var hierarchicalSeparator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    var hierarchicalRootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n\n    var hierarchicalShowParentLevel = state._getHierarchicalShowParentLevel(hierarchicalFacet);\n\n    var sortBy = prepareHierarchicalFacetSortBy(state._getHierarchicalFacetSortBy(hierarchicalFacet));\n    var rootExhaustive = hierarchicalFacetResult.every(function (facetResult) {\n      return facetResult.exhaustive;\n    });\n    var generateTreeFn = generateHierarchicalTree(sortBy, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel, hierarchicalFacetRefinement);\n    var results = hierarchicalFacetResult;\n\n    if (hierarchicalRootPath) {\n      results = hierarchicalFacetResult.slice(hierarchicalRootPath.split(hierarchicalSeparator).length);\n    }\n\n    return results.reduce(generateTreeFn, {\n      name: state.hierarchicalFacets[hierarchicalFacetIndex].name,\n      count: null,\n      // root level, no count\n      isRefined: true,\n      // root level, always refined\n      path: null,\n      // root level, no path\n      exhaustive: rootExhaustive,\n      data: null\n    });\n  };\n}\n\nfunction generateHierarchicalTree(sortBy, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel, currentRefinement) {\n  return function generateTree(hierarchicalTree, hierarchicalFacetResult, currentHierarchicalLevel) {\n    var parent = hierarchicalTree;\n\n    if (currentHierarchicalLevel > 0) {\n      var level = 0;\n      parent = hierarchicalTree;\n\n      while (level < currentHierarchicalLevel) {\n        /**\n         * @type {object[]]} hierarchical data\n         */\n        var data = parent && Array.isArray(parent.data) ? parent.data : [];\n        parent = find(data, function (subtree) {\n          return subtree.isRefined;\n        });\n        level++;\n      }\n    } // we found a refined parent, let's add current level data under it\n\n\n    if (parent) {\n      // filter values in case an object has multiple categories:\n      //   {\n      //     categories: {\n      //       level0: ['beers', 'bières'],\n      //       level1: ['beers > IPA', 'bières > Belges']\n      //     }\n      //   }\n      //\n      // If parent refinement is `beers`, then we do not want to have `bières > Belges`\n      // showing up\n      var picked = Object.keys(hierarchicalFacetResult.data).map(function (facetValue) {\n        return [facetValue, hierarchicalFacetResult.data[facetValue]];\n      }).filter(function (tuple) {\n        var facetValue = tuple[0];\n        return onlyMatchingTree(facetValue, parent.path || hierarchicalRootPath, currentRefinement, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel);\n      });\n      parent.data = orderBy(picked.map(function (tuple) {\n        var facetValue = tuple[0];\n        var facetCount = tuple[1];\n        return format(facetCount, facetValue, hierarchicalSeparator, currentRefinement, hierarchicalFacetResult.exhaustive);\n      }), sortBy[0], sortBy[1]);\n    }\n\n    return hierarchicalTree;\n  };\n}\n\nfunction onlyMatchingTree(facetValue, parentPath, currentRefinement, hierarchicalSeparator, hierarchicalRootPath, hierarchicalShowParentLevel) {\n  // we want the facetValue is a child of hierarchicalRootPath\n  if (hierarchicalRootPath && (facetValue.indexOf(hierarchicalRootPath) !== 0 || hierarchicalRootPath === facetValue)) {\n    return false;\n  } // we always want root levels (only when there is no prefix path)\n\n\n  return !hierarchicalRootPath && facetValue.indexOf(hierarchicalSeparator) === -1 || // if there is a rootPath, being root level mean 1 level under rootPath\n  hierarchicalRootPath && facetValue.split(hierarchicalSeparator).length - hierarchicalRootPath.split(hierarchicalSeparator).length === 1 || // if current refinement is a root level and current facetValue is a root level,\n  // keep the facetValue\n  facetValue.indexOf(hierarchicalSeparator) === -1 && currentRefinement.indexOf(hierarchicalSeparator) === -1 || // currentRefinement is a child of the facet value\n  currentRefinement.indexOf(facetValue) === 0 || // facetValue is a child of the current parent, add it\n  facetValue.indexOf(parentPath + hierarchicalSeparator) === 0 && (hierarchicalShowParentLevel || facetValue.indexOf(currentRefinement) === 0);\n}\n\nfunction format(facetCount, facetValue, hierarchicalSeparator, currentRefinement, exhaustive) {\n  var parts = facetValue.split(hierarchicalSeparator);\n  return {\n    name: parts[parts.length - 1].trim(),\n    path: facetValue,\n    count: facetCount,\n    isRefined: currentRefinement === facetValue || currentRefinement.indexOf(facetValue + hierarchicalSeparator) === 0,\n    exhaustive: exhaustive,\n    data: null\n  };\n}","'use strict';\n\nfunction valToNumber(v) {\n  if (typeof v === 'number') {\n    return v;\n  } else if (typeof v === 'string') {\n    return parseFloat(v);\n  } else if (Array.isArray(v)) {\n    return v.map(valToNumber);\n  }\n\n  throw new Error('The value should be a number, a parsable string or an array of those.');\n}\n\nmodule.exports = valToNumber;","'use strict'; // @MAJOR can be replaced by native Array#findIndex when we change support\n\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return -1;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n};","'use strict'; // https://github.com/babel/babel/blob/3aaafae053fa75febb3aa45d45b6f00646e30ba4/packages/babel-helpers/src/helpers.js#L604-L620\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source === null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key;\n  var i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","'use strict';\n\nvar merge = require('../functions/merge');\n\nvar defaultsPure = require('../functions/defaultsPure');\n\nvar orderBy = require('../functions/orderBy');\n\nvar compact = require('../functions/compact');\n\nvar find = require('../functions/find');\n\nvar findIndex = require('../functions/findIndex');\n\nvar formatSort = require('../functions/formatSort');\n\nvar generateHierarchicalTree = require('./generate-hierarchical-tree');\n/**\n * @typedef SearchResults.Facet\n * @type {object}\n * @property {string} name name of the attribute in the record\n * @property {object} data the faceting data: value, number of entries\n * @property {object} stats undefined unless facet_stats is retrieved from algolia\n */\n\n/**\n * @typedef SearchResults.HierarchicalFacet\n * @type {object}\n * @property {string} name name of the current value given the hierarchical level, trimmed.\n * If root node, you get the facet name\n * @property {number} count number of objects matching this hierarchical value\n * @property {string} path the current hierarchical value full path\n * @property {boolean} isRefined `true` if the current value was refined, `false` otherwise\n * @property {HierarchicalFacet[]} data sub values for the current level\n */\n\n/**\n * @typedef SearchResults.FacetValue\n * @type {object}\n * @property {string} name the facet value itself\n * @property {number} count times this facet appears in the results\n * @property {boolean} isRefined is the facet currently selected\n * @property {boolean} isExcluded is the facet currently excluded (only for conjunctive facets)\n */\n\n/**\n * @typedef Refinement\n * @type {object}\n * @property {string} type the type of filter used:\n * `numeric`, `facet`, `exclude`, `disjunctive`, `hierarchical`\n * @property {string} attributeName name of the attribute used for filtering\n * @property {string} name the value of the filter\n * @property {number} numericValue the value as a number. Only for numeric filters.\n * @property {string} operator the operator used. Only for numeric filters.\n * @property {number} count the number of computed hits for this filter. Only on facets.\n * @property {boolean} exhaustive if the count is exhaustive\n */\n\n/**\n * @param {string[]} attributes\n */\n\n\nfunction getIndices(attributes) {\n  var indices = {};\n  attributes.forEach(function (val, idx) {\n    indices[val] = idx;\n  });\n  return indices;\n}\n\nfunction assignFacetStats(dest, facetStats, key) {\n  if (facetStats && facetStats[key]) {\n    dest.stats = facetStats[key];\n  }\n}\n/**\n * @typedef {Object} HierarchicalFacet\n * @property {string} name\n * @property {string[]} attributes\n */\n\n/**\n * @param {HierarchicalFacet[]} hierarchicalFacets\n * @param {string} hierarchicalAttributeName\n */\n\n\nfunction findMatchingHierarchicalFacetFromAttributeName(hierarchicalFacets, hierarchicalAttributeName) {\n  return find(hierarchicalFacets, function facetKeyMatchesAttribute(hierarchicalFacet) {\n    var facetNames = hierarchicalFacet.attributes || [];\n    return facetNames.indexOf(hierarchicalAttributeName) > -1;\n  });\n}\n/*eslint-disable */\n\n/**\n * Constructor for SearchResults\n * @class\n * @classdesc SearchResults contains the results of a query to Algolia using the\n * {@link AlgoliaSearchHelper}.\n * @param {SearchParameters} state state that led to the response\n * @param {array.<object>} results the results from algolia client\n * @example <caption>SearchResults of the first query in\n * <a href=\"http://demos.algolia.com/instant-search-demo\">the instant search demo</a></caption>\n{\n   \"hitsPerPage\": 10,\n   \"processingTimeMS\": 2,\n   \"facets\": [\n      {\n         \"name\": \"type\",\n         \"data\": {\n            \"HardGood\": 6627,\n            \"BlackTie\": 550,\n            \"Music\": 665,\n            \"Software\": 131,\n            \"Game\": 456,\n            \"Movie\": 1571\n         },\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"Free shipping\": 5507\n         },\n         \"name\": \"shipping\"\n      }\n  ],\n   \"hits\": [\n      {\n         \"thumbnailImage\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_54x108_s.gif\",\n         \"_highlightResult\": {\n            \"shortDescription\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n               \"matchedWords\": []\n            },\n            \"category\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Computer Security Software\",\n               \"matchedWords\": []\n            },\n            \"manufacturer\": {\n               \"matchedWords\": [],\n               \"value\": \"Webroot\",\n               \"matchLevel\": \"none\"\n            },\n            \"name\": {\n               \"value\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n               \"matchedWords\": [],\n               \"matchLevel\": \"none\"\n            }\n         },\n         \"image\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_105x210_sc.jpg\",\n         \"shipping\": \"Free shipping\",\n         \"bestSellingRank\": 4,\n         \"shortDescription\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n         \"url\": \"http://www.bestbuy.com/site/webroot-secureanywhere-internet-security-3-devi…d=1219060687969&skuId=1688832&cmp=RMX&ky=2d3GfEmNIzjA0vkzveHdZEBgpPCyMnLTJ\",\n         \"name\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n         \"category\": \"Computer Security Software\",\n         \"salePrice_range\": \"1 - 50\",\n         \"objectID\": \"1688832\",\n         \"type\": \"Software\",\n         \"customerReviewCount\": 5980,\n         \"salePrice\": 49.99,\n         \"manufacturer\": \"Webroot\"\n      },\n      ....\n  ],\n   \"nbHits\": 10000,\n   \"disjunctiveFacets\": [\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"5\": 183,\n            \"12\": 112,\n            \"7\": 149,\n            ...\n         },\n         \"name\": \"customerReviewCount\",\n         \"stats\": {\n            \"max\": 7461,\n            \"avg\": 157.939,\n            \"min\": 1\n         }\n      },\n      {\n         \"data\": {\n            \"Printer Ink\": 142,\n            \"Wireless Speakers\": 60,\n            \"Point & Shoot Cameras\": 48,\n            ...\n         },\n         \"name\": \"category\",\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"> 5000\": 2,\n            \"1 - 50\": 6524,\n            \"501 - 2000\": 566,\n            \"201 - 500\": 1501,\n            \"101 - 200\": 1360,\n            \"2001 - 5000\": 47\n         },\n         \"name\": \"salePrice_range\"\n      },\n      {\n         \"data\": {\n            \"Dynex™\": 202,\n            \"Insignia™\": 230,\n            \"PNY\": 72,\n            ...\n         },\n         \"name\": \"manufacturer\",\n         \"exhaustive\": false\n      }\n  ],\n   \"query\": \"\",\n   \"nbPages\": 100,\n   \"page\": 0,\n   \"index\": \"bestbuy\"\n}\n **/\n\n/*eslint-enable */\n\n\nfunction SearchResults(state, results) {\n  var mainSubResponse = results[0];\n  this._rawResults = results;\n  var self = this; // https://www.algolia.com/doc/api-reference/api-methods/search/#response\n\n  Object.keys(mainSubResponse).forEach(function (key) {\n    self[key] = mainSubResponse[key];\n  });\n  /**\n   * query used to generate the results\n   * @name query\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * The query as parsed by the engine given all the rules.\n   * @name parsedQuery\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * all the records that match the search parameters. Each record is\n   * augmented with a new attribute `_highlightResult`\n   * which is an object keyed by attribute and with the following properties:\n   *  - `value` : the value of the facet highlighted (html)\n   *  - `matchLevel`: full, partial or none depending on how the query terms match\n   * @name hits\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * index where the results come from\n   * @name index\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * number of hits per page requested\n   * @name hitsPerPage\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * total number of hits of this query on the index\n   * @name nbHits\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * total number of pages with respect to the number of hits per page and the total number of hits\n   * @name nbPages\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * current page\n   * @name page\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * The position if the position was guessed by IP.\n   * @name aroundLatLng\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"48.8637,2.3615\",\n   */\n\n  /**\n   * The radius computed by Algolia.\n   * @name automaticRadius\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"126792922\",\n   */\n\n  /**\n   * String identifying the server used to serve this request.\n   *\n   * getRankingInfo needs to be set to `true` for this to be returned\n   *\n   * @name serverUsed\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"c7-use-2.algolia.net\",\n   */\n\n  /**\n   * Boolean that indicates if the computation of the counts did time out.\n   * @deprecated\n   * @name timeoutCounts\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * Boolean that indicates if the computation of the hits did time out.\n   * @deprecated\n   * @name timeoutHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * True if the counts of the facets is exhaustive\n   * @name exhaustiveFacetsCount\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * True if the number of hits is exhaustive\n   * @name exhaustiveNbHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * Contains the userData if they are set by a [query rule](https://www.algolia.com/doc/guides/query-rules/query-rules-overview/).\n   * @name userData\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * queryID is the unique identifier of the query used to generate the current search results.\n   * This value is only available if the `clickAnalytics` search parameter is set to `true`.\n   * @name queryID\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * sum of the processing time of all the queries\n   * @member {number}\n   */\n\n  this.processingTimeMS = results.reduce(function (sum, result) {\n    return result.processingTimeMS === undefined ? sum : sum + result.processingTimeMS;\n  }, 0);\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.Facet[]}\n   */\n\n  this.disjunctiveFacets = [];\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.HierarchicalFacet[]}\n   */\n\n  this.hierarchicalFacets = state.hierarchicalFacets.map(function initFutureTree() {\n    return [];\n  });\n  /**\n   * other facets results\n   * @member {SearchResults.Facet[]}\n   */\n\n  this.facets = [];\n  var disjunctiveFacets = state.getRefinedDisjunctiveFacets();\n  var facetsIndices = getIndices(state.facets);\n  var disjunctiveFacetsIndices = getIndices(state.disjunctiveFacets);\n  var nextDisjunctiveResult = 1; // Since we send request only for disjunctive facets that have been refined,\n  // we get the facets information from the first, general, response.\n\n  var mainFacets = mainSubResponse.facets || {};\n  Object.keys(mainFacets).forEach(function (facetKey) {\n    var facetValueObject = mainFacets[facetKey];\n    var hierarchicalFacet = findMatchingHierarchicalFacetFromAttributeName(state.hierarchicalFacets, facetKey);\n\n    if (hierarchicalFacet) {\n      // Place the hierarchicalFacet data at the correct index depending on\n      // the attributes order that was defined at the helper initialization\n      var facetIndex = hierarchicalFacet.attributes.indexOf(facetKey);\n      var idxAttributeName = findIndex(state.hierarchicalFacets, function (f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      self.hierarchicalFacets[idxAttributeName][facetIndex] = {\n        attribute: facetKey,\n        data: facetValueObject,\n        exhaustive: mainSubResponse.exhaustiveFacetsCount\n      };\n    } else {\n      var isFacetDisjunctive = state.disjunctiveFacets.indexOf(facetKey) !== -1;\n      var isFacetConjunctive = state.facets.indexOf(facetKey) !== -1;\n      var position;\n\n      if (isFacetDisjunctive) {\n        position = disjunctiveFacetsIndices[facetKey];\n        self.disjunctiveFacets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], mainSubResponse.facets_stats, facetKey);\n      }\n\n      if (isFacetConjunctive) {\n        position = facetsIndices[facetKey];\n        self.facets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.facets[position], mainSubResponse.facets_stats, facetKey);\n      }\n    }\n  }); // Make sure we do not keep holes within the hierarchical facets\n\n  this.hierarchicalFacets = compact(this.hierarchicalFacets); // aggregate the refined disjunctive facets\n\n  disjunctiveFacets.forEach(function (disjunctiveFacet) {\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets ? result.facets : {};\n    var hierarchicalFacet = state.getHierarchicalFacetByName(disjunctiveFacet); // There should be only item in facets.\n\n    Object.keys(facets).forEach(function (dfacet) {\n      var facetResults = facets[dfacet];\n      var position;\n\n      if (hierarchicalFacet) {\n        position = findIndex(state.hierarchicalFacets, function (f) {\n          return f.name === hierarchicalFacet.name;\n        });\n        var attributeIndex = findIndex(self.hierarchicalFacets[position], function (f) {\n          return f.attribute === dfacet;\n        }); // previous refinements and no results so not able to find it\n\n        if (attributeIndex === -1) {\n          return;\n        }\n\n        self.hierarchicalFacets[position][attributeIndex].data = merge({}, self.hierarchicalFacets[position][attributeIndex].data, facetResults);\n      } else {\n        position = disjunctiveFacetsIndices[dfacet];\n        var dataFromMainRequest = mainSubResponse.facets && mainSubResponse.facets[dfacet] || {};\n        self.disjunctiveFacets[position] = {\n          name: dfacet,\n          data: defaultsPure({}, facetResults, dataFromMainRequest),\n          exhaustive: result.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], result.facets_stats, dfacet);\n\n        if (state.disjunctiveFacetsRefinements[dfacet]) {\n          state.disjunctiveFacetsRefinements[dfacet].forEach(function (refinementValue) {\n            // add the disjunctive refinements if it is no more retrieved\n            if (!self.disjunctiveFacets[position].data[refinementValue] && state.disjunctiveFacetsRefinements[dfacet].indexOf(refinementValue) > -1) {\n              self.disjunctiveFacets[position].data[refinementValue] = 0;\n            }\n          });\n        }\n      }\n    });\n    nextDisjunctiveResult++;\n  }); // if we have some root level values for hierarchical facets, merge them\n\n  state.getRefinedHierarchicalFacets().forEach(function (refinedFacet) {\n    var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    var currentRefinement = state.getHierarchicalRefinement(refinedFacet); // if we are already at a root refinement (or no refinement at all), there is no\n    // root level values request\n\n    if (currentRefinement.length === 0 || currentRefinement[0].split(separator).length < 2) {\n      return;\n    }\n\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets ? result.facets : {};\n    Object.keys(facets).forEach(function (dfacet) {\n      var facetResults = facets[dfacet];\n      var position = findIndex(state.hierarchicalFacets, function (f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      var attributeIndex = findIndex(self.hierarchicalFacets[position], function (f) {\n        return f.attribute === dfacet;\n      }); // previous refinements and no results so not able to find it\n\n      if (attributeIndex === -1) {\n        return;\n      } // when we always get root levels, if the hits refinement is `beers > IPA` (count: 5),\n      // then the disjunctive values will be `beers` (count: 100),\n      // but we do not want to display\n      //   | beers (100)\n      //     > IPA (5)\n      // We want\n      //   | beers (5)\n      //     > IPA (5)\n\n\n      var defaultData = {};\n\n      if (currentRefinement.length > 0) {\n        var root = currentRefinement[0].split(separator)[0];\n        defaultData[root] = self.hierarchicalFacets[position][attributeIndex].data[root];\n      }\n\n      self.hierarchicalFacets[position][attributeIndex].data = defaultsPure(defaultData, facetResults, self.hierarchicalFacets[position][attributeIndex].data);\n    });\n    nextDisjunctiveResult++;\n  }); // add the excludes\n\n  Object.keys(state.facetsExcludes).forEach(function (facetName) {\n    var excludes = state.facetsExcludes[facetName];\n    var position = facetsIndices[facetName];\n    self.facets[position] = {\n      name: facetName,\n      data: mainSubResponse.facets[facetName],\n      exhaustive: mainSubResponse.exhaustiveFacetsCount\n    };\n    excludes.forEach(function (facetValue) {\n      self.facets[position] = self.facets[position] || {\n        name: facetName\n      };\n      self.facets[position].data = self.facets[position].data || {};\n      self.facets[position].data[facetValue] = 0;\n    });\n  });\n  /**\n   * @type {Array}\n   */\n\n  this.hierarchicalFacets = this.hierarchicalFacets.map(generateHierarchicalTree(state));\n  /**\n   * @type {Array}\n   */\n\n  this.facets = compact(this.facets);\n  /**\n   * @type {Array}\n   */\n\n  this.disjunctiveFacets = compact(this.disjunctiveFacets);\n  this._state = state;\n}\n/**\n * Get a facet object with its name\n * @deprecated\n * @param {string} name name of the faceted attribute\n * @return {SearchResults.Facet} the facet object\n */\n\n\nSearchResults.prototype.getFacetByName = function (name) {\n  function predicate(facet) {\n    return facet.name === name;\n  }\n\n  return find(this.facets, predicate) || find(this.disjunctiveFacets, predicate) || find(this.hierarchicalFacets, predicate);\n};\n/**\n * Get the facet values of a specified attribute from a SearchResults object.\n * @private\n * @param {SearchResults} results the search results to search in\n * @param {string} attribute name of the faceted attribute to search for\n * @return {array|object} facet values. For the hierarchical facets it is an object.\n */\n\n\nfunction extractNormalizedFacetValues(results, attribute) {\n  function predicate(facet) {\n    return facet.name === attribute;\n  }\n\n  if (results._state.isConjunctiveFacet(attribute)) {\n    var facet = find(results.facets, predicate);\n    if (!facet) return [];\n    return Object.keys(facet.data).map(function (name) {\n      return {\n        name: name,\n        count: facet.data[name],\n        isRefined: results._state.isFacetRefined(attribute, name),\n        isExcluded: results._state.isExcludeRefined(attribute, name)\n      };\n    });\n  } else if (results._state.isDisjunctiveFacet(attribute)) {\n    var disjunctiveFacet = find(results.disjunctiveFacets, predicate);\n    if (!disjunctiveFacet) return [];\n    return Object.keys(disjunctiveFacet.data).map(function (name) {\n      return {\n        name: name,\n        count: disjunctiveFacet.data[name],\n        isRefined: results._state.isDisjunctiveFacetRefined(attribute, name)\n      };\n    });\n  } else if (results._state.isHierarchicalFacet(attribute)) {\n    return find(results.hierarchicalFacets, predicate);\n  }\n}\n/**\n * Sort nodes of a hierarchical facet results\n * @private\n * @param {HierarchicalFacet} node node to upon which we want to apply the sort\n */\n\n\nfunction recSort(sortFn, node) {\n  if (!node.data || node.data.length === 0) {\n    return node;\n  }\n\n  var children = node.data.map(function (childNode) {\n    return recSort(sortFn, childNode);\n  });\n  var sortedChildren = sortFn(children);\n  var newNode = merge({}, node, {\n    data: sortedChildren\n  });\n  return newNode;\n}\n\nSearchResults.DEFAULT_SORT = ['isRefined:desc', 'count:desc', 'name:asc'];\n\nfunction vanillaSortFn(order, data) {\n  return data.sort(order);\n}\n/**\n * Get a the list of values for a given facet attribute. Those values are sorted\n * refinement first, descending count (bigger value on top), and name ascending\n * (alphabetical order). The sort formula can overridden using either string based\n * predicates or a function.\n *\n * This method will return all the values returned by the Algolia engine plus all\n * the values already refined. This means that it can happen that the\n * `maxValuesPerFacet` [configuration](https://www.algolia.com/doc/rest-api/search#param-maxValuesPerFacet)\n * might not be respected if you have facet values that are already refined.\n * @param {string} attribute attribute name\n * @param {object} opts configuration options.\n * @param {Array.<string> | function} opts.sortBy\n * When using strings, it consists of\n * the name of the [FacetValue](#SearchResults.FacetValue) or the\n * [HierarchicalFacet](#SearchResults.HierarchicalFacet) attributes with the\n * order (`asc` or `desc`). For example to order the value by count, the\n * argument would be `['count:asc']`.\n *\n * If only the attribute name is specified, the ordering defaults to the one\n * specified in the default value for this attribute.\n *\n * When not specified, the order is\n * ascending.  This parameter can also be a function which takes two facet\n * values and should return a number, 0 if equal, 1 if the first argument is\n * bigger or -1 otherwise.\n *\n * The default value for this attribute `['isRefined:desc', 'count:desc', 'name:asc']`\n * @return {FacetValue[]|HierarchicalFacet|undefined} depending on the type of facet of\n * the attribute requested (hierarchical, disjunctive or conjunctive)\n * @example\n * helper.on('result', function(event){\n *   //get values ordered only by name ascending using the string predicate\n *   event.results.getFacetValues('city', {sortBy: ['name:asc']});\n *   //get values  ordered only by count ascending using a function\n *   event.results.getFacetValues('city', {\n *     // this is equivalent to ['count:asc']\n *     sortBy: function(a, b) {\n *       if (a.count === b.count) return 0;\n *       if (a.count > b.count)   return 1;\n *       if (b.count > a.count)   return -1;\n *     }\n *   });\n * });\n */\n\n\nSearchResults.prototype.getFacetValues = function (attribute, opts) {\n  var facetValues = extractNormalizedFacetValues(this, attribute);\n\n  if (!facetValues) {\n    return undefined;\n  }\n\n  var options = defaultsPure({}, opts, {\n    sortBy: SearchResults.DEFAULT_SORT\n  });\n\n  if (Array.isArray(options.sortBy)) {\n    var order = formatSort(options.sortBy, SearchResults.DEFAULT_SORT);\n\n    if (Array.isArray(facetValues)) {\n      return orderBy(facetValues, order[0], order[1]);\n    } // If facetValues is not an array, it's an object thus a hierarchical facet object\n\n\n    return recSort(function (hierarchicalFacetValues) {\n      return orderBy(hierarchicalFacetValues, order[0], order[1]);\n    }, facetValues);\n  } else if (typeof options.sortBy === 'function') {\n    if (Array.isArray(facetValues)) {\n      return facetValues.sort(options.sortBy);\n    } // If facetValues is not an array, it's an object thus a hierarchical facet object\n\n\n    return recSort(function (data) {\n      return vanillaSortFn(options.sortBy, data);\n    }, facetValues);\n  }\n\n  throw new Error('options.sortBy is optional but if defined it must be ' + 'either an array of string (predicates) or a sorting function');\n};\n/**\n * Returns the facet stats if attribute is defined and the facet contains some.\n * Otherwise returns undefined.\n * @param {string} attribute name of the faceted attribute\n * @return {object} The stats of the facet\n */\n\n\nSearchResults.prototype.getFacetStats = function (attribute) {\n  if (this._state.isConjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.facets, attribute);\n  } else if (this._state.isDisjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.disjunctiveFacets, attribute);\n  }\n\n  return undefined;\n};\n/**\n * @typedef {Object} FacetListItem\n * @property {string} name\n */\n\n/**\n * @param {FacetListItem[]} facetList (has more items, but enough for here)\n * @param {string} facetName\n */\n\n\nfunction getFacetStatsIfAvailable(facetList, facetName) {\n  var data = find(facetList, function (facet) {\n    return facet.name === facetName;\n  });\n  return data && data.stats;\n}\n/**\n * Returns all refinements for all filters + tags. It also provides\n * additional information: count and exhaustiveness for each filter.\n *\n * See the [refinement type](#Refinement) for an exhaustive view of the available\n * data.\n *\n * Note that for a numeric refinement, results are grouped per operator, this\n * means that it will return responses for operators which are empty.\n *\n * @return {Array.<Refinement>} all the refinements\n */\n\n\nSearchResults.prototype.getRefinements = function () {\n  var state = this._state;\n  var results = this;\n  var res = [];\n  Object.keys(state.facetsRefinements).forEach(function (attributeName) {\n    state.facetsRefinements[attributeName].forEach(function (name) {\n      res.push(getRefinement(state, 'facet', attributeName, name, results.facets));\n    });\n  });\n  Object.keys(state.facetsExcludes).forEach(function (attributeName) {\n    state.facetsExcludes[attributeName].forEach(function (name) {\n      res.push(getRefinement(state, 'exclude', attributeName, name, results.facets));\n    });\n  });\n  Object.keys(state.disjunctiveFacetsRefinements).forEach(function (attributeName) {\n    state.disjunctiveFacetsRefinements[attributeName].forEach(function (name) {\n      res.push(getRefinement(state, 'disjunctive', attributeName, name, results.disjunctiveFacets));\n    });\n  });\n  Object.keys(state.hierarchicalFacetsRefinements).forEach(function (attributeName) {\n    state.hierarchicalFacetsRefinements[attributeName].forEach(function (name) {\n      res.push(getHierarchicalRefinement(state, attributeName, name, results.hierarchicalFacets));\n    });\n  });\n  Object.keys(state.numericRefinements).forEach(function (attributeName) {\n    var operators = state.numericRefinements[attributeName];\n    Object.keys(operators).forEach(function (operator) {\n      operators[operator].forEach(function (value) {\n        res.push({\n          type: 'numeric',\n          attributeName: attributeName,\n          name: value,\n          numericValue: value,\n          operator: operator\n        });\n      });\n    });\n  });\n  state.tagRefinements.forEach(function (name) {\n    res.push({\n      type: 'tag',\n      attributeName: '_tags',\n      name: name\n    });\n  });\n  return res;\n};\n/**\n * @typedef {Object} Facet\n * @property {string} name\n * @property {Object} data\n * @property {boolean} exhaustive\n */\n\n/**\n * @param {*} state\n * @param {*} type\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\n\n\nfunction getRefinement(state, type, attributeName, name, resultsFacets) {\n  var facet = find(resultsFacets, function (f) {\n    return f.name === attributeName;\n  });\n  var count = facet && facet.data && facet.data[name] ? facet.data[name] : 0;\n  var exhaustive = facet && facet.exhaustive || false;\n  return {\n    type: type,\n    attributeName: attributeName,\n    name: name,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n/**\n * @param {*} state\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\n\n\nfunction getHierarchicalRefinement(state, attributeName, name, resultsFacets) {\n  var facetDeclaration = state.getHierarchicalFacetByName(attributeName);\n\n  var separator = state._getHierarchicalFacetSeparator(facetDeclaration);\n\n  var split = name.split(separator);\n  var rootFacet = find(resultsFacets, function (facet) {\n    return facet.name === attributeName;\n  });\n  var facet = split.reduce(function (intermediateFacet, part) {\n    var newFacet = intermediateFacet && find(intermediateFacet.data, function (f) {\n      return f.name === part;\n    });\n    return newFacet !== undefined ? newFacet : intermediateFacet;\n  }, rootFacet);\n  var count = facet && facet.count || 0;\n  var exhaustive = facet && facet.exhaustive || false;\n  var path = facet && facet.path || '';\n  return {\n    type: 'hierarchical',\n    attributeName: attributeName,\n    name: path,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n\nmodule.exports = SearchResults;","'use strict';\n\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined;\n    var valIsNull = value === null;\n    var othIsDefined = other !== undefined;\n    var othIsNull = other === null;\n\n    if (!othIsNull && value > other || valIsNull && othIsDefined || !valIsDefined) {\n      return 1;\n    }\n\n    if (!valIsNull && value < other || othIsNull && valIsDefined || !othIsDefined) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n/**\n * @param {Array<object>} collection object with keys in attributes\n * @param {Array<string>} iteratees attributes\n * @param {Array<string>} orders asc | desc\n */\n\n\nfunction orderBy(collection, iteratees, orders) {\n  if (!Array.isArray(collection)) {\n    return [];\n  }\n\n  if (!Array.isArray(orders)) {\n    orders = [];\n  }\n\n  var result = collection.map(function (value, index) {\n    return {\n      criteria: iteratees.map(function (iteratee) {\n        return value[iteratee];\n      }),\n      index: index,\n      value: value\n    };\n  });\n  result.sort(function comparer(object, other) {\n    var index = -1;\n\n    while (++index < object.criteria.length) {\n      var res = compareAscending(object.criteria[index], other.criteria[index]);\n\n      if (res) {\n        if (index >= orders.length) {\n          return res;\n        }\n\n        if (orders[index] === 'desc') {\n          return -res;\n        }\n\n        return res;\n      }\n    } // This ensures a stable sort in V8 and other engines.\n    // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n\n\n    return object.index - other.index;\n  });\n  return result.map(function (res) {\n    return res.value;\n  });\n}\n\nmodule.exports = orderBy;"],"sourceRoot":""}