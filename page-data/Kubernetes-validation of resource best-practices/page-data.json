{"componentChunkName":"component---src-templates-note-js","path":"/Kubernetes-validation of resource best-practices","result":{"data":{"brainNote":{"slug":"Kubernetes-validation of resource best-practices","title":"Kubernetes-validation of resource best-practices","childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"To get an overview of a \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/Kubernetes\"\n  }), \"Kubernetes\"), \" cluster resources (like pods and namespaces) and if best practices are applied.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"// src/gatsby-plugin-theme-ui/components.js\\nimport React from \\\"react\\\";\\nimport ThemeUIPrism from \\\"@theme-ui/prism\\\";\\nimport PrismCore from \\\"prismjs/components/prism-core\\\";\\nimport \\\"prismjs/components/prism-r\\\";\\nexport default {\\n  pre: (props) => props.children,\\n  code: (props) => <ThemeUIPrism {...props} Prism={PrismCore} />,\\n};\\n\")), mdx(\"h3\", null, \"Polaris\"), mdx(\"p\", null, \"Best practices mean for the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/Tool\"\n  }), \"Tool\"), \" called \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/FairwindsOps/polaris\"\n  }), \"polaris\"), \" to set image tags (instead of \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"latest\"), \") and pod policies.\"), mdx(\"p\", null, \"Some \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"system\"), \" pods like aws-node in AWS EKS need to run with priviledges.\"), mdx(\"p\", null, \"A \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://learnk8s.io/validating-kubernetes-yaml#polaris\"\n  }), \"CLI version\"), \" can be used to enforce policies on CI.\"));\n}\n;\nMDXContent.isMDXComponent = true;"},"inboundReferenceNotes":[],"outboundReferenceNotes":[{"title":"Kubernetes","slug":"Kubernetes","childMdx":{"excerpt":"kubectl get pods https://github.com/kelseyhightower/kubernetes-the-hard-way \n https://github.com/Praqma/LearnKubernetes/blob/master/kamranâ€¦"}},{"title":"Tool","slug":"Tool","childMdx":{"excerpt":""}}]},"site":{"siteMetadata":{"title":"Notes"}}},"pageContext":{"slug":"Kubernetes-validation of resource best-practices"}}}