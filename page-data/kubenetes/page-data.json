{"componentChunkName":"component---node-modules-aengusm-gatsby-theme-brain-src-templates-brain-js","path":"/Kubenetes","result":{"data":{"brainNote":{"slug":"Kubenetes","title":"Kubenetes","externalInboundReferences":null,"inboundReferences":[],"inboundReferencePreviews":[],"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Kubenetes\"\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Kubenetes\"), mdx(\"p\", null, \"kubectl get pods\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/kelseyhightower/kubernetes-the-hard-way\"\n  }), \"https://github.com/kelseyhightower/kubernetes-the-hard-way\"), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/Praqma/LearnKubernetes/blob/master/kamran/Kubernetes-The-Hard-Way-on-AWS.md\"\n  }), \"https://github.com/Praqma/LearnKubernetes/blob/master/kamran/Kubernetes-The-Hard-Way-on-AWS.md\")), mdx(\"p\", null, \"Normal Scheduled 1m default-scheduler Successfully assigned money-machine-webserver-7b94647855-rsv77 to ip-172-31-21-103.eu-west-1.compute.internal\\nNormal SuccessfulMountVolume 1m kubelet, ip-172-31-21-103.eu-west-1.compute.internal MountVolume.SetUp succeeded for volume \\\"default-token-z255r\\\"\\nWarning FailedCreatePodSandBox 1m (x8 over 1m) kubelet, ip-172-31-21-103.eu-west-1.compute.internal Failed create pod sandbox.\\nWarning FailedSync 1m (x8 over 1m) kubelet, ip-172-31-21-103.eu-west-1.compute.internal Error syncing pod\\nNormal SandboxChanged 1m (x8 over 1m) kubelet, ip-172-31-21-103.eu-west-1.compute.internal Pod sandbox changed, it will be killed and re-created.\"), mdx(\"h3\", null, \"Production issues\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Jobs are never cleaned up\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Docker build takes forever: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://semaphoreci.com/docs/docker/docker-layer-caching.html\"\n  }), \"https://semaphoreci.com/docs/docker/docker-layer-caching.html\"))), mdx(\"h3\", null, \"Restart k8s on node\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"systemctl stop kubelet.service\\nsystemctl stop docker.service\\nsystemctl start docker.service\\nsystemctl start kubelet.service\\n\")), mdx(\"h3\", null, \"Case studies\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://symfony.com/blog/an-open-source-web-platform-for-the-new-president-of-france\"\n  }), \"https://symfony.com/blog/an-open-source-web-platform-for-the-new-president-of-france\")), mdx(\"h3\", null, \"Kops\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://ryaneschinger.com/blog/kubernetes-aws-vpc-kops-terraform/\"\n  }), \"https://ryaneschinger.com/blog/kubernetes-aws-vpc-kops-terraform/\")), mdx(\"h3\", null, \"Variables in templates\"), mdx(\"p\", null, \"IMAGE_TAG=v1.2.3 envsubst < deployment.yml | kubectl apply -f -\"), mdx(\"h3\", null, \"Helm\"), mdx(\"p\", null, \"Package manager for kubernetes.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"helm install --name ticketswap -f values.yaml stable/telegraf\\n\")), mdx(\"h3\", null, \"RBAC\"), mdx(\"p\", null, \"= Role-Based Access Control\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"admin\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"deployer\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"secrets-reader\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"kind: Role\\napiVersion: rbac.authorization.k8s.io/v1\\nmetadata:\\n  namespace: default\\n  name: pod-reader\\nrules:\\n- apiGroups: [\\\"\\\"] # \\\"\\\" indicates the core API group\\n  resources: [\\\"pods\\\"]\\n  verbs: [\\\"get\\\", \\\"watch\\\", \\\"list\\\"]\\n\")), mdx(\"h3\", null, \"Circle CI\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.alexecollins.com/continuous-delivery-with-kubernetes-and-circleci/\"\n  }), \"https://www.alexecollins.com/continuous-delivery-with-kubernetes-and-circleci/\"), \"\\nExample with sf:\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/EnMarche/en-marche.fr/blob/master/circle.yml\"\n  }), \"https://github.com/EnMarche/en-marche.fr/blob/master/circle.yml\")), mdx(\"h3\", null, \"Monitoring\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/skippbox/kubewatch\"\n  }), \"https://github.com/skippbox/kubewatch\")), mdx(\"h3\", null, \"Pod\"), mdx(\"p\", null, \"What makes the application, except external data sources.\\nIn our case it could be: php-fpm, nginx\\nEach pod gets a unique IP address\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Where to put supporting services like monitoring and logging?\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Bash into pod: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"kubectl exec [pod-name] -i -t -- /bin/bash\"), \"\\nAlpine: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"kubectl exec [pod-name] -i -t -- sh\"))), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Restart pod: \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"kubectl get pod PODNAME -n NAMESPACE -o yaml | kubectl replace --force -f -\"))), mdx(\"h3\", null, \"Debugging tools\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Shell into container\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"kubectl run curl-adri --image=radial/busyboxplus:curl -i --tty --rm --generator=\\\"run-pod/v1\\\"\")), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Tracing tools like \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/jaegertracing/jaeger-kubernetes\"\n  }), \"https://github.com/jaegertracing/jaeger-kubernetes\"))), mdx(\"h3\", null, \"Other tools\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Switch kubectl contexts and namespaces with \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/ahmetb/kubectx\"\n  }), \"kubectx\"), \"\\nContext \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"kubectx stackpoint\"), \"\\nNamespace \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"kubens backend\"))), mdx(\"h3\", null, \"Controller (Pod)\"), mdx(\"p\", null, \"Creates and manages multiple Pods. Handles rollout, replication.\\nExamples: Deployment, Statefulset, DaemonSet\"), mdx(\"h3\", null, \"Nodes\"), mdx(\"p\", null, \"= Worker machine, can be clustered\\nRuns:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"docker client or rkt\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"kubelet, the primary node agent.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"kube-proxy, creates virtual IP address. VPN between nodes?\")), mdx(\"h3\", null, \"Master\"), mdx(\"p\", null, \"Runs apiserver\"), mdx(\"h3\", null, \"Node Controller\"), mdx(\"p\", null, \"CIDR block assignment if configured, keeping the list of node up to date, node health monitoring\"), mdx(\"h3\", null, \"kube-controller-manager\"), mdx(\"p\", null, \"Like supervisord but for the cluster.\\nWhere does it run?\"), mdx(\"h3\", null, \"Deployments\"), mdx(\"p\", null, \"Deployments vs Pods? Separate things.\\nDoes a deployment overwrites Pods? It kills it and creates a new one\\nDeploy with\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"kubectl set image deployment/some-deployment some-image=vendor/some-image:tag\"), \". e.g. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"kubectl set image deployment/todo todo-php=ticketswap/todo-php:latest\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"kubectl rollout status deployment [deployment]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"kubectl rollout history deployment [deployment]\"), \", set \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"revisionHistoryLimit: 100\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"kubectl rollout undo [deployment]\"))), mdx(\"h3\", null, \"Labels\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Can be filtered on \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"kubectl get pods -l app=monolith\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Can be set e.g. on nodes \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"kubectl nodes labels minikube hardware=high-spec\"))), mdx(\"h3\", null, \"Health checks\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"running commands ``\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"periodic checks on url \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"livenessProbe, httpGet\"))), mdx(\"h3\", null, \"Annotations\"), mdx(\"p\", null, \"Adds non-filterable (compared to labels) \\\"tags\\\" to objects.\\nLike release version, release timestamp, build time\"), mdx(\"h3\", null, \"Namespaces\"), mdx(\"p\", null, \"When to use it? (For small team it seems not needed)\"), mdx(\"h3\", null, \"Side cars\"), mdx(\"p\", null, \"Supporting containers around a main application.\"), mdx(\"h3\", null, \"Replica Sets\"), mdx(\"h3\", null, \"Services\"), mdx(\"p\", null, \"Defines a logical set of Pods, e.g. frontend, backend.\"), mdx(\"h3\", null, \"Security\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"PodSecurityPolicy\"), \": create \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"restricted\"), \" with \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"MustRunAsNonRoot\"), \" read only file system\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"RBAC\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Service accounts for CircleCI?\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"networkPolicy?\"))), mdx(\"h3\", null, \"Ingresses\"), mdx(\"h3\", null, \"Differences to AWS EC\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pod vs Task\\nAlmost the same. You also have port definition, containers and health. Problem with AWS tasks with terraform:\\nNew versions of tasks are created when deploying. Terraform doesn't know about them and wants to roll back when terraform files change.\\nWhat could be different with K8s: Deployments?, Services without Pods?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"More management compared to AWS (more software to take care of)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Kubelet: Similar agent concept to AWS\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"AWS has many log options but no easy log access interface\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cron Jobs from Kubernetes seems nice, not sure if AWS has it\")));\n}\n;\nMDXContent.isMDXComponent = true;"}}},"pageContext":{"slug":"Kubenetes"}}}