{"componentChunkName":"component---plugins-gatsby-theme-brain-src-templates-brain-js","path":"/notes/import-notes-from-instapaper","result":{"data":{"brainNote":{"slug":"import-notes-from-instapaper","title":"Import notes from Instapaper","inboundReferenceNotes":[{"title":"Notes database","slug":"notes-database"}],"inboundReferences":["notes-database"],"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"../../../notes/tool\"\n  }), \"#tool\"), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"../../../notes/idea\"\n  }), \"#idea\"), \" \"), mdx(\"h3\", null, \"Instapaper\"), mdx(\"p\", null, \"I store articles on blogs/website in the read-it-later service \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.instapaper.com\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"Instapaper\"), \".  Instapaper has an iOS app and sends articles to the Kindle once a week. \"), mdx(\"h3\", null, \"How I use it\"), mdx(\"p\", null, \"Although I do like the idea of reading later. I'm rarely reading stored articles back. Why ist that? \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Often I read the article straight on the website, there is no need to read it again later \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I often read on the notebook but the instapaper website is slow and not designed well\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Opening the Instapaper app feels like a todo-list instead of super exciting\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Finding information with Instapaper is not working for me because: \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Search is a paid feature in Instapaper, and I don't want to pay\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It's faster to find the article again via Google\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I sometimes copy the link to an article (source) in my notes and find it back like that\")))), mdx(\"h3\", null, \"Idea\"), mdx(\"p\", null, \"Reading articles more with the goal of extracting ideas and linking them to existing ideas according to the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"../../../notes/zettelkasten-principles\"\n  }), \"Zettelkasten principles\"), \" would be cool to learn more efficiently and find back information easier.\"), mdx(\"p\", null, \" Copy every article that I save to Instapaper into my notes as markdown files. That way:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I can always access the articles in the future\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I can link to articles in my notes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"I can search offline (fast) \")), mdx(\"h3\", null, \"Implementation\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://ifttt.com/instapaper\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"IFTT\"), \" can be used but it doesn't contain the content of the article. \"), mdx(\"p\", null, \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"../../../notes/published\"\n  }), \"#published\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"#tool   #idea   Instapaper I store articles on blogs/website in the read-it-later service  Instapaper .  Instapaper has an iOS app and sendsâ€¦","timeToRead":1}}},"pageContext":{"slug":"import-notes-from-instapaper"}},"staticQueryHashes":["318001574","3787687951"]}