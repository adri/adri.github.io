{"componentChunkName":"component---plugins-gatsby-theme-brain-src-templates-brain-js","path":"/notes/mysql-optimizer-trace-to-debug-slow-queries","result":{"data":{"brainNote":{"slug":"mysql-optimizer-trace-to-debug-slow-queries","title":"MySQL Optimizer Trace to debug slow queries","inboundReferenceNotes":[],"inboundReferencePreviews":[],"inboundReferences":[],"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"An optimizer trace can show why a query executes slowly in MySQL to optimize \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/notes/performance\"\n  }), \"[[Performance]]\"), \". The trace contains costs of different indexes that are evaluated and reasons why one is chosen over the other.\"), mdx(\"h3\", null, \"Get a trace\"), mdx(\"p\", null, \"Traces are per session. Enabling \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"optimizer_trace\"), \" it doesn't affect other sessions.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-sql\"\n  }), \"# Turn tracing on (it's off by default):\\nSET optimizer_trace=\\\"enabled=on\\\";\\n\\n# Run query\\nSELECT ...;\\n\\n# See the trace of the query\\nSELECT * FROM INFORMATION_SCHEMA.OPTIMIZER_TRACE;\\n\\n# When done with tracing, disable it:\\nSET optimizer_trace=\\\"enabled=off\\\";\\n\")), mdx(\"h3\", null, \"Read a trace\"), mdx(\"p\", null, \"Optimizer traces are JSON encoded. Best to copy the structure in a JSON viewer. The trace contains these steps:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"join_preparation\"), \" shows early query rewrites\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"join_optimization\"), \" shows how execution plan is built - \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"condition_processing\"), \" basic rewrites in WHERE/ON conditions - \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ref_optimizer_key_uses\"), \": Construction of possible ways to do ref and eq_ref accesses - \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"rows_estimation\"), \": Estimations of index costs, \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"usable\"), \" and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"cause\"), \" can give hints why an index is not used - \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"considered_execution_plans\"), \": Choice of the join order - \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"attaching_conditions_to_tables\"), \" Once the join order is fixed, parts of the WHERE clause are \\\"attached\\\" to tables to filter out rows as early as possible\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"join_execution\"), \" shows any optimizations during execution. The optimizer can overwrite an execution plan with heuristics e.g. \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"reconsidering_access_paths_for_index_ordering\"), \".\")), mdx(\"h3\", null, \"Sources\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://dev.mysql.com/doc/internals/en/optimizer-tracing-typical-usage.html\"\n  }), \"https://dev.mysql.com/doc/internals/en/optimizer-tracing-typical-usage.html\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://mariadb.com/kb/en/optimizer-trace-guide/\"\n  }), \"https://mariadb.com/kb/en/optimizer-trace-guide/\"))));\n}\n;\nMDXContent.isMDXComponent = true;"}},"allBrainNote":{"nodes":[{"slug":"mysql-optimizer-trace-to-debug-slow-queries","title":"MySQL Optimizer Trace to debug slow queries","childMdx":{"excerpt":"An optimizer trace can show why a query executes slowly in MySQL to optimize  [[Performance]] . The trace contains costs of different…"}},{"slug":"run-php-on-arm-based-aws-eks","title":"Run PHP on ARM based AWS EKS","childMdx":{"excerpt":"Amazon has publishedd a blog post  Improving performance of PHP for Arm64 and impact on AWS Graviton2 based EC2 instances  that shows 2…"}},{"slug":"tool","title":"Tool","childMdx":{"excerpt":""}},{"slug":"performance","title":"Performance","childMdx":{"excerpt":""}},{"slug":"kubernetes-validation-of-resource-best-practices","title":"Kubernetes validation of resource best-practices","childMdx":{"excerpt":"To get an overview of  [[Kubernetes]]  cluster resources (like pods and namespaces) and if best practices are applied. Polaris Best…"}},{"slug":"kubernetes","title":"Kubernetes","childMdx":{"excerpt":"kubectl get pods https://github.com/kelseyhightower/kubernetes-the-hard-way \n https://github.com/Praqma/LearnKubernetes/blob/master/kamran…"}}]}},"pageContext":{"slug":"mysql-optimizer-trace-to-debug-slow-queries"}},"staticQueryHashes":["318001574","3787687951","3787687951"]}