{"componentChunkName":"component---plugins-gatsby-theme-brain-src-templates-brain-js","path":"/notes/notes-database","result":{"data":{"brainNote":{"slug":"notes-database","title":"Notes database","inboundReferenceNotes":[],"inboundReferencePreviews":[],"inboundReferences":[],"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Collect notes from all sorts of sources into one big linked \\\"database\\\". Over time this builds a valuable knowledge graph.\"), mdx(\"h3\", null, \"Methods\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/notes/zettelkasten-principles\"\n  }), \"[[Zettelkasten principles]]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/notes/dont-use-tags-for-note-organization\"\n  }), \"[[Don't use tags for note organization]]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/notes/feynman-technique-to-learn-things\"\n  }), \"[[Feynman technique to learn things]]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/notes/building-a-second-brain\"\n  }), \"[[Building a second brain]]\"))), mdx(\"h3\", null, \"Imports\"), mdx(\"p\", null, \"Where do I read/watch/hear information that I want to keep?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/notes/import-notes-from-kindle\"\n  }), \"[[Import notes from Kindle]]\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/notes/import-notes-from-instapaper\"\n  }), \"[[Import notes from Instapaper]]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/notes/import-twitter-likes\"\n  }), \"[[Import Twitter likes]]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/notes/import-github-stars\"\n  }), \"[[Import Github stars]]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Import messages from iMessage\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Import notes from Slack\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Import notes from Website highlights (what tool?)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Import Photos\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Import Youtube watch history\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/notes/published\"\n  }), \"#published\"), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/notes/idea\"\n  }), \"#idea\"), \" \"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"allBrainNote":{"nodes":[{"slug":"notes-database","title":"Notes database","childMdx":{"excerpt":"Collect notes from all sorts of sources into one big linked \"database\". Over time this builds a valuable knowledge graph. Methods…"}},{"slug":"zettelkasten-principles","title":"Zettelkasten principles","childMdx":{"excerpt":""}},{"slug":"dont-use-tags-for-note-organization","title":"Don't use tags for note organization","childMdx":{"excerpt":""}},{"slug":"feynman-technique-to-learn-things","title":"Feynman technique to learn things","childMdx":{"excerpt":""}},{"slug":"building-a-second-brain","title":"Building a second brain","childMdx":{"excerpt":""}},{"slug":"import-notes-from-kindle","title":"Import notes from Kindle","childMdx":{"excerpt":""}},{"slug":"import-notes-from-instapaper","title":"Import notes from Instapaper","childMdx":{"excerpt":""}},{"slug":"import-twitter-likes","title":"Import Twitter likes","childMdx":{"excerpt":""}},{"slug":"import-github-stars","title":"Import Github stars","childMdx":{"excerpt":""}},{"slug":"published","title":"published","childMdx":{"excerpt":""}},{"slug":"idea","title":"idea","childMdx":{"excerpt":""}},{"slug":"1","title":"1","childMdx":{"excerpt":""}},{"slug":"notes","title":"Notes","childMdx":{"excerpt":"Test notes"}},{"slug":"rockefeller-habits-for-scale-ups","title":"Rockefeller Habits for scale-ups","childMdx":{"excerpt":"The Rockefeller Habits are a checklist of habits to help companies to grow while avoiding chaos due to more people and processes. It is…"}}]}},"pageContext":{"slug":"notes-database"}},"staticQueryHashes":["318001574","3787687951","3787687951"]}