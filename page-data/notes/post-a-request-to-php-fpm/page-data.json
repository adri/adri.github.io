{"componentChunkName":"component---plugins-gatsby-theme-brain-src-templates-brain-js","path":"/notes/post-a-request-to-php-fpm","result":{"data":{"brainNote":{"slug":"post-a-request-to-php-fpm","title":"POST a request to PHP-FPM","inboundReferenceNotes":[{"title":"Site Reliability Engineering","slug":"site-reliability-engineering"}],"inboundReferences":["site-reliability-engineering"],"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Without a webserver like nginx or Apache, a tool called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"cgi-fcgi\"), \" can be used to query a PHP-FPM process.\"), mdx(\"h3\", null, \"Install cgi-fcgi\"), mdx(\"p\", null, \"To send a POST request directly to PHP-FPM a fcgi tool is needed:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On macOS \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"brew install fcgi\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On Debian  \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"apt-get install libfcgi0ldbl\"))), mdx(\"h3\", null, \"Send a POST request\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"echo '{\\\"query\\\": \\\"{allCities { edges {node {id}}} }\\\"}' | \\\\\\nSCRIPT_NAME=/var/www/app/public/index.php \\\\\\nSCRIPT_FILENAME=/var/www/app/public/index.php \\\\\\nDOCUMENT_ROOT=/var/www/app/public \\\\\\nREMOTE_ADDR=127.0.0.1 \\\\\\nHTTP_HOST=api.some-domain.com \\\\\\nHTTPS=true \\\\\\nREQUEST_URI=/graphql/public \\\\\\nREQUEST_METHOD=POST \\\\\\nCONTENT_TYPE=application/json \\\\\\nCONTENT_LENGTH=47 \\\\\\ncgi-fcgi -bind -connect 127.0.0.1:8080\\n\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/notes/published\"\n  }), \"#published\"), \" \"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Without a webserver like nginx or Apache, a tool called  cgi-fcgi  can be used to query a PHP-FPM process. Install cgi-fcgi To send a POSTâ€¦"}}},"pageContext":{"slug":"post-a-request-to-php-fpm"}},"staticQueryHashes":["318001574","3787687951"]}