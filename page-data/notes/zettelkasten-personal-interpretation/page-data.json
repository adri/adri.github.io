{"componentChunkName":"component---plugins-gatsby-theme-brain-src-templates-brain-js","path":"/notes/zettelkasten-personal-interpretation","result":{"data":{"brainNote":{"slug":"zettelkasten-personal-interpretation","title":"Zettelkasten personal interpretation","inboundReferenceNotes":[{"title":"Zettelkasten principles","slug":"zettelkasten-principles","childMdx":{"excerpt":"Niklas Luhmann wrote over 70 books and more than 400 scholarly articles using the  Zettelkasten  note taking method to  learn better, think…"}}],"inboundReferences":["zettelkasten-principles"],"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"I'm often not doing anything with the knowledge in my \\\"wiki\\\". I tried mind maps to connect information, however I never had great tools to search and organize information. The format is also often not plain text which makes it hard to script and use in the future when the tools become obsolete.\"), mdx(\"h3\", null, \"How a Zettelkasten can help me\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Be more productive by using my \\\"external brain\\\" more often\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Think more about how to relate new ideas to existing ideas\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Make a 'train of thought' visible\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Write down things more often\")), mdx(\"p\", null, \"For example: I can use the notes to store things I\\u2019d otherwise need to look up on the internet like shell programming tricks. I link each note to other notes. \"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/notes/published\"\n  }), \"#published\"), \" \"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"I'm often not doing anything with the knowledge in my \"wiki\". I tried mind maps to connect information, however I never had great tools to…"}}},"pageContext":{"slug":"zettelkasten-personal-interpretation"}},"staticQueryHashes":["318001574","3787687951","3787687951"]}