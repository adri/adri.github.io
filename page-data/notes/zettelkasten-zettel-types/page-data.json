{"componentChunkName":"component---plugins-gatsby-theme-brain-src-templates-brain-js","path":"/notes/zettelkasten-zettel-types","result":{"data":{"brainNote":{"slug":"zettelkasten-zettel-types","title":"Zettelkasten zettel types","inboundReferenceNotes":[{"title":"Zettelkasten principles","slug":"zettelkasten-principles"}],"inboundReferences":["zettelkasten-principles"],"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"To create some form of order in the Zettelkasten.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\\"Folgezettel' Followed by note: A new note adding on another note \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Outline note\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Connection note: Linking notes that need an explanation, e.g. links to notes from different topics.\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://zettelkasten.de/posts/understanding-hierarchy-translating-folgezettel/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"Source\")), mdx(\"p\", null, \"Luhmann used two kind of Zettelkastens. Bibliographical and a main one. The first contains references to literature with brief contents. The second contains notes about ideas, comments and thoughts.\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"/notes/published\"\n  }), \"#published\"), \" \"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"To create some form of order in the Zettelkasten. \"Folgezettel' Followed by note: A new note adding on another note  Outline note Connectionâ€¦"}}},"pageContext":{"slug":"zettelkasten-zettel-types"}},"staticQueryHashes":["318001574","3787687951"]}