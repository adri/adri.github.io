{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/post/cmd-duration-fish-shell","result":{"data":{"post":{"__typename":"MdxPost","slug":"/post/cmd-duration-fish-shell","title":"Command duration in fish shell","date":"2015-11-01","tags":null,"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"layout\": \"post\",\n  \"title\": \"Command duration in fish shell\",\n  \"slug\": \"/post/cmd-duration-fish-shell\",\n  \"summary\": \"Display how long the last command took and notify when a long running command is finished.\",\n  \"date\": \"2015-11-01T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"If you're interested in how long your commands run you might want to display the\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"duration of the last command in the right prompt. I've made a similar \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://adrian-philipp.com/post/shell-show-time-last-command-took/\"\n  }), \"blog post for ZSH in 2013\"), \" but I'm now using the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://fishshell.com/\"\n  }), \"fish shell\"), \".\"), mdx(\"p\", null, \"To make it work create the file \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"~/.config/fish/functions/rprompt.fish\"), \" with this content:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"function fish_right_prompt\\n    if test $CMD_DURATION\\n        # Show duration of the last command in seconds\\n        set duration (echo \\\"$CMD_DURATION 1000\\\" | awk '{printf \\\"%.3fs\\\", $1 / $2}')\\n        echo $duration\\n    end\\n\\n    echo \\\"\\uD83D\\uDE04\\\"\\nend\\n\")), mdx(\"p\", null, \"And then source it in your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"~/.config/fish/config.fish\"), \":\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \". ~/.config/fish/functions/rprompt.fish\\n\")), mdx(\"h2\", null, \"Update: Adding OS X notifications\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://dl.dropboxusercontent.com/u/13186339/blog/fish-cmd-notification.png\",\n    \"alt\": null\n  }))), mdx(\"p\", null, \"Sometimes it is nice to be notified when a long running command (> 10 sec) finishes.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"But because displaying notifications all the time can get quite annoying I've limited\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"the notifications to be only shown for some commands and when iTerm is not in focus.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"function fish_right_prompt\\n    if test $CMD_DURATION\\n        # Show duration of the last command\\n        set duration (echo \\\"$CMD_DURATION 1000\\\" | awk '{printf \\\"%.3fs\\\", $1 / $2}')\\n        echo $duration\\n\\n        # OS X notification when a command takes longer than notify_duration\\n        set notify_duration 10000\\n        set exclude_cmd \\\"bash|less|man|more|ssh\\\"\\n        if begin\\n                test $CMD_DURATION -gt $notify_duration\\n                and echo $history[1] | grep -vqE \\\"^($exclude_cmd).*\\\"\\n            end\\n\\n            # Only show the notification if iTerm is not focused\\n            echo \\\"\\n                tell application \\\\\\\"System Events\\\\\\\"\\n                    set activeApp to name of first application process whose frontmost is true\\n                    if \\\\\\\"iTerm\\\\\\\" is not in activeApp then\\n                        display notification \\\\\\\"Finished in $duration\\\\\\\" with title \\\\\\\"$history[1]\\\\\\\"\\n                    end if\\n                end tell\\n                \\\" | osascript\\n        end\\n    end\\n\\n    # Be nice :)\\n    echo \\\"\\uD83D\\uDE04\\\"\\nend\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"If you're interested in how long your commands run you might want to display the duration of the last command in the right prompt. I've madeâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/post/cmd-duration-fish-shell","formatString":"YYYY-MM-DD"}},"staticQueryHashes":["318001574","3787687951","3787687951"]}