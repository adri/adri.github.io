{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/post/graphdb","result":{"data":{"post":{"__typename":"MdxPost","slug":"/post/graphdb","title":"Vernetzte Daten: Graphdatenbanken","date":"2011-12-28","tags":null,"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"layout\": \"post\",\n  \"title\": \"Vernetzte Daten: Graphdatenbanken\",\n  \"slug\": \"/post/graphdb\",\n  \"summary\": \"Stark vernetzte Datenstrukturen profitieren von Graphdatenbanken.\",\n  \"date\": \"2011-12-28T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Immer wieder werden relationale Datenbanken f\\xFCr Datenstukturen gew\\xE4hlt, die stark vernetzt sind. Graphdatenbanken sind schneller und einfacher wenn es darum geht vernetzte Strukturen abzubilden. Abfragen die tief in die Struktur eindringen sind deutlich schneller und kompliziertes ORM (objektrelationales Mapping) entf\\xE4llt. Ein Beispiel eines kleinen sozialen Netzwerks zeigt, wie Graphdatenbanken das Leben eines Entwicklers erleichtern und viele Abfragen erheblich beschleunigen.\"), mdx(\"h2\", null, \"Die lieben Daten\"), mdx(\"p\", null, \"Relationale Datenbanken eignen sich sehr gut f\\xFCr tabellarische Daten. Was aber, wenn Daten nicht tabellarisch sind sondern stark miteinander vernetzt?\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://gephi.org/wp-content/themes/gephi/images/screenshots/layout2.png\",\n    \"alt\": null\n  }))), mdx(\"p\", null, \"Folgendes sind Beispiele f\\xFCr stark vernetzte Daten.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Netzwerke\"), \" wie beispielsweise:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hardwarenetze\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"soziale Netzwerke\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"das Internet\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Verkehrsnetze\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"geografische Daten\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wortnetze/Ontologien\")), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Baumstrukturen\"), \" wie beispielsweise:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ein Familienstammbaum\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"eine Firmenhierarchie\")), mdx(\"h2\", null, \"Beispiel: (Mini) soziales Netzwerk\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://cacoo.com/diagrams/7L1MGSnwQm6OUlvz-3CD3C.png\",\n    \"alt\": null\n  }))), mdx(\"p\", null, \"Angenommen wir m\\xF6chten die 4 abgebildeten Personen und deren Bekanntschaften modellieren. Unser Ziel ist es, Personen zu finden die Alice nicht kennt aber eine ihrer Bekanntschaften. Im Beispiel ist die Antwort einfach: Dave.\"), mdx(\"p\", null, \"Bei vielen weiteren Personen und Bekanntschaften wird man allerdings schnell die \\xDCbersicht verlieren (siehe erstes Bild). Darum wollen wir eine Datenstruktur entwickeln, die uns das Finden von unbekannten Personen abnimmt.\"), mdx(\"h2\", null, \"Der relationale Weg\"), mdx(\"p\", null, \"Relationale Datenbanken speichern Daten in Form von Tabellen. Unser Beispiel m\\xFCssen wir in diese Tabellenform bringen \\u2013 das ORM (objektrelationales Mapping).\"), mdx(\"p\", null, mdx(\"img\", _extends({\n    parentName: \"p\"\n  }, {\n    \"src\": \"https://cacoo.com/diagrams/tKWiRjvS9DCwSMio-8C499.png\",\n    \"alt\": null\n  }))), mdx(\"p\", null, \"Die Tabelle \\u201Cusers\\u201D enth\\xE4lt eine Liste der Namen sowie jeweils eine eindeutige Identifikationsnummer \\u201Cid\\u201D. Die Hilfstabelle \\u201Cusers_knows\\u201D verbindet zwei Personen anhand ihrer Identifikationsnummer \\u201Cuser_id\\u201D und \\u201Dknown_user_id\\u201D.\"), mdx(\"h2\", null, \"Der Graph-Weg\"), mdx(\"p\", null, \"Graphdatenbanken speichern Daten in Form von Graph-Strukturen. Ein Graph bestehet aus beliebig vielen Knoten und Kanten. Ein Knoten kann beliebig viele Kanten (Verbindungen) zu Knoten haben. Sowohl Knoten als auch Kanten k\\xF6nnen Eigenschaften besitzen.\"), mdx(\"p\", null, \"Was m\\xFCssen wir also tun um unser Beispiel in einer Graphdatenbank zu speichern? Nichts\\u2026 Jede Person entspricht einem Knoten mit dem Namen (Alice, Bob und so weiter) als Knoten-Eigenschaft \\u201Cname\\u201D. Kennt eine Person eine andere wird eine Kante zwischen den entsprechenden Knoten gezogen. Ein ORM entf\\xE4llt.\"), mdx(\"h2\", null, \"Warum Graphdatenbanken schneller sind\"), mdx(\"p\", null, \"Die Suche nach einer Person \\xFCber einen Index (meist B-Baum) ist mit der Laufzeit O(log(n)) m\\xF6glich.\"), mdx(\"p\", null, \"Bei einer relationalen Datenbank m\\xFCssen wir also zuerst die ID von Alice finden. Das kostet uns O(log(n)). Dann m\\xFCssen wir die IDs der Bekanntschaften von Alice finden \\u2013 ebenfalls in O(log(n)). Die IDs der Bekanntschaften der gefundenen Bekanntschaften kosten wieder O(log(n)) und letztendlich m\\xF6chten wir die Namen der unbekannten Personen herausfinden was ebenfalls wieder in O(log(n)) m\\xF6glich ist.\"), mdx(\"p\", null, \"Verwenden wir eine Graphstruktur ben\\xF6tigen wir nur f\\xFCr das Finden des Alice-Knotens eine Laufzeit von O(log(n)). Alle weiteren Abfragen sind in O(k) wobei k f\\xFCr die Anzahl der Bekanntschaften steht.\"), mdx(\"h2\", null, \"Quellen und weiterf\\xFChrendes Material\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Emil Eifrem \\xFCber \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.youtube.com/watch?v=2ElGO1P8v0c\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"Graphdatenbanken (Youtube video)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Marko Rodriguez \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"http://www.slideshare.net/slidarko/problemsolving-using-graph-traversals-searching-scoring-ranking-and-recommendation\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"\\xFCber Problem-Solving using Graph Traversals: Searching, Scoring, Ranking, and Recommendation (Pr\\xE4sentation)\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Opensource Graph-Visualisierung und Bearbeitungssoftware: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://gephi.org/\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"Gephi\"))));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Immer wieder werden relationale Datenbanken für Datenstukturen gewählt, die stark vernetzt sind. Graphdatenbanken sind schneller und…","timeToRead":2,"banner":null}},"pageContext":{"slug":"/post/graphdb","formatString":"YYYY-MM-DD"}},"staticQueryHashes":["318001574","3787687951"]}