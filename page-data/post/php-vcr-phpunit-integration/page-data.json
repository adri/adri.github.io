{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/post/php-vcr-phpunit-integration","result":{"data":{"post":{"__typename":"MdxPost","slug":"/post/php-vcr-phpunit-integration","title":"PHP-VCR: Integration with PHPUnit","date":"2013-11-02","tags":null,"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"layout\": \"post\",\n  \"title\": \"PHP-VCR: Integration with PHPUnit\",\n  \"slug\": \"/post/php-vcr-phpunit-integration\",\n  \"summary\": \"Quick instructions how to use PHP-VCR annotations in PHPUnit.\",\n  \"date\": \"2013-11-02T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Install \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://github.com/php-vcr/phpunit-testlistener-vcr\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"PHP-VCR PHPUnit-Testlistener\"), \" in order to integrate \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://php-vcr.github.io\",\n    \"target\": \"_blank\",\n    \"rel\": \"nofollow noopener noreferrer\"\n  }), \"PHP-VCR\"), \" with PHPUnit.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"# Add PHPUnit testlistener\\nphp composer.phar require php-vcr/phpunit-testlistener-vcr\\n\")), mdx(\"p\", null, \"You can use the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@vcr [cassette filename]\"), \" annotation to turn on PHP-VCR for a single test.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"/**\\n * @vcr [cassette_path]\\n */\\npublic function testInterceptsWithAnnotations()\\n{\\n    file_get_contents('http://example.com');\\n}\\n\")), mdx(\"p\", null, \"Replace \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"[cassette_path]\"), \" with the path to your cassette file relative to the cassette path (default \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"tests/fixtures\"), \"). Requests are intercepted and stored into the cassette file provided via the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"@vcr\"), \" annotation. PHP-VCR is automatically turned on and off.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Install  PHP-VCR PHPUnit-Testlistener  in order to integrate  PHP-VCR  with PHPUnit. You can use the  @vcr [cassette filename]  annotationâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/post/php-vcr-phpunit-integration","formatString":"YYYY-MM-DD"}},"staticQueryHashes":["318001574","3787687951"]}