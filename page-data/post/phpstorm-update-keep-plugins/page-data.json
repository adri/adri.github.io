{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/post/phpstorm-update-keep-plugins","result":{"data":{"post":{"__typename":"MdxPost","slug":"/post/phpstorm-update-keep-plugins","title":"How to keep plugins when updating PhpStorm","date":"2015-11-01","tags":null,"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"layout\": \"post\",\n  \"title\": \"How to keep plugins when updating PhpStorm\",\n  \"slug\": \"/post/phpstorm-update-keep-plugins\",\n  \"summary\": \"When updating PhpStorm my plugins seemed to be gone, but you can easily move them over.\",\n  \"date\": \"2015-11-01T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"When installing a new version of PhpStorm I had the issue that\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"only the settings were imported from the old version but not\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"the plugins \\u2013\\xA0so I had to install them again.\"), mdx(\"p\", null, \"Plugins are located in \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"~/Library/Application\\\\ Support/WebIdeXXX\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"where XXX stands for the PhpStorm version number. Here is an example\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"where I've updated from PhpStorm 9.5 to 10 (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"WebIde95\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"WebIde100\"), \").\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"# backup just in case\\ncp -R ~/Library/Application\\\\ Support/WebIde100 ~/Library/Application\\\\ Support/WebIde100_backup\\n\\n# move plugins over\\ncp -R ~/Library/Application\\\\ Support/WebIde95/* ~/Library/Application\\\\ Support/WebIde100/\\n\\n# test it, then remove the backup\\nrm -fr ~/Library/Application\\\\ Support/WebIde100_backup\\n\")), mdx(\"h1\", null));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"When installing a new version of PhpStorm I had the issue that only the settings were imported from the old version but not the plugins – so…","timeToRead":1,"banner":null}},"pageContext":{"slug":"/post/phpstorm-update-keep-plugins","formatString":"YYYY-MM-DD"}},"staticQueryHashes":["318001574","3787687951","3787687951"]}