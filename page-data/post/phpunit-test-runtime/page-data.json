{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-post-query-tsx","path":"/post/phpunit-test-runtime","result":{"data":{"post":{"__typename":"MdxPost","slug":"/post/phpunit-test-runtime","title":"PHPUnit find slow tests","date":"2014-01-26","tags":null,"description":null,"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"layout\": \"post\",\n  \"title\": \"PHPUnit find slow tests\",\n  \"slug\": \"/post/phpunit-test-runtime\",\n  \"summary\": \"When optimizing your testsuite it can be handy do find out how long each test takes to run. It would be nice to have a list of and how many seconds they took.\",\n  \"date\": \"2014-01-26T00:00:00.000Z\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"When optimizing your testsuite it can be handy do find out how long each test takes to run.\\nIt would be nice to have a list of and how many seconds they took, like this:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \" $ phpunit-report-runtime\\n 0.29307007789612, \\\"VCR\\\\\\\\Util\\\\\\\\SoapClientTest::testDoRequestHookDisabled\\\"\\n 0.16475319862366, \\\"VCR\\\\\\\\CassetteTest::testRecordAndPlaybackRequest\\\"\\n 0.092710018157959, \\\"VCR\\\\\\\\Util\\\\\\\\SoapClientTest::testDoRequest\\\"\\n 0.031861782073975, \\\"VCR\\\\\\\\LibraryHooks\\\\\\\\SoapTest::testShouldInterceptCallWhenEnabled\\\"\\n 0.026772022247314, \\\"VCR\\\\\\\\LibraryHooks\\\\\\\\AbstractFilterTest::testRegisterAlreadyRegistered\\\"\\n\")), mdx(\"p\", null, \"One solution is to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://stackoverflow.com/a/5218124/2618289\"\n  }), \"write your own test listener\"), \" and add it to your \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"phpunit.xml\"), \".\\nIf you don't like to modify your code, it is possible to parse out the time from \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"http://phpunit.de/manual/3.7/en/logging.html#logging.json\"\n  }), \"PHPUnit's JSON test result\"), \". Put the following alias in your shells initialization script (like \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \".bashrc\"), \").\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"alias phpunit-report-runtime=\\\"phpunit --log-json php://stdout \\\\\\n    | awk '\\\\$NF ~ '/,/' && \\\\$1 ~ /\\\\\\\"(test|time)\\\\\\\"/' \\\\\\n    | cut -d: -f2- \\\\\\n    | sed \\\\\\\"N;s/\\\\n/--/\\\\\\\"  \\\\\\n    | sed \\\\\\\"s/,//\\\\\\\"   \\\\\\n    | awk 'BEGIN{FS=\\\\\\\"--\\\\\\\"}; {print \\\\$2 \\\\$1}' | sort -r \\\\\\n    | head -n 5\\\"\\n\")), mdx(\"p\", null, \"Running the alias \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"phpunit-report-runtime\"), \" in your project prints the top 5 slowest tests with the slowest test at the top.\\nBy changing \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"head -n 5\"), \" you can adjust the amount of tests printed.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"When optimizing your testsuite it can be handy do find out how long each test takes to run.\nIt would be nice to have a list of and how manyâ€¦","timeToRead":1,"banner":null}},"pageContext":{"slug":"/post/phpunit-test-runtime","formatString":"YYYY-MM-DD"}},"staticQueryHashes":["318001574","3787687951","3787687951"]}